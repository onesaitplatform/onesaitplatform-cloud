        server {
            listen 8443 ssl;
            server_name _;

        	ssl_certificate /tmp/tls.crt;
        	ssl_certificate_key /tmp/tls.key;

			ssl_protocols SSLv2 SSLv3 TLSv1.3 TLSv1.2;
			ssl_session_cache    shared:SSL:1m;
			ssl_session_timeout  5m;
			ssl_session_tickets off;
			ssl_ciphers TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-CCM:ECDHE-ECDSA-AES256-CCM8:ECDHE-ECDSA-ARIA256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-CCM:ECDHE-ECDSA-AES128-CCM8:ECDHE-ECDSA-ARIA128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ARIA256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ARIA128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-CCM:DHE-RSA-AES256-CCM8:DHE-RSA-ARIA256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-CCM:DHE-RSA-AES128-CCM8:DHE-RSA-ARIA128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384;
			ssl_prefer_server_ciphers on;
			ssl_ecdh_curve X25519:secp521r1:secp384r1;

            add_header Strict-Transport-Security "max-age=31536000" always;

			location /controlpanel {
			    set $hostv "controlpanelservice:18000";
				proxy_pass http://controlpanelservice:18000/controlpanel;
				proxy_read_timeout 360s;
				
				proxy_http_version 1.1;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;            	
				proxy_set_header X-Forwarded-Proto http;
    		    #proxy_redirect ~^http://(.+)$ https://$1;
    		    
    		    # mandatory if port 80 is closed
            	proxy_redirect ~^http://controlpanelservice:18000(.+)$ https://$host$1;
            	
            	if ($uri ~ "^.*(swagger-ui|api-docs).*"){
            		set $hostv $http_host;
            	}	
            	
            	# may cause problems with http port closed
		        proxy_set_header Host $hostv;                                                                                           
			}		
                        
			location /dashboardengine/loginRest {	
				proxy_pass http://dashboardengineservice:18300;
			}
			
			location /dashboardengine/dsengine/solver { 
			    proxy_pass http://dashboardengineservice:18300;
			
				proxy_set_header X-Real-IP $remote_addr;		
				proxy_set_header Host $host;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_http_version 1.1;
				proxy_set_header Upgrade websocket;
				proxy_set_header Connection upgrade;
				proxy_read_timeout 86400;
			} 
			
			location /dashboardengine { 
			    proxy_pass http://dashboardengineservice:18300/dashboardengine;
				proxy_read_timeout 360s;
			
				# WebSocket support
				proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "upgrade";
				proxy_set_header X-Forwarded-For $remote_addr;
			} 

			location /devicesimulator { 	
         		proxy_pass http://devicesimulator:20000/devicesimulator;
				proxy_read_timeout 360s;
			
				# WebSocket support
				proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "upgrade";
				proxy_set_header X-Forwarded-For $remote_addr;
			} 
			
			location /router { 	
         		proxy_pass http://routerservice:20000/router;
				proxy_read_timeout 360s;
			
				# WebSocket support
				proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "upgrade";
				proxy_set_header X-Forwarded-For $remote_addr;
			} 										
		 
		 	location /iot-broker {
		 	    set $hostv "iotbrokerservice:19000";
				proxy_pass http://iotbrokerservice:19000/iot-broker;
				proxy_read_timeout 360s;
				
				if ($uri ~ "^.*(swagger-ui|api-docs).*"){
					set $hostv $http_host;
				}
				
				proxy_set_header Host $hostv;	
			
				# WebSocket support
				proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "upgrade";
				proxy_set_header X-Forwarded-For $remote_addr;
			}
			
		 	location /api-manager {
				proxy_pass http://apimanagerservice:19100/api-manager;
				proxy_read_timeout 360s;
				
				proxy_set_header Host $host;
				
				# WebSocket support
				proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "upgrade";
				proxy_set_header X-Forwarded-For $remote_addr;

			}			
			
		 	location /digitaltwinbroker {
			    set $hostv "digitaltwinbrokerservice:19300";
				proxy_pass http://digitaltwinbrokerservice:19300/digitaltwinbroker;
				proxy_read_timeout 360s;
			
			    if ($uri ~ "^.*(swagger-ui|api-docs).*"){
					set $hostv $http_host;
				}
				
				proxy_set_header Host $hostv;	
			
				# WebSocket support
				proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "upgrade";
				proxy_set_header X-Forwarded-For $remote_addr;
			}			
			
        	location /nodered/ {
                proxy_pass  http://flowengineservice:5050/;
           		proxy_read_timeout 360s;
           		
            	# WebSocket support
            	proxy_http_version 1.1;
            	proxy_set_header Upgrade $http_upgrade;
            	proxy_set_header Connection "upgrade";
            	proxy_set_header X-Forwarded-For $remote_addr;
        	}      	   			 
        	location /flowengine {
                proxy_pass  http://flowengineservice:20100;
           		proxy_read_timeout 360s;
           		
            	# WebSocket support
            	proxy_http_version 1.1;
            	proxy_set_header Upgrade $http_upgrade;
            	proxy_set_header Connection "upgrade";
            	proxy_set_header X-Forwarded-For $remote_addr;
        	} 
        	
        	location /monitoring {
                proxy_pass  http://monitoringuiservice:18100/monitoring;
           		proxy_read_timeout 360s;
				proxy_redirect ~^http://monitoringuiservice:18100(.+)$ https://$host$1;
           		
            	# WebSocket support
            	proxy_http_version 1.1;
            	proxy_set_header Upgrade $http_upgrade;
            	proxy_set_header Connection "upgrade";
            	proxy_set_header X-Forwarded-For $remote_addr;
        	}  

			location /oauth-server {
                proxy_pass  http://oauthservice:21000/oauth-server;
                proxy_read_timeout 360s;

	            # WebSocket support
        	    proxy_http_version 1.1;
               	proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header X-Forwarded-For $remote_addr;
                
				add_header 'Access-Control-Allow-Origin' '$http_origin' always;   
				add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type' always;                                                                                     
				add_header 'Access-Control-Allow-Credentials' 'true' always;                                                                                      
				add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS' always; 
				add_header 'Allow' 'GET,POST,OPTIONS' always;     

                if ($request_method = OPTIONS) {
                    return 204;
                }				            
            }		
			
			location /controlpanel/notebooks/app/ws {
				proxy_pass http://zeppelin:8080/ws;
				
            	# WebSocket support
            	proxy_http_version 1.1;
            	proxy_set_header Upgrade websocket;
            	proxy_set_header Connection "upgrade";
            	proxy_read_timeout 86400;			
			}          			   

            location /gravitee/management/ {
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Host $host;
                proxy_pass http://graviteemngservice:25000/management/;
            }

            location /management {
                return 301 https://$host/gravitee$request_uri;
            }

            location /gravitee/ui/ {
                proxy_pass http://graviteeuiservice:25002/;
            }

            location /gravitee/gateway/ {
                proxy_pass http://graviteegatewayservice:25001/;
            }
            
        	location /bpm-engine {
                proxy_pass http://bpmengine:27000/bpm-engine;
                proxy_set_header Host $host;
                
                proxy_redirect ~^http://(.+)$ https://$1;
        	} 
        	
            location /rules-engine {
            	proxy_pass http://rules-engine-service:20200/rules-engine;
            	proxy_set_header Host $host;
            }         	            
                        
        	location /web {
                alias /usr/local/webprojects;
        	}                          

        }

        server {
            listen 9443;
            server_name _;

            add_header Strict-Transport-Security "max-age=31536000" always;

 			location /controlpanel {
			    set $hostv "controlpanelservice:18000";
				proxy_pass http://controlpanelservice:18000/controlpanel;
				proxy_read_timeout 360s;
				
				proxy_http_version 1.1;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;            	
				proxy_set_header X-Forwarded-Proto http;
    		    #proxy_redirect ~^http://(.+)$ https://$1;
    		    
    		    # mandatory if port 80 is closed
            	proxy_redirect ~^http://controlpanelservice:18000(.+)$ https://$host$1;
            	
            	if ($uri ~ "^.*(swagger-ui|api-docs).*"){
            		set $hostv $http_host;
            	}	
            	
            	# may cause problems with http port closed
		        proxy_set_header Host $hostv;                                                                                           
			}		
                        
			location /dashboardengine/loginRest {	
				proxy_pass http://dashboardengineservice:18300;
			}
			
			location /dashboardengine/dsengine/solver { 
			    proxy_pass http://dashboardengineservice:18300;
			
				proxy_set_header X-Real-IP $remote_addr;		
				proxy_set_header Host $host;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_http_version 1.1;
				proxy_set_header Upgrade websocket;
				proxy_set_header Connection upgrade;
				proxy_read_timeout 86400;
			} 
			
			location /dashboardengine { 
			    proxy_pass http://dashboardengineservice:18300/dashboardengine;
				proxy_read_timeout 360s;
			
				# WebSocket support
				proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "upgrade";
				proxy_set_header X-Forwarded-For $remote_addr;
			} 

			location /devicesimulator { 	
         		proxy_pass http://devicesimulator:20000/devicesimulator;
				proxy_read_timeout 360s;
			
				# WebSocket support
				proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "upgrade";
				proxy_set_header X-Forwarded-For $remote_addr;
			}										
		 
		 	location /iot-broker {
		 	    set $hostv "iotbrokerservice:19000";
				proxy_pass http://iotbrokerservice:19000/iot-broker;
				proxy_read_timeout 360s;
				
				if ($uri ~ "^.*(swagger-ui|api-docs).*"){
					set $hostv $http_host;
				}
				
				proxy_set_header Host $hostv;	
			
				# WebSocket support
				proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "upgrade";
				proxy_set_header X-Forwarded-For $remote_addr;
			}
			
		 	location /api-manager {
				proxy_pass http://apimanagerservice:19100/api-manager;
				proxy_read_timeout 360s;
				
				proxy_set_header Host $host;
				
				# WebSocket support
				proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "upgrade";
				proxy_set_header X-Forwarded-For $remote_addr;

			}			
			
		 	location /digitaltwinbroker {
			    set $hostv "digitaltwinbrokerservice:19300";
				proxy_pass http://digitaltwinbrokerservice:19300/digitaltwinbroker;
				proxy_read_timeout 360s;
			
			    if ($uri ~ "^.*(swagger-ui|api-docs).*"){
					set $hostv $http_host;
				}
				
				proxy_set_header Host $hostv;	
			
				# WebSocket support
				proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "upgrade";
				proxy_set_header X-Forwarded-For $remote_addr;
			}			
			
        	location /nodered/ {
                proxy_pass  http://flowengineservice:5050/;
           		proxy_read_timeout 360s;
           		
            	# WebSocket support
            	proxy_http_version 1.1;
            	proxy_set_header Upgrade $http_upgrade;
            	proxy_set_header Connection "upgrade";
            	proxy_set_header X-Forwarded-For $remote_addr;
        	}      	   			 
        	location /flowengine {
                proxy_pass  http://flowengineservice:20100;
           		proxy_read_timeout 360s;
           		
            	# WebSocket support
            	proxy_http_version 1.1;
            	proxy_set_header Upgrade $http_upgrade;
            	proxy_set_header Connection "upgrade";
            	proxy_set_header X-Forwarded-For $remote_addr;
        	} 
        	
        	location /monitoring {
                proxy_pass  http://monitoringuiservice:18100/monitoring;
           		proxy_read_timeout 360s;
				proxy_redirect ~^http://monitoringuiservice:18100(.+)$ https://$host$1;
           		
            	# WebSocket support
            	proxy_http_version 1.1;
            	proxy_set_header Upgrade $http_upgrade;
            	proxy_set_header Connection "upgrade";
            	proxy_set_header X-Forwarded-For $remote_addr;
        	}  

			location /oauth-server {
                proxy_pass  http://oauthservice:21000/oauth-server;
                proxy_read_timeout 360s;

	            # WebSocket support
        	    proxy_http_version 1.1;
               	proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";                
                
				proxy_set_header Host $host:443;
				proxy_set_header X-Forwarded-Proto https;                 
                
				add_header 'Access-Control-Allow-Origin' '$http_origin' always;   
				add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type' always;                                                                                     
				add_header 'Access-Control-Allow-Credentials' 'true' always;                                                                                      
				add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS' always; 
				add_header 'Allow' 'GET,POST,OPTIONS' always;     

                if ($request_method = OPTIONS) {
                    return 204;
                }				            
            }		
			
			location /controlpanel/notebooks/app/ws {
				proxy_pass http://zeppelin:8080/ws;
				
            	# WebSocket support
            	proxy_http_version 1.1;
            	proxy_set_header Upgrade websocket;
            	proxy_set_header Connection "upgrade";
            	proxy_read_timeout 86400;			
			}          			   

            location /gravitee/management/ {
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Host $host;
                proxy_pass http://graviteemngservice:25000/management/;
            }

            location /management {
                return 301 https://$host/gravitee$request_uri;
            }

            location /gravitee/ui/ {
                proxy_pass http://graviteeuiservice:25002/;
				proxy_set_header Host $host:443;
				proxy_set_header X-Forwarded-Proto https;                
            }

            location /gravitee/gateway/ {
                proxy_pass http://graviteegatewayservice:25001/;
            }
            
        	location /bpm-engine {
                proxy_pass http://bpmengine:27000/bpm-engine;
                proxy_set_header Host $host;
                
                proxy_redirect ~^http://(.+)$ https://$1;
        	}  
        	
            location /rules-engine {
            	proxy_pass http://rules-engine-service:20200/rules-engine;
            	proxy_set_header Host $host;
            }         	          
                        
        	location /web {
                alias /usr/local/webprojects;
        	} 
        }
