<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.minsait.onesait.platform</groupId>
	<artifactId>onesaitplatform-parent</artifactId>
	<version>${revision}</version>
	<packaging>pom</packaging>

	<name>onesaitplatform-parent</name>
	<description>onesait Platform is the Digital Platform of Minsait, aka Open Platform</description>

	<properties>

		<revision>5.0.0-ce</revision>
		<docker.image.username>onesaitplatform</docker.image.username>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<java.version>17</java.version>
		<!-- para solucionar problema JDK>8 https://bugs.java.com/bugdatabase/view_bug.do?bug_id=8212636-->
		<!--con Java 8 no funciona esta propiedad, la ccomentamos de momento hasta que pasemos a Java 17 -->
		<maven.compiler.release>17</maven.compiler.release>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>

		<commons-io.version>2.4</commons-io.version>
		<javafaker.version>0.14</javafaker.version>
		<spring-boot.version>2.7.9</spring-boot.version>
		 <aspectj.version>1.9.8</aspectj.version>
		
		<spring-boot-admin-server.version>2.6.2</spring-boot-admin-server.version>
		<spring-boot-admin-starter-client.version>2.6.2</spring-boot-admin-starter-client.version>
		<httpclient.version>4.5.2</httpclient.version>
		<docker-spotify.version>1.0.0</docker-spotify.version>
		<springfox-swagger2.version>2.8.0</springfox-swagger2.version>
		<org.json.version>20190722</org.json.version>

		<!--LICENSE INFO -->
		<license.dir>${basedir}</license.dir>
		<project.name>onesait Platform</project.name>
		<project.year>2019</project.year>
		<project.organization.name>minsait by Indra</project.organization.name>
		<project.website>https://onesaitplatform.com</project.website>
		<skip.unit.tests>false</skip.unit.tests>
		<skip.integration.tests>true</skip.integration.tests>
		<maven.install>2.5.2</maven.install>
		<jsqlparser.version>4.6</jsqlparser.version>
		<sql-to-mongo.version>5.0.1</sql-to-mongo.version>
		<mongo-driver.version>4.3.1</mongo-driver.version>
		<mockito.version>2.22.0</mockito.version>
		<tika.version>1.20</tika.version>
		<onesaitplatform.quartzURL>jdbc:mysql://localhost:3306/onesaitplatform_scheduler?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true&amp;useSSL=false&amp;autoReconnect=true</onesaitplatform.quartzURL>
		<onesaitplatform.client.version>3.2.0-RELEASE</onesaitplatform.client.version>
		<hazelcast-client.version>3.12.12</hazelcast-client.version>
		<hazelcast.zookeeper.version>4.0.2</hazelcast.zookeeper.version>
		<hazelcast.version>5.1</hazelcast.version>
		<curator.version>5.4.0</curator.version>
		<jasypt.version>2.0.0</jasypt.version>
		<saml2.version>1.0.3.RELEASE</saml2.version>
		<gson.version>2.8.5</gson.version>
		<joda.version>2.10</joda.version>

		<jaspersoft.ws.version>1.0.1</jaspersoft.ws.version>
		<postgresql.version>42.2.8</postgresql.version>
		<mariadb.version>2.4.3</mariadb.version>
		<sqlserver.version>7.4.1.jre8</sqlserver.version>
		<mysql.driver.version>8.0.18</mysql.driver.version>
		<oracle.version>11.2.0.4</oracle.version>
		<guava.version>18.0</guava.version>
		<log4j-api.version>2.8</log4j-api.version>
		<spring.security.oauth.version>2.5.2.RELEASE</spring.security.oauth.version>
		<spring.security.oauth-autoconfigure.version>2.6.7</spring.security.oauth-autoconfigure.version>
		<minio.version>7.1.4</minio.version> <!-- Versiones 8+ son incompatibles con la version actual de Hazelcast -->
		<json-ld.version>1.2.0-java8</json-ld.version>
		<snakeyaml.version>1.30</snakeyaml.version>
		<thymeleaf-extras-springsecurity4.version>3.0.4.RELEASE</thymeleaf-extras-springsecurity4.version>
		<nashorn.version>15.4</nashorn.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.zalando</groupId>
				<artifactId>logbook-spring-boot-starter</artifactId>
				<version>2.14.0</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-yaml</artifactId>
				<version>2.13.2</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>2.13.2</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>2.13.2</version>
			</dependency>




			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>2.13.2</version>
			</dependency>
			<dependency>
				<groupId>org.yaml</groupId>
				<artifactId>snakeyaml</artifactId>
				<version>${snakeyaml.version}</version>
			</dependency>
			<dependency>
				<groupId>com.minsait.onesait.platform</groupId>
				<artifactId>onesaitplatform-plugin-interfaces</artifactId>
				<version>${project.version}</version>
			</dependency>


			<!-- https://mvnrepository.com/artifact/org.mongodb/mongodb-driver-sync -->
			<dependency>
				<groupId>org.mongodb</groupId>
				<artifactId>mongodb-driver-sync</artifactId>
				<version>${mongo-driver.version}</version>
			</dependency>

			<dependency>
				<groupId>org.mongodb</groupId>
				<artifactId>mongodb-driver-core</artifactId>
				<version>${mongo-driver.version}</version>
			</dependency>


			<dependency>
				<groupId>org.mongodb</groupId>
				<artifactId>bson</artifactId>
				<version>${mongo-driver.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-parent</artifactId>
				<version>${spring-boot.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.springframework.security.oauth.boot</groupId>
				<artifactId>spring-security-oauth2-autoconfigure</artifactId>
				<version>${spring.security.oauth-autoconfigure.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security.oauth</groupId>
				<artifactId>spring-security-oauth2</artifactId>
				<version>${spring.security.oauth.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>${log4j-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>${org.json.version}</version>
			</dependency>
			<dependency>
				<groupId>com.minsait.onesait.platform</groupId>
				<artifactId>onesaitplatform-comms-protocol</artifactId>
				<version>${onesaitplatform.client.version}</version>
			</dependency>
			<dependency>
				<groupId>com.minsait.onesait.platform</groupId>
				<artifactId>onesaitplatform-java-client</artifactId>
				<version>${onesaitplatform.client.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.javafaker</groupId>
				<artifactId>javafaker</artifactId>
				<version>${javafaker.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${springfox-swagger2.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${springfox-swagger2.version}</version>
			</dependency>



			<dependency>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker-spotify.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>1.2</version>
			</dependency>

			<dependency>
				<groupId>org.apache.tika</groupId>
				<artifactId>tika-core</artifactId>
				<version>${tika.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>${gson.version}</version>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
			</dependency>

			<!-- Zookeeper SPI -->
			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-test</artifactId>
				<version>${curator.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-x-discovery</artifactId>
				<version>${curator.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast-zookeeper</artifactId>
				<version>${hazelcast.zookeeper.version}</version>
			</dependency>

			<!-- Hazelcast -->
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast-spring</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast-client</artifactId>
				<version>${hazelcast-client.version}</version>
			</dependency>

			<!-- Jasypt encription -->
			<dependency>
				<groupId>com.github.ulisesbocchio</groupId>
				<artifactId>jasypt-spring-boot-starter</artifactId>
				<version>${jasypt.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.security.extensions</groupId>
				<artifactId>spring-security-saml2-core</artifactId>
				<version>${saml2.version}</version>
			</dependency>



			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<dependency>
				<groupId>com.jaspersoft.adapter.webservice</groupId>
				<artifactId>jaspersoft-webservices-dataadapter</artifactId>
				<version>${jaspersoft.ws.version}</version>
			</dependency>

			<!-- Persistence external dependencies -->
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgresql.version}</version>
			</dependency>

			<dependency>
				<groupId>org.mariadb.jdbc</groupId>
				<artifactId>mariadb-java-client</artifactId>
				<version>${mariadb.version}</version>
			</dependency>

			<dependency>
				<groupId>com.microsoft.sqlserver</groupId>
				<artifactId>mssql-jdbc</artifactId>
				<version>${sqlserver.version}</version>
			</dependency>

			<dependency>
				<groupId>com.oracle</groupId>
				<artifactId>ojdbc6</artifactId>
				<version>${oracle.version}</version>
			</dependency>

			<!-- minio -->
			<dependency>
				<groupId>io.minio</groupId>
				<artifactId>minio</artifactId>
				<version>${minio.version}</version>
			</dependency>

			<dependency>
				<groupId>com.apicatalog</groupId>
				<artifactId>titanium-json-ld</artifactId>
				<version>${json-ld.version}</version>
			</dependency>

			<dependency>
    			<groupId>org.openjdk.nashorn</groupId>
    			<artifactId>nashorn-core</artifactId>
    			<version>${nashorn.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<repositories>
		<repository>
			<id>onesait platform releases</id>
			<url>https://nexus.onesaitplatform.com/nexus/content/repositories/releases/</url>
		</repository>
		<repository>
			<id>onesait platform snapshots</id>
			<url>https://nexus.onesaitplatform.com/nexus/content/repositories/snapshots/</url>
		</repository>
		<repository>
			<id>mavencentral</id>
			<url>https://repo.spring.io/milestone</url>
		</repository>
		<repository>
			<id>central Maven</id>
			<url>https://repo1.maven.org</url>
			<!-- TEMPORAL <url>https://central.maven.org/maven2/</url> -->
		</repository>
		<repository>
			<id>confluent</id>
			<url>https://packages.confluent.io/maven/</url>
		</repository>

		<repository>
			<id>jcenter</id>
			<url>https://jcenter.bintray.com/</url>
		</repository>
	</repositories>

	<modules>
		<!-- <module>sofia2-springboot-autoconfigure-starter</module> -->
		<!-- PLUGIN LIBRARIES -->
		<module>plugins/interfaces</module>
		<module>plugins/keycloak-onesaitplatform</module>

		<!--LIBRARIES -->
		<module>libraries/commons</module>
		<module>libraries/audit</module>
		<module>libraries/cache</module>
		<module>libraries/onelog</module>

		<!--SECURITY -->
		<module>libraries/security/security-ui-ri</module>
		<module>libraries/security/security-ldap-ri</module>
		<module>libraries/security/security-oauth2-ri</module>
		<module>libraries/security/kafka-login</module>
		<module>libraries/security/spark-auth</module>

		<module>services/nodered-auth-services</module>

		<!--PERSISTENCE -->
		<module>libraries/persistence/interfaces</module>
		<module>libraries/persistence/mongodb-impl</module>
		<module>libraries/persistence/elasticsearch-impl</module>
		<module>libraries/persistence/external-impl</module>
		<module>libraries/persistence/cosmosdb-impl</module>
		<module>libraries/persistence/no-persistence-impl</module>
		<module>libraries/persistence/timescaledb-impl</module>
		<module>libraries/persistence/prestodb-impl</module>
		<module>libraries/persistence/ai-mindsdb</module>
		<module>libraries/persistence/nebula-graph</module>

		<!--DIGITAL TWIN -->
		<module>libraries/digital-twin/digital-twin-library</module>
		<!-- module>libraries/digital-twin/sensehat-library</module -->

		<!--CONFIG -->
		<module>libraries/config/model</module>
		<module>libraries/config/resources</module>

		<!--ROUTER -->
		<module>libraries/router/router-client-base</module>
		<module>libraries/router/router-core</module>
		<module>libraries/router/router-client-rest</module>
		<module>libraries/router/advicer-client-rest</module>
		<module>libraries/binary-repository/</module>

		<!--METRICS -->
		<module>libraries/metrics/metrics-input</module>
		<module>libraries/metrics/metrics-aggregator</module>

		<!--PASSWORD ENCRYPTOR -->
		<module>libraries/pass-encryptor</module>

		<!--SERVICES -->
		<module>services/business-services</module>
		<module>services/mail-services</module>
		<module>services/social-services</module>
		<module>services/flow-engine-services</module>
		<module>services/config-services</module>
		<module>services/persistence-services</module>
		<module>services/quartz-services</module>
		<module>services/router/router-services</module>
		<module>services/router/router-crud</module>
		<module>services/router/router-digitaltwin</module>

		<!--MODULES -->
		<module>modules/config-init</module>
		<module>libraries/iot-broker-plugable</module>
		<module>modules/iot-broker</module>
		<module>modules/control-panel</module>
		<module>modules/monitoring-ui</module>
		<module>modules/api-manager</module>
		<module>modules/planner</module>
		<module>modules/semantic-inf-broker</module>
		<module>modules/audit-router</module>
		<module>modules/cache-server</module>
		<module>modules/flow-engine</module>
		<module>modules/dashboard-engine</module>
		<module>modules/device-simulator</module>
		<module>modules/oauth-server</module>
		<module>modules/digitaltwin-broker</module>
		<module>modules/rtdb-maintainer</module>
		<module>modules/rules-engine</module>
		<module>modules/bpm-engine</module>
		<module>modules/rest-planner</module>
		<module>modules/microservices-gateway</module>
		<module>modules/report-engine</module>
		<module>modules/serverless-manager</module>
		<module>modules/analytics-engine-launcher-manager</module>


		<!--<module>modules/scripting-engine</module -->
		<!--<module>modules/streaming-twitter</module> -->

		<!--THEMES -->
		<module>libraries/themes/onesaitplatform-base-theme</module>
		<module>libraries/themes/onesaitplatform-iwire-theme</module>

		<!--CONTRIBUTIONS -->
		<module>libraries/contributions/spring-boot-admin-server-ui-onesaitplatform</module>
		<module>libraries/contributions/spring-boot-admin-server-ui-login</module>

		<!--<module>modules/scripting-engine</module -->
		<!--<module>modules/streaming-twitter</module> -->


	</modules>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>2.6.4</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<version>1.1.0</version>
				<configuration>
					<updatePomFile>true</updatePomFile>
					<flattenMode>resolveCiFriendliesOnly</flattenMode>
				</configuration>
				<executions>
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
					</execution>
					<execution>
						<id>flatten.clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<header>${license.dir}/LICENSE-code</header>
					<properties>
						<owner>Indra</owner>
						<email>onesaitplatform@minsait.com</email>
					</properties>
					<includes>
						<include>**/*.java</include>
						<include>src/main/resources/templates/**/*.html</include>
					</includes>
					<excludes>
						<exclude>**/*.xml</exclude>
						<exclude>**/*.js</exclude>
						<exclude>**/*.css</exclude>
						<exclude>src/test/resources/**</exclude>
						<exclude>examples/android-firebase-notifications-example/**</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>format</goal>
						</goals>
						<phase>process-sources</phase>
					</execution>
				</executions>
			</plugin>

			<!--as exists com.mycila:license-maven-plugin call this with mvn org.codehaus.mojo:license-maven-plugin:2.0.0:aggregate-add-third-party -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>2.0.0</version>
				<executions>
					<execution>
						<id>default-cli</id>
						<configuration>
							<sortArtifactByName>true</sortArtifactByName>
							<useMissingFile>false</useMissingFile>
							<outputDirectory>${project.basedir}</outputDirectory>
							<thirdPartyFilename>THIRD-PARTY-LICENSES.txt</thirdPartyFilename>
							<excludedLicenses>License A|licenseB</excludedLicenses>
							<excludedGroups>com.minsait.onesait.platform</excludedGroups>
							<licenseMerges>
								<licenseMerge>Apache License, Version 2.0|The Apache Software
									License, Version 2.0</licenseMerge>
								<licenseMerge>Apache License, Version 2.0|Apache Public License
									2|Apache Public License 2.|Apache License 2.0</licenseMerge>
								<licenseMerge>Apache License, Version 2.0|Apache Software
									License, version 2.0|Apache Software License - Version 2.0</licenseMerge>
								<licenseMerge>Apache License, Version 2.0|Apache 2|Apache
									2.0|Apache Software License, Version 2.0</licenseMerge>
								<licenseMerge>The BSD License|BSD</licenseMerge>
							</licenseMerges>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>3.1.0-RC7</version>
				<dependencies>
					<!-- overwrite dependency on spotbugs if you want to specify the version 
						of spotbugs -->
					<dependency>
						<groupId>com.github.spotbugs</groupId>
						<artifactId>spotbugs</artifactId>
						<version>3.1.1</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.0</version>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/jacoco.exec</destFile>
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/jacoco-it.exec</destFile>
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.21.0</version>
				<configuration>
					<argLine>${surefireArgLine}</argLine>
					<skipTests>${skip.unit.tests}</skipTests>
					<excludedGroups>com.minsait.onesait.platform.commons.testing.IntegrationTest</excludedGroups>
					<useSystemClassLoader>false</useSystemClassLoader>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>add-integration-test-sources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/integration-test/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-integration-test-resources</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<filtering>true</filtering>
									<directory>src/integration-test/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.21.0</version>
				<executions>
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/*.java</include>
							</includes>
							<groups>com.minsait.onesait.platform.commons.testing.IntegrationTest</groups>
							<skipTests>${skip.integration.tests}</skipTests>
							<argLine>${failsafeArgLine}</argLine>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.0.0</version>
				<inherited>false</inherited>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${script.prefix}copydash${script.extension}</executable>
							<workingDirectory>../tools/Dashboard/</workingDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		
		<pluginManagement> 
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.10.1</version>
				</plugin>
			</plugins>
		</pluginManagement>


		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.yml</include>
					<include>**/*.*</include>
				</includes>
			</resource>
		</resources>
	</build>


	<profiles>
		<profile>
			<id>development</id>
			<properties>
				<onesaitplatform.quartzURL>jdbc:mysql://localhost:3306/onesaitplatform_scheduler?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true&amp;useSSL=false</onesaitplatform.quartzURL>
			</properties>
		</profile>
		<profile>
			<id>integration</id>
			<!-- <modules> <module>modules/video-broker</module> </modules> -->
			<properties>
				<onesaitplatform.quartzURL>jdbc:mysql://localhost:3307/onesaitplatform_scheduler?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true&amp;useSSL=false</onesaitplatform.quartzURL>
			</properties>
		</profile>
		<profile>
			<id>unit-test</id>
			<properties>
				<skip.unit.tests>false</skip.unit.tests>
			</properties>
		</profile>
		<profile>
			<id>integration-test</id>
			<properties>
				<skip.integration.tests>false</skip.integration.tests>
			</properties>
		</profile>
		<profile>
			<id>no-test</id>
			<properties>
				<skip.unit.tests>true</skip.unit.tests>
				<skip.integration.tests>true</skip.integration.tests>
			</properties>
		</profile>

		<!-- INI artifacts deployment section -->
		<profile>
			<id>releases</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<modules>
				<module>libraries/commons</module>
				<module>libraries/comms-protocol</module>
				<module>libraries/digital-twin/digital-twin-library</module>
				<module>libraries/client-libraries/springboot-client</module>
				<module>libraries/client-libraries/java-client</module>
			</modules>
			<distributionManagement>
				<repository>
					<id>releases</id>
					<url>https://nexus.onesaitplatform.com/nexus/content/repositories/releases/</url>
				</repository>
			</distributionManagement>
		</profile>

		<profile>
			<id>snapshots</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<modules>
				<module>libraries/commons</module>
				<module>libraries/comms-protocol</module>
				<module>libraries/digital-twin/digital-twin-library</module>
				<module>libraries/client-libraries/springboot-client</module>
				<module>libraries/client-libraries/java-client</module>
			</modules>
			<distributionManagement>
				<repository>
					<id>snapshots</id>
					<url>https://nexus.onesaitplatform.com/nexus/content/repositories/snapshots/</url>
				</repository>
			</distributionManagement>
		</profile>
		<!-- END artifacts deployment section -->

		<!-- Dashboard Compile Section -->
		<profile>
			<id>Windows</id>
			<activation>
				<os>
					<family>Windows</family>
				</os>
			</activation>
			<properties>
				<script.extension>.bat</script.extension>
				<script.prefix></script.prefix>
			</properties>
		</profile>
		<profile>
			<id>unix</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<properties>
				<script.extension>.sh</script.extension>
				<script.prefix>./</script.prefix>
			</properties>
		</profile>
		<!-- En Dashboard Compile Section -->
	</profiles>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.21.0</version>
			</plugin>
		</plugins>
	</reporting>
</project>
