server:
   max-http-header-size: ${MAX_HTTP_HEADER_SIZE}

master:
   datasource:
     hikari:
      jdbc-url: ${CONFIGDBMASTERURL}
      username: ${CONFIGDBUSER}
      password: ${CONFIGDBPASS}
      maximum-pool-size: ${CONFIGDB_MAX_ACTIVE}
      driver-class-name: ${CONFIGDB_DRIVER}
edge.base.url: ${EDGE_BASE_URL}
onesaitplatform:
   microservices:
      remedy:
         enabled: ${REMEDY_MS_ENABLED}
         url: ${REMEDY_MS_URL}
         token: ${REMEDY_MS_TOKEN}
   encryption:
      key: ${ENCRYPTION_KEY}
      iteration-count: ${ENCRYPTION_ITERATIONS}
   multitenancy:
      enabled: ${MULTITENANCY_ENABLED}
   authentication:
      oauth:
        enabled: ${OAUTH_SSO_ENABLED}
        osp-keycloak: ${USE_KEYCLOAK}
      configdb:
        acl:
          enabled: ${CONFIGDB_ACL_ENABLED}
          list: ${CONFIGDB_ACL_LIST}
      twofa:
        enabled: ${TWOFA_ENABLED}
      provider: ${AUTH_PROVIDER}
      X509:
        enabled: ${X509_ENABLED}
        id_att: ${X509_ID_ATT}
        id_att_regex: ${X509_ID_REGEX}
        cn_regex: ${X509_CN_REGEX}
        admin_user_id: ${X509_ADMIN_ID}
        id_hash: ${X509_HASH_ID}
      cas:
        base_url: ${CAS_BASEURL}
        service_id: https://${SERVER_NAME}/controlpanel/login/cas
        login_url: /cas/login
        logout_url: https://${SERVER_NAME}/cas/logout
        attributes:
            mail: ${CAS_ATT_MAIL}
            mail_suffix: ${CAS_MAIL_SUFFIX}
            fullName: ${CAS_ATT_NAME}
      saml:
        admin_user_id: ${AD_ADMIN_USERID}
        idp_metadata: ${IDP_METADATA}
        entity_id: ${ENTITY_ID}
        entity_url: ${ENTITY_URL}
        unauthorized_url: ${SAML_UNAUTHORIZED_URL}
        jks:
           uri: ${JKS_URI}
           store_pass: ${JKS_PASS}
           key_alias: ${KEY_ALIAS}
           key_pass: ${KEY_PASS}
        context:
           samlIncludePort: ${SAML_INCLUDE_PORT}
           samlScheme: ${SAML_SCHEME}
           samlServerName: ${SAML_SERVER_NAME}
   dashboardengine:
      url: https://${SERVER_NAME}/controlpanel/dashboards/editfulliframe/
      url.view: https://${SERVER_NAME}/controlpanel/dashboards/viewiframe/
      url.only.view: https://${SERVER_NAME}/controlpanel/dashboards/view/
   notebook:
      url: https://${SERVER_NAME}/controlpanel/notebooks/app/
   controlpanel:
      url: https://${SERVER_NAME}/controlpanel
      realms:
         max.users.app.assign.table: ${MAX_USERS_APP_ASSIGN_TABLE}
         max.users.combo: ${MAX_USERS_COMBO}
   binaryfiles: 
          limit: ${BINARYFILESLIMIT}
          showAuditFiles: ${BINARYFILESSHOWAUDITFILES}
   database.mongodb:
      database: ${REALTIMEDBNAME}
      servers: ${REALTIMEDBSERVERS}
      authenticationDatabase: ${REALTIMEDBAUTHDB}
      useAuth: ${REALTIMEDBUSEAUTH}
      username: ${REALTIMEDBUSER}
      password: ${REALTIMEDBPASS}
      writeConcern: ${REALTIMEDBWRITECONCERN}
      quasar.connector.http.endpoint: http://${QUASARHOST}:${QUASARPORT}/query/fs/
   database.elasticsearch.enabled: ${ELASTICSEARCH_ENABLED}
   database.opensearch.enabled: ${OPENSEARCH_ENABLED}
   database.minio:
      access-key: ${MINIO_ROOT_USER}
      secret-key: ${MINIO_ROOT_PASSWORD}
   datalabeling:
      user: ${DATALABELING_USER}
      password: ${DATALABELING_PASS}
   database.timescaledb:
      enabled: ${TIMESCALE_ENABLED}
      url: ${TIMESCALE_URL}
      user: ${TIMESCALE_USER}
      password: ${TIMESCALE_PASS}
   urls:
    iotbroker: https://${SERVER_NAME}
   flowengine:
    startupdomain.wait.seconds: 15
    services:
      request.timeout.ms: 5000
      baseurl: http://flowengineservice:20100/flowengine/admin
      proxyurl: https://${SERVER_NAME}/nodered/
    port:
      domain:
        min: ${FLOW_DOMAIN_MIN_PORT}
        max: ${FLOW_DOMAIN_MAX_PORT}
   dashboard:
     themeonesait.css: https://${SERVER_NAME}/controlpanel/static/vendor/onesait-ds/lib/theme-onesait/index.css
     themeonesait.js: https://${SERVER_NAME}/controlpanel/static/vendor/onesait-ds/lib/index.js
     vue.js: https://${SERVER_NAME}/controlpanel/static/vendor/onesait-ds/lib/vue.min.js
     export:
      url.view: https://${SERVER_NAME}/controlpanel/dashboards/viewiframe/
      url.gadgets: https://${SERVER_NAME}/controlpanel/gadgets/view/
   webproject:
      rootfolder.path: /usr/local/webprojects/
      baseurl: https://${SERVER_NAME}/web/
      template.zip: https://${SERVER_NAME}/controlpanel/static/wtop/wtop.zip
   iotbroker.plugable:
     gateway:
      kafka:
        enable: ${KAFKAENABLED}
        brokers: ${KAFKABROKERS}
        host: ${KAFKAHOST}
        port: ${KAFKAPORT}
        user: admin
        password: admin-secret
        partitions: 10
        replication: 1
   analytics.notebook:
      zeppelinHostname: zeppelin
      platformAuth: ${NOTEBOOKPLATFORMAUTH}
   analytics.modelsmanager:
      hostname: modelsmanager
   analytics.dataflow:
      streamsetsHostname: streamsets
      version: ${STREAMSETS_SDC_VERSION}
   router.metrics.query.enabled: ${QUERY_METRICS_ENABLED}
   router.alternativeURL: http://routerservice:20000/router/router/
   kafka.burrow.monitoring:
      host.url : http://kafkamonitoringservice:18400
   ksql.server.url: ${KSQLSERVER}
   kafka.ksql.enable: ${KSQLENABLE}
   audit:
      global.notify: ${AUDITGLOBALNOTIFY}
   restPlanner:
      checkSSL: ${RESTPLANNER_CHECKSSL}
   user.registry.validation.url: https://${SERVER_NAME}/controlpanel/users/validateNewUserFromLogin/
   user.reset.validation.url: https://${SERVER_NAME}/controlpanel/users/validateResetPassword/
   user.password.generated.url: https://${SERVER_NAME}/controlpanel/users/showGeneratedCredentials/
   secure.cookie: true
   secure.cors: ${CORS_ALLOWED_URLS}
   secure.x-frame-options: ${SECURE_XFRAMEOPTIONS}
   hazelcast.service.discovery.strategy: ${HZ_SERVICE_DISCOVERY_STRATEGY}
   hazelcast.service.discovery.zookeeper.url: ${HZ_ZOOKEEPER_URL}
   queryTool:
      allowedOperations: ${QUERY_TOOL_ALLOWED_OPERATIONS}
   metrics:
      collector.endpoint: http://auditrouter:20002/router/metrics-collector/refresh
      enabled: ${ENABLE_METRICS}
   graylog:
      enabled: ${GRAYLOG_ENABLED}
      host: ${GRAYLOG_HOST}
      port: ${GRAYLOG_PORT}
   filestore:
      type: ${FILE_STORE} #MONGO_GRIDFS, FILE, MINIO
   gitlab:
         manager.server: ${GITLAB_MANAGER_URL}
ldap:
  url: ${LDAP_URL}
  base: ${LDAP_BASE_DN}
  ignorepartialresult: ${LDAP_IGNORE_PARTIAL_RESULT}
  username: ${LDAP_ADMIN_DN}
  password: ${LDAP_ADMIN_PASSWORD}
  defaultRole: ${LDAP_DEFAULT_ROLE}
  administratorWhitelist: ${LDAP_ADMIN_WHITELIST}
  groupWhitelist: ${LDAP_GROUP_WHITELIST}
  platformRolesGroup:
      administrator: ${LDAP_ADMINISTRATOR_DN}
      datascientist: ${LDAP_ANALYTICS_DN}
      dataviewer: ${LDAP_DATAVIEWER_DN}
      developer: ${LDAP_DEVELOPER_DN}
      devops: ${LDAP_DEVOPS_DN}
      operations: ${LDAP_OPERATIONS_DN}
      partner: ${LDAP_PARTNER_DN}
      platformAdmin: ${LDAP_PLATFORM_ADMIN_DN}
      sysAdmin:  ${LDAP_SYS_ADMIN_DN}
      user:  ${LDAP_USER_DN}
  attributesMap:
     userId: ${LDAP_USERID_ATT}
     mail: ${LDAP_MAIL_ATT}
     cn: ${LDAP_CN_ATT}
     groupOfNames: ${LDAP_GROUP_OF_NAMES_ATT}
  rolesmemberattribute: ${LDAP_ROLES_MEMBER_ATT}
  authentication.regex: ${LDAP_AUTH_REGEX}

spring:
   datasource:
     hikari:
      jdbc-url: ${CONFIGDBURL}${DBADDPROPS}
      username: ${CONFIGDBUSER}
      password: ${CONFIGDBPASS}
      connection-timeout: ${DS_MAX_WAIT_MILLIS}
      maximum-pool-size: ${DS_MAX_ACTIVE}
      minimum-idle: ${DS_MIN_IDLE}
      driver-class-name: ${CONFIGDB_DRIVER}
   boot.admin: #Spring Boot Admin Config
      client.url: http://monitoringuiservice:18100/monitoring
      client.instance.service-url: http://controlpanelservice:${server.port}${server.servlet.contextPath}/
      client.username: ${SBA_USERNAME}
      client.password: ${SBA_SECRET}
   http:
      multipart:
         max-file-size: ${HTTP_MAX_FILE_SIZE}
         max-request-size: ${HTTP_MAX_REQUEST_SIZE}
   data.mongodb:
      host: ${REALTIMEDBSERVERS}
   elasticsearch.jest:
      uris: http://${ELASTICDBHOST}:${ELASTICDBPORT}
   jpa:
      properties.hibernate.dialect: ${CONFIGDB_DIALECT}

quartz:
    datasource:
      hikari:
        jdbc-url: ${SCHEDULERDBBURL}${DBADDPROPS}
        username: ${SCHEDULERDBBUSER}
        password: ${SCHEDULERDBBPASS}
        driver-class-name: ${SCHEDULERDBBDRIVER}
    jpa:
      properties.hibernate.dialect: ${SCHEDULERDBBDIALECT}
    driverDelegateClass: ${QUARTZ_DRIVER}
## LOGGING CONF
logging:
   file.path: /var/log/platform-logs
   level:
      org.zalando.logbook: ${HTTP_LOG_LEVEL}

gravitee:
  enable: ${GRAVITEE_ON}
  clientId: ${GRAVITEE_CLIENTID}
  clientSecret: ${GRAVITEE_CLIENTSECRET}
  corsEnabled: ${GRAVITEE_CORS_ENABLED}

cloud-gateway:
  url: ${CLOUD_GATEWAY}

captcha:
  enable: ${CAPTCHA_ON}
  token: ${CAPTCHA_TOKEN}

splash:
  enable: ${SPLASH_ON}
  everyXHours: ${SPLASH_EVERYXHOURS}

dynamic-load-balancer:
  enable: ${DYNAMIC_LOADBALANCER_ENABLED}
  url: ${DYNAMIC_LOADBALANCER_ENDPOINT}

csrf:
  enable: ${CSRF_ON}

opendata:
  url: ${OPENDATA_URL}
  max-bulk-size: ${OPENDATA_MAX_BULK_SIZE}

proxy-mail:
  host: ${MAIL_PROXY_HOST}
  port: ${MAIL_PROXY_PORT}

security:
  signing-key: ${JWT_KEY}
  jwt:
    client-secret: ${JWT_CLIENT_SECRET}
    expiration-time: ${JWT_EXPIRATION_TIME}
