##--spring.config.name=apimanager
##security.require_ssl: true
server: ## Config Web Server
   max-http-header-size: 20000
   port: 19100
   servlet:
      contextPath: /api-manager
   jetty.max-http-form-post-size: 20000000     
   forward-headers-strategy: native 


logbook:
  exclude:
     - ${server.servlet.contextPath}/actuator/**
     - ${server.servlet.contextPath}/static/**
     - ${server.servlet.contextPath}/themes/**
     - ${server.servlet.contextPath}/swagger-ui/**
  write:
     max-body-size: 10000
     
master: 
   datasource:
      hikari: 
        jdbc-url: jdbc:mysql://localhost:3306/onesaitplatform_master_config?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&autoReconnect=true
        username: root
        password: ENC(v6o0Jud8aASYCkRb+u0RTICFUR8Pd5ph) 
        driver-class-name: com.mysql.cj.jdbc.Driver
        pool-name: master-hikari-pool
        minimum-idle: 1
        maximum-pool-size: 2
        connection-timeout: 10000
     
onesaitplatform: #Config onesaitplatform specific
   secure:
      cookie: false
      cors: "*"
   multitenancy:
      enabled: true
   audit.global.notify: true
   authentication:
      provider: configdb
      oauth:
        osp-keycloak: false
      configdb:
        acl:
          enabled: false
          list: administrator,analytics,dataviewer,demo_developer,demo_user,developer,operations,partner,sysadmin,user
   apimanager:
      cacheable: false
   binary-repository:
      type: mongo
      filepath: /usr/local/files/
   iotbroker.plugable:
      gateway:
         kafka:
            enable: false
            host: localhost
            port: 9092
            partitions: 1
            replication: 1
            prefix: ontology_
            group: ontologyGroup
            topic.pattern: ontology.*
            router.topic: router
            consumer.consumersCount : 10
            consumer.seekTo : beginning 
            consumer.group : kafkaGroup
            consumer.maxPollRecords : 5000
   database.elasticsearch:
      database: onesaitplatform_rtdb_es
      sql.maxHttpConnections: 10
      sql.maxHttpConnectionsPerRoute: 10
      sql.connectionTimeout.millis: 10000
      sql.connector.http.endpoint: http://localhost:9200
      url: localhost
      port: 9300
   database.mongodb:
      quasar.maxHttpConnections: 10
      quasar.maxHttpConnectionsPerRoute: 10
      quasar.connectionTimeout.millis: 10000
      quasar.connector.http.endpoint: http://localhost:18200/query/fs/ 
   router.avoidsslverification: true
   router.alternativeURL: http://localhost:20000/router/router/ 
   apimanager.audit.enabled: true
   metrics:
      collector.endpoint: http://localhost:20002/router/metrics-collector/refresh
      enabled: true
   graylog:
      enabled: false
      host: 127.0.0.1
      port: 12201

      
management.endpoints.web.exposure.include: "*"
management.endpoint.health.show-details: always
spring: ## General Config  
   main:
      allow-circular-references: true
      allow-bean-definition-overriding: true
   application.name: onesaitplatform-api-manager
   boot.admin: #Spring Boot Admin Config   
      client.url: http://localhost:18100/monitoring
      client.username: operations
      client.password: ENC(2Xd2AOD2NrMaWs915/st8C4ILo3qlHXv)
      client.instance.metadata.user.name: ${spring.boot.admin.client.username}
      client.instance.metadata.user.password: ${spring.boot.admin.client.password}
   datasource:
     hikari:
      jdbc-url: jdbc:mysql://localhost:3306/onesaitplatform_config?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&autoReconnect=true&nullDatabaseMeansCurrent=true
      username: root
      password: ENC(v6o0Jud8aASYCkRb+u0RTICFUR8Pd5ph) 
      connection-timeout: 10000
      driver-class-name: com.mysql.cj.jdbc.Driver
      minimum-idle: 5
      maximum-pool-size: 10
      
   jpa:
      open-in-view: false
      # The SQL dialect makes Hibernate generate better SQL for the chosen database
      properties.hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect   
      # Hibernate ddl auto (create, create-drop, validate, update)
      hibernate.ddl-auto: none
      properties.hibernate.enable_lazy_load_no_trans: true
      show-sql: false
      properties.hibernate.format_sql: true
      properties.hibernate.temp.use_jdbc_metadata_defaults: false
   jmx:
    enabled: true
   servlet:
      multipart:
         max-file-size: 200MB
         max-request-size: 200MB
spring.elasticsearch.jest.uris: ${onesaitplatform.database.elasticsearch.sql.connector.http.endpoint}
spring.elasticsearch.jest.read-timeout: ${onesaitplatform.database.elasticsearch.sql.connectionTimeout.millis}

## CXF      
cxf:
  path: /services/management
  servlet.init: 
    component-scan: true
    classes-scan-packages: com.minsait.onesait.onesaitplatform.api.rest
            
      
## OAUTH    
security:
  signing-key: s1f41234pwqdqkl4l12ghg9853123sds1f41234pwqdqkl4l12ghg9853123sd
  jwt:
    client-id: onesaitplatform
    client-secret: onesaitplatform
    grant-type: authorization_code,refresh_token,password
    scopes: openid
    
gravitee:
  header-value: Gravitee-Server
    ## LOGGING CONF
logging:
   file.path: ./target/ 
   file.name: ${spring.application.name}
   level:
      com.minsait: DEBUG 
      org.springframework.boot: WARN
      org.jeasy.rules: ERROR      
      org.eclipse.jetty: WARN
      org.zalando.logbook: TRACE
#      org.springframework.boot.autoconfigure: DEBUG
#open-telemetry
#config spring sleuth      
spring.sleuth.otel.config.trace-id-ratio-based: 1.0
#spring.sleuth.otel.exporter.otlp.endpoint: http://collector:4317      
spring.sleuth.otel.exporter.otlp.endpoint: http://127.0.0.1:4317
#open-telemetry
