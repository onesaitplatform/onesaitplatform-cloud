app:
  name: dashboardengine
server:
  max-http-header-size: 20000
  port: 18300
  servlet.contextPath: /dashboardengine
  
logbook:
  exclude:
     - ${server.servlet.contextPath}/actuator/**
     - ${server.servlet.contextPath}/static/**
     - ${server.servlet.contextPath}/themes/**
     - ${server.servlet.contextPath}/swagger-ui/**
     - ${server.servlet.contextPath}/dsengine/rest/solver/**
  write:
     max-body-size: 10000

master: 
   datasource:
      hikari: 
        jdbc-url: jdbc:mysql://localhost:3306/onesaitplatform_master_config?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&autoReconnect=true
        username: root
        password: ENC(v6o0Jud8aASYCkRb+u0RTICFUR8Pd5ph) 
        driver-class-name: com.mysql.cj.jdbc.Driver
        pool-name: master-hikari-pool
        minimum-idle: 1
        maximum-pool-size: 2
        connection-timeout: 10000
        
management.endpoints.web.exposure.include: "*"
management.endpoint.health.show-details: always

spring:
  main:
      allow-circular-references: true
      allow-bean-definition-overriding: true
  application.name: onesaitplatform-dashboard-engine
  boot.admin: #Spring Boot Admin Config   
      client.url: http://localhost:18100/monitoring
      client.username: operations
      client.password: ENC(2Xd2AOD2NrMaWs915/st8C4ILo3qlHXv)
      client.instance.metadata.user.name: ${spring.boot.admin.client.username}
      client.instance.metadata.user.password: ${spring.boot.admin.client.password}
  datasource:
     hikari:
      jdbc-url: jdbc:mysql://localhost:3306/onesaitplatform_config?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&autoReconnect=true&nullDatabaseMeansCurrent=true
      username: root
      password: ENC(v6o0Jud8aASYCkRb+u0RTICFUR8Pd5ph) 
      connection-timeout: 10000
      driver-class-name: com.mysql.cj.jdbc.Driver
      minimum-idle: 10
      maximum-pool-size: 30
   
  jpa:
      open-in-view: false
      # The SQL dialect makes Hibernate generate better SQL for the chosen database
      properties.hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
      # Hibernate ddl auto (create, create-drop, validate, update
      properties:
        hibernate:
          format_sql: false
          show_sql: false
          ddl-auto: validate

onesaitplatform: #Config Onesait Platform specific
   router.metrics.query.enabled: false
   encryption:
      key: ENC(VYVseIUh5xiRd8ws0prbEAg6bGq7vmbfi3gkM65HECy+YPbjz4f49w==)
      iteration-count: 5
   metrics:
      enabled: false
   secure.cookie: false
   authentication:
      oauth:
        osp-keycloak: false
      configdb:
        acl:
          enabled: false
          list: administrator,analytics,dataviewer,demo_developer,demo_user,developer,operations,partner,sysadmin,user
      default_password: ENC(CuRLX3QJtxVhyxmPckWXs93L0FR7NnYj)
      provider: configdb
      cas:
        base_url: http://localhost:8080
        service_id: http://localhost:18000/controlpanel/login/cas
        key: CAS_PROVIDER_LOCALHOST_18000
        login_url: http://localhost:8080/cas/login
        logout_url: http://localhost:8080/cas/logout
        attributes:
            mail: mail
            fullName: commonName
      saml:
        admin_user_id: administrator
        idp_metadata: url.xml
        entity_id: entityid
        entity_url: https://localhost:8443/controlpanel
        jks:
           uri: saml.jks
           store_pass: pass
           key_alias: pass
           key_pass: keypass
        context:
           samlServerPort: 18300
           samlIncludePort: false
           samlScheme: http
           samlServerName: localhost
   audit.global.notify: true
   dashboardengine:
      auth.token.endpoint: http://localhost:18000/controlpanel/api/login/info
   database.mongodb:
      database: onesaitplatform_rtdb
      authenticationDatabase:  #admin
      servers: localhost:27017
      autoConnectRetry: true
      socketTimeout: 5000
      maxAutoConnectRetryTime: 5000
      maxWaitTime: 5000
      useAuth: false
      username: #username
      password: #password
      readFromSecondaries: false
      queries.executionTimeout: 5000
      queries.defaultLimit: 2000
      queries.maxConcurrentQueries: 3
      writeConcern: UNACKNOWLEDGED
      tools.mongoexport.path: mongoexport
      tools.mongoimport.path: mongoimport
      tools.mongoshell.path: mongo
      tools.useSequentialOps: true   
      quasar.maxHttpConnections: 50
      quasar.maxHttpConnectionsPerRoute: 50
      quasar.connectionTimeout.millis: 10000
      quasar.connector.http.endpoint: http://localhost:18200/query/fs/
   database.elasticsearch.enabled: false
   database.timescaledb:
      enabled: false
      url: jdbc:postgresql://localhost:5432/?currentSchema=public
      user: ENC(0K1krO/jgwq+DCymHZDLYDFMfI8tJRot)
      password: ENC(DdyKkq1kRMvaC1p4RlThA/MkXjE5QU4c)
   graylog:
      enabled: false
      host: 127.0.0.1
      port: 12201
   binary-repository:
      tmp.file.path: /tmp/files/   
## LOGGING CONF
logging:
   file.path: ./target/ 
   file.name: ${spring.application.name}
   level:
      com.minsait: INFO 
      org.springframework.boot: INFO  
      org.zalando.logbook: TRACE  
     
