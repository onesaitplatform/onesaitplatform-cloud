#/**
# * Copyright Indra Sistemas, S.A.
# * 2013-2019 SPAIN
# * Licensed under the Apache License, Version 2.0 (the "License");
# * you may not use this file except in compliance with the License.
# * You may obtain a copy of the License at
# *      http://www.apache.org/licenses/LICENSE-2.0
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# */

# ----------------- GENERAL --------

gen.search			= Search
gen.search.confluence= Search in Confluence
gen.create			= Create
gen.description		= Description
gen.name			= Name
gen.owner			= Owner
gen.active			= Active
gen.public			= Public
gen.created			= Created at
gen.view			= View it
gen.edit			= Edit
gen.filter			= Filter
gen.cancelBtn		= Cancel
gen.closeBtn		= Close
gen.editBtn			= Edit
gen.createBtn		= New
gen.deleteBtn		= Delete
gen.showBtn			= Show
gen.sepBtn			= Or
gen.resetBtn		= Reset
gen.confirmBtn		= Confirm
gen.confirmTitle	= Confirmation
gen.requiredField   = Required field
gen.options			= Options
gen.columns			= Columns
gen.form.error		= You have some form errors. Please check below.
gen.form.success	= Your form validation is successful!
gen.mode.insert		= Insert Mode
gen.mode.update		= Update Mode
gen.ontology        = Ontology
gen.mode			= Mode
gen.type			= Type
gen.play			= Play
gen.stop			= Stop
gen.download		= Download
gen.tableViewToggle = Table View Toggle
gen.json			= JSON value for
gen.identification	= Identification
gen.submit			= Submit
gen.yes				= Yes
gen.no				= No
gen.reloadconfig    = Reload OP configurations
gen.show			=Show
gen.running			=RUNNING
gen.stopped 		=STOPPED
gen.load			=LOAD
# ----------------- APP --------


name.visualization	= VISUALIZATIONS
name.dashboards		= DASHBOARDS
name.ontologies		= ONTOLOGIES
name.clients		= DIGITAL CLIENTS
name.gadgets		= GADGETS
name.home			= HOME
name.users			= USERS
name.apis			= APIs
name.digitaltwin	= DIGITAL TWINS
name.flows			= FLOWS
name.webprojects 	= WEB PROJECTS
name.notebook		= NOTEBOOKS
name.dataflow		= DATAFLOWS
head.lang			= Language
head.lang.es		= Spanish
head.lang.en		= English
head.logout			= Log out
head.search			= Confluence search
head.search.placeholder= Search...
head.user			= User data
foot.sourcecode		= GitHub Project
foot.legal			= Legal Terms and Conditions of Use
foot.legal.acepted1	= By clicking on "Create Account", you accept the
foot.legal.acepted2	=   and you confirm that you have read our data policy, including the use of cookies.
build.version       = @project.version@

# ----------------- JSON TOOLS -------
json2ont.schemagen		 = Generate schema
json2ont.tool.title		 = JSON to Ontology
json2ont.json			 = JSON
json2ont.beautify		 = Beautify
json2ont.jsonschema		 = JSON schema
json2ont.breadcrumb.show = JSON import tool
json2ont.createont		 = Create Ontology
json2ont.ontexists		 = Ontology exists
json2ont.ontcreated		 = Ontology created
json2ont.invalidschema	 = Invalid Schema
json2ont.inputfile		 = Load file to json
json2ont.toolimport.title= Data import Tool
json2ont.selectont		 = Select ontology
json2ont.import			 = Import
json2ont.hasparentnode	 = This ontology has a parent Node, all imported ontologies will be adapted to meet the required structure.
json2ont.rtdbdatasource  = Select datasource
json2ont.tool.info  	 = With this tool you can create ontologies and import data to them. You can either paste the JSON instances in the text area, or import any CSV, JSON or XML file, which will be parsed to JSON. In case it's a new ontology, its model (JSON-Schema) will be created.
json2ont.importdata.title= Import data to RTDB
json2ont.importdata.help = Check this box if you want to import the data after the ontology's creation.
json2ont.newontology.help= Check this box if you want to create a new Ontology.
json2ont.newontology.title= New ontology
# ----------------- BINARY FILES -------
binaryfiles.breadcrumb		 = Binary Files
binaryfiles.template.show    = Binary Files Management
binaryfiles.template.list 	 = Binary files list
binaryfiles.filename		 = File Name
binaryfiles.fileid			 = File Id
binaryfiles.owner			 = Owner
binaryfiles.accesstypes      = Access
binaryfiles.accesstype.write = Write
binaryfiles.accesstype.read  = Read
binaryfiles.public 			 = Public
binaryfiles.private 		 = Private
binaryfiles.makepublic		 = Make it public
binaryfiles.makeprivate		 = Make it private
binaryfiles.text.placeholder = Filter
binaryfiles.download 		 = Download
binaryfiles.share 			 = Share
binaryfiles.delete 			 = Remove
binaryfiles.authorize 		 = Authorize
binaryfiles.error 			 = Could not create binary file
binaryfiles.error.empty		 = Attachment couldn't be found
binaryfiles.unauthorized 	 = Forbidden
binaryfiles.new 			 = New File
binaryfiles.update 			 = Update File
binaryfiles.delete 			 = Delete File
binaryfiles.metadata 		 = Metadata
binaryfiles.select 			 = Select file to upload
binaryfiles.copy 			 = Copy URL to clipboard
binaryfiles.authorizations 	 = Authorizations
binaryfiles.user 			 = User
binaryfiles.userselect 		 = Select user
binaryfiles.auth.accesstypes = Access type
binaryfiles.insertauthorization = Insert File Authorization
binaryfiles.close			 = Close
binaryfiles.updateauth		 = Update
binaryfiles.removeauth		 = Remove
binaryfiles.auth.info 		 = Select a user, choose the type of Access you want to give to the file and add it to the Authorizations. Repeat as many times as users want to authorize.
binaryfiles.auth.title 	 	 = File authorizations
binaryfiles.maxsize.error    = File is larger than max size allowed (50 MB).
binaryfiles.repository		 = Storage Mode
binaryfiles.repositories.select = Select storage mode

# ----------------- FLOW MAIN --------

flow.ontology						= MODEL YOUR DATA
flow.device							= DEFINE AN DIGITAL CLIENT
flow.simulate						= SIMULATE IT!
flow.visualize						= VISUALIZE YOUR DATA
flow.connect						= CONNECT YOUR DIGITAL CLIENT
flow.api							= CREATE YOUR API
flow.done							= Done!
flow.button							= Go!
flow.ontology.description			= Model your data as an ontology (step by step, with a JSON-Schema, from a file, from a database,...), represented as a JSON
flow.device.description				= They are clients of the Platform (devices sending data, mobile apps subscribed to information, connected business systems...)
flow.simulate.description			= Simulation allows to uncouple adquisition of data in your system from analysis, visualization and publish of data. 
flow.visualize.description			= With dashboards built by drag&drop, you can exploit the stored information graphically in an easy fashion.
flow.connect.description			= We are ready to turn off the simulator and connect the Digital Client. The system will continue to work the same.
flow.api.description				= If you created information of interest, you can create an API without programming, so clients can consume this information.
flow.domain.delete.confirm			= Dou you want to delete this flow domain?

# ----------------- SIMULATION --------

simulation.clients				 	= Digital Client Templates
simulation.client				 	= Digital Client Template
simulation.ontology 		 		= Ontology
simulation.template.list			= Simulation list
simulation.active				 	= Active
simulation.identification			= Simulation Id
simulation.interval			 		= Time between inserts
simulation.interval.placeholder		= In seconds
simulation.integer.begin 			= Begin value
simulation.integer.end 				= End value
simulation.integer.fixed 			= Value
simulation.number.begin 			= Begin value
simulation.number.end 				= End value
simulation.number.precision 		= Decimal precision
simulation.number.fixed 			= Value
simulation.string.fixed 			= String value
simulation.string.random 			= Random String from list
simulation.string.list 				= String list, each term separated by ','
simulation.cosine.base 				= Base
simulation.cosine.multiplier		= Multiplier
simulation.cosine.steps 			= Number of steps
simulation.sine.base 				= Base
simulation.sine.multiplier 			= Multiplier
simulation.sine.steps				= Number of steps
simulation.date.from 				= From
simulation.date.to 					= To
simulation.date.fixed				= Date
simulation.date.from.placeholder 	= Pick date
simulation.date.to.placeholder	 	= Pick date
simulation.select.tokens 			= Tokens
simulation.select.ontologies 		= Ontologies
simulation.clientplatform 			= Digital Clients Definitions
simulation.fields 					= Ontology Properties
simulation.choose 					= Choose function
simulation.breadcrumb.create 		= Create Simulation
simulation.breadcrumb.prev 			= Simulations
simulation.template.create 			= New Simulation
simulation.breadcrumb.update		= Update Simulation
simulation.template.update			= Update Simulation
simulation.delete.confirm			= Do you want to delete this simulation?
simulation.exists.false				= Simulation does not exist
simulation.update.error				= Digital Client simulation not updated
simulation.update.isactive			= Simulation is running, please first stop it
simulation.boolean.fixed			= Boolean
simulation.byproperties				= Properties
simulation.byjson					= JSON
simulation.byproperties.help		= Set values for each ontology field. Simulation will be created based in these values.
simulation.byjson.help				= Insert valid json into the text area. Simulation will be created with this JSON data.
simulation.by						= Simulation source
simulation.fromjson					= Generate simulation from JSON data? 
simulation.fromproperties			= Generate simulation from property values?
simulation.mode						= Iterate JSON:
simulation.random					= Random
simulation.sequential				= Sequential
simulation.mode.help				= If JSON data is an array, define the mode of iteration/insertion.
# ----------------- QUERYTOOL ---------

querytool.historical.query			= Historical queries:
querytool.querytype.notselected 	= Please select queryType Native or SQL
querytool.ontology.access.denied.json = You don't have permissions for this ontology
querytool.query						= Query:
querytool.select.fields				= Select fields
querytool.select.all.fields			= All fields
querytool.all.fields				= All fields
querytool.select.where              = Choose an option
querytool.select.orderby            = Choose an option
querytool.label.sourceatt			= Source attribute
querytool.label.targetatt			= Target attribute


# ----------------- TWITTER ---------

scheduledsearch.breadcrumb.prev		= Scheduled Search List
scheduledsearch.template.create		= Schedule Search
scheduledsearch.template.update		= Update Scheduled Search
scheduledsearch.template.list		= Scheduled Searchs List
scheduledsearch.user				= Owner
scheduledsearch.breadcrumb.create	= New Scheduled Search
scheduledsearch.breadcrumb.update	= Update Scheduled Search
scheduledsearch.identification		= Identification
scheduledsearch.configuration		= Configuration
scheduledsearch.topics				= Topics
scheduledsearch.topics.rules		= Indicate the topics separated by ","
scheduledsearch.from				= Start of the Search
scheduledsearch.to					= End of the Search
scheduledsearch.ontologies.target	= Target Ontologies
scheduledsearch.ontologies			= Ontologies
scheduledsearch.clientplatform		= Digital Client Template
scheduledsearch.token				= Token
scheduledsearch.identificator		= Identification
scheduledsearch.newontology			= New Ontology
scheduledsearch.newclient			= New Digital Client Template
scheduledsearch.del.confirm			= You are just about to delete this Twitter Listening. Do you want to continue?
scheduledsearch.delete.fail 		= Could not delete listening
scheduledsearch.delete.success		= Listening deleted
twitterlistening.validation.error	= Validation error in listening
scheduledsearch.template.list 		= Twitter Listenings list
scheduledsearch.delete.confirm		= Do you want to delete this Listening?

# ----------------- USER -------------

user.id							= User Id
user.name						= User FullName
user.new.password				= New password
user.password					= Password
user.password.help				= The password must also contain a lowercase letter, an uppercase letter, a digit and must be between 7 and 20 characters long, and not contain the identification.
user.email						= eMail
user.repeat.password			= Repeat password
user.rolTypeName				= Role
user.dateCreated				= created At
user.dateDeleted				= deleted At
user.active						= Active
user.active.help				= An Active user can log in,  when we delete a user it becomes innactive and has a Remove datestamp.
user.template.show				= Show User
user.template.list				= Manage User
user.template.create			= Create New User
user.template.checkbox.delete	= By clicking on "Forget Data", you understand and thus expressly accept that that your user will be removed and will lose access to the platform.
user.template.error.subtab_3_4  = Error, please accept first the terms.
user.template.data.update		= Privacy preferences
user.template.password.update	= Modify Password
user.template.tittle.subtab1	= Forget my data
user.template.tittle.subtab2	= Revoke consent
user.template.tittle.subtab3	= View my data
user.template.tittle.subtab4	= Delete my data
user.template.update			= Update User
user.template.view.data			= View data user
user.template.warning.advice	= Warning!
user.template.warning.advice_3_3= Information:
user.template.warning.subtab_3_1=  After you click on delete button, all selected ontologies will be deleted and you will not be able to recover from deleted information.
user.template.warning.subtab_3_2=  After you click on delete button, all authorizations of the selected ontologies will be deleted.
user.template.warning.subtab_3_3= Click on display option to see more details about a ontology
user.template.warning.subtab_3_4=  If you click on forget button, your user will be deleted, you will lose access to the platform a won't be able to recover stored information.
user.breadcrumb.show			= Show user
user.breadcrumb.create			= New user
user.breadcrumb.update			= Update user
user.breadcrumb.prev			= User List
user.errorpattern				= Please enter at least 4 alphanumeric characters. This field is required. Special characters supported: @ . _
user.search.description 		= User Search, click to toggle the search form and search by any of the fields.
user.valid.dateDeleted			= The invalidation date must be after the current date
user.delete.confirm				= Do you want to invalidate this user? Once you've done it, you won't be able to create a new user with the same identifier!
user.create.empty.email			= You must enter a valid email address.
user.create.error				= There is already an user with this user id.
user.create.error.email			= There is already an user with this email.
user.create.error.empty			= Please, completes all the data of the form.
user.create.error.password 		= Please enter a valid password to create the user.
user.create.success				= User created
user.reset.success				= New password is generated. Please, check your email.
user.update.success.password	= The entered passwords match.
user.update.error				= Could not update user
user.update.error.password		= The entered passwords don't match
user.update.password.admin		= User data has been modified. User will receive an email with his new password.
user.update.password.email		= Your password has been modified. Your new password for onesait Platform: is: 
user.update.success				= User data has been modified.
user.remove.data.error			= There was an error in editing the data
login.reset.error				= Error in password reset.
user.validation.error			= Validation error for user
user.fullname.error 			= Full name must be at least 4 characters
user.userid.error				= User Id must be at least 4 characters

# ----------------- ONTOLOGY ---------

ontology.id					= Ontology Id
ontology.schema				= Ontology Schema
ontology.datamodel			= Ontology Template
ontology.datamodel.info		= To create an ontology, you must start from a Datamodel schema, which is no more than a set of fields that define your ontology. If you want to use any of the ones we propose, select it from the following selector. You can use EMPTYBASE if you want to make the schema from 0.
ontology.datamodel.type		= Ontology Template Category
ontology.datamodel.error	= You have some form errors. Please Select at least one Datamodel below.
ontology.datamodel.selection= Please, fill name and description before select a datamodel template.
ontology.identification		= Identification
ontology.identification.help= Is an auto-generated internal identifier, yo don´t need to fill it.
ontology.name				= Name
ontology.name.error			= Ontology name can't start with a number and is mandatory
ontology.metainf			= Meta-Information
ontology.metainf.help		= Ontology meta information, descriptive fields.
ontology.metainf.min		= Please fill at least 2 chars
ontology.mandatory			= Mandatory field
ontology.description		= Description
ontology.description.min	= Please fill at least 5 chars
ontology.section.templates	= Ontology Templates
ontology.section.properties	= Additional Properties
ontology.section.schema		= Schema generator and JSON Instances
ontology.userId				= Owner
ontology.active				= Active
ontology.active.help		= An ontology must be active in order to perform operations on it, inactive is blocked.
ontology.public				= Public
ontology.public.help		= A public Ontology can be seen by other users and they can subscribe to it, private only remains for the owner.
ontology.createdAt			= Created At
ontology.wizard				= Ontology Wizard
ontology.wizard.desc		= This option allows you to create an ontology specifying its attributes and types in a simple and guided way.
ontology.jsonSchema			= JSON-Schema Ontology
ontology.jsonSchema.desc	= This option allows you to create an ontology from a JSON template or XSD file.
ontology.csv				= CSV/EXCEL Ontology
ontology.csv.desc			= This option allows you to create an ontology from an Excel/CSV file.
ontology.json_xml			= JSON/XML Ontology
ontology.json_xml.desc		= This option allows you to create an ontology from a JSON or a XML file.
ontology.template.show		= Show ontology
ontology.template.list		= Manage ontologies
ontology.template.create	= Create New ontology
ontology.template.update	= Update ontology
ontology.template.kpi.create	= Create New KPI
ontology.template.kpi.update	= Update KPI
ontology.rtdbclean			= Delete from RealTimeDB
ontology.rtdbtohdb			= Move from RealTimeDB to HistoricalDB
ontology.breadcrumb.show	= Show ontology
ontology.breadcrumb.create	= New ontology
ontology.breadcrumb.kpi.create	= New KPI
ontology.breadcrumb.kpi.update = Update KPI
ontology.breadcrumb.update	= Update ontology
ontology.breadcrumb.list	= Ontology List
ontology.search.description = Ontology Search, click to open/collapse the search form and search by any of the fields.
ontology.delete.confirm		= Do you want to invalidate this ontology? Once you've done it, you won't be able to create a new ontology with the same name!
ontology.delete.error       = Error deleting ontology. Review the error!
ontology.authorizations		= Authorizations
ontology.validate.schema	= Validation
ontology.auth.user			= User
ontology.auth.userfullname	= Full Name
ontology.auth.accesstype	= Access Type
ontology.valid.duplicates 	= There are duplicates, check it
ontology.valid.noinstances  = The query does not return data so you can not create a schema, you can create the ontology step by step and use it
ontology.valid.tplschema 	= There is no Datamodel Schema
ontology.valid.noschema 	= There is no Ontology Schema
ontology.valid.authinsert 	= You must create the ontology first and then you can assign authorizations
ontology.valid.notkpi 		= There is no kpi associated with the ontology, first create it
ontology.validform			= Form Error
ontology.valid.schemaprop	= The required Node or the property node does not exist
ontology.valid.schemanoprop = The properties node does not exist
ontology.valid.nonode		= No Node
ontology.valid.norequired 	= the Required node does not exist
ontology.valid.noproperties = No properties defined
ontology.valid.base			= Can´t remove a base Property
ontology.valid.auths.user 	= Please, select an User.
ontology.valid.swagger.api.error.url	= Unable get swagger api. Please check the URL.
ontology.valid.swagger.api.error.parse	= Unable to parse Swagger doc.
ontology.valid.swagger.api.error.duplicates	= Duplicated name operations detected:
ontology.valid.operation.no.params			= Wrong number of parameters. The selected default operation type must not have parameters. 
ontology.valid.operation.one.param			= Wrong number of parameters. The selected default operation type must have only one parameter.
ontology.valid.wrong.path.params			= There are path parameters not specified in the operation's path: 
ontology.valid.query.error  = Invalid query.
ontology.confirm.datamodel	= if you change datamodel your properties and schema configuration will be remove and started again!
ontology.addproperty		= Add New Property
ontology.updateschema		= Update Schema
ontology.required.property	= Required
ontology.type.property		= Data Type
ontology.property			= Property
ontology.generate.instance	= Generate Instance
ontology.user				= User
ontology.auth.accesstypes	= Access Types
ontology.userselect 		= Select user...
ontology.insertauthorization= Insert Ontology Authorization
ontology.auth.title			= Ontology Authorizations
ontology.auth.info			= Select a user, choose the type of Access you want to give to the ontology and add it to the Authorizations. Repeat as many times as users want to authorize.
ontology.list.noauths		= No Authorizations
ontology.list.auth			= Authorizations
ontology.advancedsettings   = Advanced Settings
ontology.rtdbinstance 		= RTDB Instance
ontology.rtdb.warning 		= IMPORTANT: Once ontology is created, it is not possible to change its RTDB instance!
ontology.select.action		= Select
ontology.allowsCypherFields = Allows encryption of fields
ontology.allowsCypherFields.help=Enables the possibility of encryption of fields. This option can affect the performance when using this ontology.
ontology.allowsCypherFields.property = Encrypted
ontology.rtdbclean.help 	= Enables the possibility to delete old data that belongs to this ontology from RTDB.
ontology.kpisettings   = KPI Settings

ontology.allowsCypherFields = Allows encryption of fields
ontology.allowsCypherFields.help=Enables the possibility of encryption of fields. This option can affect the performance when using this ontology.
ontology.allowsCypherFields.property = Encrypted

ontology.allowsCreateTopic =  Allows create Kafka Topic
ontology.allowsCreateTopic.help=Enables the Action for creating a Kafka Topic to enable streaming capabilities.
ontology.allowsCreateTopic.property = Topic

ontology.clean.options		= Delete ontologies created before:
ontology.clean.never		= Never delete
ontology.clean.oneday		= 1 day
ontology.clean.twodays		= 2 days
ontology.clean.threedays	= 3 days
ontology.clean.fivedays		= 5 days
ontology.clean.oneweek		= 1 week
ontology.clean.twoweeks		= 2 weeks
ontology.clean.onemonth		= 1 month
ontology.clean.threemonths	= 3 months
ontology.clean.sixmonths	= 6 months
ontology.clean.oneyear		= 1 year
ontology.stepbystep			= Creation Step by Step
ontology.kpi                = Creation KPI
ontology.kpi.desc           = This option allows to create KPIs (Key Performance Indicator), in the new ontology or the one selected, that information from other ontologies that is considered relevant for the study of the evolution of a series of parameters will be stored.
ontology.stepbystep.desc	= This option allows you to create an ontology specifying the base Data Model, extending it and specifying storage and advanced properties
ontology.fromfile			= Creation from file
ontology.fromfile.desc		= This option allows you to use a JSON, XML or CSV as a base to create your ontology, also allowing to load data into the ontology 

ontology.fromexternaldb		= Creation from external relational database
ontology.fromexternaldb.desc= This option allows you to create an ontology from a table of an external relational database
ontology.fromrestapi		= Creation from a REST API
ontology.fromrestapi.desc	= This option allows you to create an ontology from a external REST API

ontology.after.create.device= Create new Digital Client for this ontology
ontology.after.create.api	= Create new REST API for this ontology
ontology.after.create.gadget	= Create Gadget with this ontology
ontology.after.create.dashboard	= Create Dashboard for this ontology

ontology.ld   				= Linked Data
ontology.ld.title 			= Linked Properties
ontology.ld.tooltip			= Create relationships between ontology properties within the platform
ontology.ld.selfproperty    = Self property
ontology.ld.property.select = Select property
ontology.ld.targetproperty  = Target property
ontology.ld.targetontology  = Target ontology
ontology.ld.add 			= Add reference
ontology.ld.references	    = References
ontology.ld.validate		= Validate
ontology.ld.validate.info 	= If selected, whenever an instance of this ontology is inserted into the platform, the platform will validate before properties that are linked.
ontology.rtdb2h				= Export to file history before deleting data
ontology.rtdb2h.help		= This option enables the export of older data into a historic file. Files will be stored either in a directory, which is unique for each user, or in MongoDB.
ontology.storage			= Storage
ontology.kpi.query 			= QUERY:
ontology.kpi.cron 			= CRON
ontology.kpi.date.from 		= ACTIVATED FROM
ontology.kpi.date.to 		= ACTIVATED TO
ontology.kpi.postProcess.checkbox 	= Enable Processing
ontology.kpi.postProcess 	= Processing
# ----------------- FLOW DOMAIN ---------

flow.breadcrumb.list		= List of Flows
flow.breadcrumb.show		= Flow panel
flow.template.list			= Manage FlowEngines
flow.breadcrumb.create		= Create new Flows Domain
flow.breadcrumb.prev		= List of Flows
flow.template.create		= Create new Flows Domain
domain.identification		= Identification
domain.state				= State
domain.cpu.use				= CPU Use
domain.user					= User
domain.memory				= Memory [MB]
domain.createdAt			= Entry date
domain.start				= Start
domain.stop 				= Stop
domain.error.notstarted		= Unable to start the domain
domain.error.notstopped		= Unable to stop the domain
domain.create.success		= The Domain has been successfully created
domain.create.error			= Error creating Domain
domain.delete.success		= The Domain has been successfully deleted
domain.delete.error			= Error deleting Domain
domain.show					= Show Flows
domain.flow.Engine.notstarted 	= The Flow Engine is temporarily unavailable
domain.duplic.error			= The specified identifier already exists

# ----------------- CONFIGURATION ----

configurations.breadcrumb.prev	= Configurations list
configurations.type				= Configuration type
configurations.template.list	= Configurations list
configurations.template.show	= Show Configuration
configurations.yml 				= YML configurations
configurations.json				= Configuration JSON
configurations.template.create	= Create New Configuration
configurations.breadcrumb.create= New Configuration
configurations.breadcrumb.update= Update Configuration
configurations.template.update	= Update Configuration
configuration.userid			= User Id
configuration.environment       = Environment
configurations.createdAt		= Creation Date
configurations.breadcrumb.show	= Show Configuration
configuration.id				= Identification
configuration.description		= Description
configuration.suffix 		    = Suffix
configuration.del.confirm		= You are just about to delete this configuration, do you want to continue?
configuration.validation.error	= Validation error in configuration

# ----------------- DATABASES ---------

database.breadcrumb.show	= Query Tool for Platform Repositories
database.breadcrumb.create	= New Query
database.breadcrumb.update	= Update Query
database.breadcrumb.list	= Queries
database.template.show		= Ontology Query Tool
database.ontology			= Ontologies
database.ontologies			= Select Ontology
database.ontologies.help	= Select one Generic or Group Ontology
database.generic			= Generic
database.queryonto			= Query on
database.execQuery			= Execute Query
database.results			= Results on

# ----------------- KPIs ---------

kpis.ontology				= ONTOLOGIES
kpis.users					= USERS
kpis.apis					= APIS
kpis.dashboards				= DASHBOARDS
kpis.gadgets				= GADGETS
kpis.devices				= DIGITAL CLIENTS
kpis.notebooks				= NOTEBOOKS
kpis.dataflows				= DATAFLOWS
kpis.assets					= ASSETS
kpis.projects				= PROJECTS
kpis.iotflows				= DIGITAL FLOWS
kpis.binaryfiles			= BINARY FILES

# ----------------- GRAPH ---------

graph.table.item		= Name
graph.table.value		= Value
graph.table.properties	= Properties
graph.table.source		= Source
graph.table.show		= Show
graph.table.create		= New
graph.table.go			= Access
graph.source			= Source
graph.type				= Type
graph.hierarchy			= Hierarchy
graph.up-down			= Up-Down
graph.down-up			= Down-Up
graph.left-right		= Left-Right
graph.right-left		= Right-Left
graph.reload			= Reload
graph.description		= This graph represents some of the platform concepts that have been registered in the platform. If you place the mouse over the main nodes, a particular description will be displayed. When you click on a node, you will be able to see a table with relevant information about it and their particular links will be highlighted. If you also move the mouse by clicking, you can move the node as well as its links. If you want to move the entire position graph, simply click on any part of the graph that does not correspond to a node and move the mouse.
graph.universe			= My Environment
graph.information		= Information
graph.clustering		= Clustering

# ----------------- MESSAGES TOOLTIPS MENU ---------


tooltip_ontologies=Ontologies are the data models within the platform. They are represented via a JSON-Schema (JSON for the instances) and transparently to the programmer can be stored in different types of storage.
tooltip_clients= Digital Client represents each of the clients of the platform, typically they are devices & systems sending information to the platform, but they can be devices subscribed to other information, mobile or web applications visualizing information stored on the platform or complete systems. A Device handles 1 or more ontologies.
tooltip_rules=A Rule represents the execution of a more or less complex logic, the Rules can be executed before the arrival of an Instance or with a temporal planning (CRON). The Rules can be of type IF-THEN (Script Rules) or of type CEP (temporary relationship between several instances). The Rules can be created in different languages (R, Python, Groovy) through the Console itself....
tooltip_visualization=The Visualization Tools allow me to exploit in a simple and graphic way the information stored in the Platform (Ontologies). I can create unit display elements (Gadgets), join them in a web page (Dashboard).
tooltip_tools=Support tools for development, operation, ...
tooltip_administration=Platform administration tools: user management, platform monitoring, operations management, security.
tooltip_apiManager=The API Manager allows you to publish APIs on all the information managed by the Platform, all in a visual way.
tooltip_socialMedia = The Social Media analysis tools provide access to information of different social networks (Twitter, Facebook, Instagram) and APIs (Google Analytics, Brandwatch). This module supports streaming and scheduled loads, and also exporting the data to Ontologies.
tooltip_analytics=The Platform has multiple analytics capabilities, like the DataFlow engine (allows you to configure sources, destinations and transformations to manipulate data) and the Notebooks (they allow data scientists to apply data transforms and Machine Learning algorithms).
tooltip_apis= APIs allow you to make operations with ontologies, such as CRUD operations and custom queries.
tooltip_webprojects=Web projects are independent static web projects, that are hosted by the platform.
tooltip_digitaltwin=Digital twins are faithful representations of real physical systems and devices.
tooltip_flows=Flows are data flows for data processing, made with Node Red.
tooltip_notebooks=Data notebooks.
tooltip_dataflows=Dataflow.
#----------------- DESKTOP ---------

menu_item_desktop_crear_label = Create Desktop
desktop_formulario_button_url = URL
desktop_formulario_button_ver = Open Desktop
desktop_listado_button_editar = Edit
desktop_listado_button_eliminar = Remove
menu_category_DESKTOP_crear = New Desktop
desktop_formulario_name = Name
desktop_formulario_url = URL
desktop_usuarios = Users
desktop_asociar_usuarios_al_escritorio = Associate Users to the Desktop
desktop_usuarios_asociasdos_al_escritorio = Associate Users To Desktop:
desktop_elementos_escritorios = Desktop Applications
desktop_crear_elementos_escritorios = Create Desktop Application
desktop_aplicacion_title = Title
desktop_aplicacion_descripcion = Description
desktop_imagen_seleccionada = Image Application
desktop_button_eliminar = Remove
desktop_aplicacion_tipo = Type Application
desktop_aplicacion_dashboard = Dashboard
desktop_aplicacion_proyectoweb = Web Project
desktop_aplicacion_aplicacioncontrolada = Controlled Application
desktop_aplicacion_nocontrolada = External Application
desktop_descripcion_configuracion = Settings
desktop_aplicacion_add = Add Application
desktop_aplicacion_titulo = Title
desktop_aplicacion_icono = Icon
desktop_aplicacion_url = Url
desktop_aplicacion_title_url = URL
desktop_aplicacion_contenido = Content
desktop_descripcion_style = You can adapt to your needs the CSS that will be loaded on the Desktop
desktop_descripcion_js = You can adapt the JS that will be loaded when you start the Desktop
desktop_descripcion_internacionalizacion = Apply internationalization, creating a json with this format: {\"tag\": {\"country code\": \"translation\", \"other country code\": \"translation\"}, {...} Voltage V \",\" en \":\" Voltage V \"}}
desktop_dialogo_error_name_obligatorio = You must enter a name with more than 5 characters
desktop_dialogo_error_seleccione_un_miembro = You must select at least one user
desktop_dialogo_error_name_existente = A desktop with that name already exists.
desktop_dialogo_error_crear_escritorio = Error creating Desktop
desktop_aplicacion_tipo_ventana = Display Mode
desktop_aplicacion_ver_ventana = Window
desktop_aplicacion_ver_pcompleta = Fullscreen
desktop_aplicacion_habilitada = Enabled
desktop_error_create_desktop = There was an error creating the Desktop
desktop_lista_mi_tabla = DESKTOPS CREATED BY ME
desktop_lista_con_acceso_tabla = DESKTOPS I HAVE ACCESS
menu_item_desktop_modificar_label = Modify Desktop
desktop_aplicacion_mod = Modify Application
desktop_boton_mod = Update
desktop_error_modificar_desktop = An error occurred while editing the Desktop
desktop_aplicacion_nuevo_token = Generate Token
desktop_aplicacion_token = Token
desktop_aplicacion_alto_ventana = Window Height
desktop_aplicacion_ancho_ventana = Window Width
desktop_creacion_correcta = The Desktop has been created correctly.
desktop_modificacion_correcta = The Desktop has been modified correctly.
admin_regenerar_clave_jwt = Regenerate Password JWT Desktops
desktop_menu_escritorio = Desktop
desktop_menu_descripcion = Description
desktop_menu_titulo_header = Select a Desktop
desktop_menu_titulo_ya_existente=Enter another title for the application, there should be no duplicate titles.

#------------ MENU DESKTOP ----------------------

menu_category_DESKTOP_label=DESKTOPS
menu_item_DESKTOP_label=My Desktops
tooltip_desktop=The Desktop allows us to access applications, dashboards and projects in a centralized way.

# ------------ NEW-Elements ------------
# ------------ MAIN Menu ------------

menu.search.placeholder = Search...
menu_home=Home
menu.modal.api=Oauth Token & APIs
menu.modal.search=Confluence search
menu.apis=APIS
menu.modal.apimanager = API Manager
menu.modal.iotbroker= Digital Broker
menu.modal.digitaltwinbroker= Digital Twin Broker
menu.modal.controlpanel = Control Panel
menu.modal.router = Router
menu.modal.bearer =Bearer
menu.modal.oauthtoken= Oauth token

# ------------ DATATABLES LANG OPTION OBJ. ------------

datatables_lang={\"decimal\": \"\", \"emptyTable\": \"No Entries\", \"info\": \"Showing _START_ to _END_ of _TOTAL_ Entries\", \"infoEmpty\": \"0 Entries \", \"infoFiltered\": \"(Filtered from _MAX_ total Entries)\",\"infoPostFix\":\"\",\"thousands\":\",\",\"lengthMenu\":\" _MENU_ \",\"loadingRecords\": \"Loadding...\",\"processing\":\"Proccessing...\",\"search\":\"Search:\",\"zeroRecords\":\"No matching records found\",\"paginate\": {\"first\":\"First\",\"last\":\"Last\",\"next\":\"&gt;\",\"previous\": \"&lt;\"}}

# ------------ HEADER BUTTONS ------------

sign_out = LogOut


# ------------ LOGIN PAGE ------------

login.login.username						= Username
login.login.resetPassword					= Reset password
login.create.account						= Create account
login.data.email							= E-mail
login.data.name								= Name
login.data.password							= Password
login.data.password.repeat 					= Repeat password
login.error.password.repeat					= Passwords don't match
login.data.user								= User
login.error									= Invalid username and password.
login.error.email.duplicate 				= There is already an user with this email.
login.error.password						= Invalid password
login.error.register						= This user already exist.
login.error.user.register					= You must select the desired user role.
login.error.fields							= All fields must be filled in.
login.forgot.password						= Forgot your password?
login.login									= Login
login.logout								= You have been logged out.
login.new									= New Account
login.password.hide							= Hide
login.password.show							= Show
login.pattern.email							= You must enter a valid email address.
login.pattern.name							= You must enter your full name.
login.pattern.password	 					= Must contain at least: one uppercase letter, one lowercase letter and a number or symbol. Password must be between 10 and 20 characters.
login.pattern.terms							= Terms and Use Condition must be read and acepted.
login.pattern.username						= You must enter an username
login.remember								= Remember me
login.register.created 						= We have created an user with your data. Please authenticate with this user.
login.role 									= Please select user role
login.role.developer						= Developer
login.role.user								= User
login.title									= Control Panel Login
login.user.exist							= This user exists in the system. Please select another userId.

# ------------ USERS ------------

users.my=Manage Users
users =Users

# ------------ API MANAGER ------------

apimanager.breadcrumb						=API MANAGER
apimanager.breadcrumb.create				=New API
apimanager.breadcrumb.subscriptions			=My Subscriptions
apimanager.breadcrumb.apis.subscriptions	=API Subscriptions
apimanager.breadcrumb.show					=View API
apimanager.breadcrumb.edit					=Edit API
apimanager.breadcrumb.list					=My APIs
apimanager.breadcrumb.token					=My Users Keys
apimanager.breadcrumb.authorizations		=APIs Authorizations
apimanager.breadcrumb.prev					=My APIs
apimanager.template.create					=Create New API
apimanager.template.show					=API Data
apimanager.template.edit					=Edit existing API
apimanager.template.list					=My APIs
apimanager.template.invoke					=Invocation to API:
apimanager.template.token					=My Users Keys
apimanager.template.autorizations			=Create API Authorization
apimanager.id								=Identification
apimanager.numversion						=Version
apimanager.category							=Category
apimanager.apitype							=Api Type
apimanager.ontology							=Ontology
apimanager.limit							=API limit
apimanager.apilimit							=Requests per minute
apimanager.cache							=Caching of API results
apimanager.cachetimeout						=Cache Timeout(minutes)
apimanager.public							=Public
apimanager.endpoint							=EndPoint base
apimanager.endpoint.swagger					=EndPoint Swagger
apimanager.image							=Image
apimanager.description						=Description
apimanager.metainf							=Meta-inf
apimanager.operations						=Operations
apimanager.GET								=QUERY(ID)
apimanager.POST								=POST
apimanager.PUT								=PUT
apimanager.DELETEID							=DELETE(ID)
apimanager.CUSTOMSQL						=QUERY(CUSTOM)
apimanager.GET.button						=QUERY(ID)
apimanager.GET.all.button					=QUERY(ALL)
apimanager.POST.button						=INSERT
apimanager.PUT.button						=UPDATE
apimanager.DELETEID.button					=DELETE(ID)
apimanager.GETCUSTOM.button					=QUERY
apimanager.state							=State
apimanager.state.CREATED					=Created
apimanager.state.DEVELOPMENT				=Development
apimanager.state.PUBLISHED					=Published
apimanager.state.DEPRECATED					=Deprecated
apimanager.state.DELETED					=Deleted
apimanager.state.action.CREATE				=Create
apimanager.state.action.DEVELOPMENT			=Development
apimanager.state.action.PUBLISH				=Publish
apimanager.state.action.DEPRECATE			=Deprecate
apimanager.state.action.DELETE				=Delete
apimanager.category.ALL						=All
apimanager.category.ADVERTISING				=Advertising
apimanager.category.BUSINESS				=Business
apimanager.category.COMMUNICATION			=Communication
apimanager.category.EDUCATION				=Education
apimanager.category.ENTERTAINMENT			=Entertaiment
apimanager.category.MEDIA					=Media
apimanager.category.MEDICAL					=Medical
apimanager.category.OTHER					=Other
apimanager.category.SOCIAL					=Social
apimanager.category.SPORTS					=Sports
apimanager.category.TOOLS					=Tools
apimanager.category.TRAVEL					=Travel
apimanager.apiType.rest						=Publish Ontology as REST API
apimanager.auth								=Authorizations
apimanager.auth.description					=User's API Authorizations
apimanager.list.auth.user					=User
apimanager.list.auth.username				=User Name
apimanager.list.auth.apiversion				=Api - Version
apimanager.list.text.placeholder			=Select...
apimanager.list.value.placeholder			=Select Value
apimanager.auth.insert						=Insert Api Authorization
apimanager.operations.method				=Method
apimanager.operation.GET					=GET
apimanager.operations.name					=Name
apimanager.customsql.query					=Query
apimanager.customsql.query.info				=For adding query parameters use: {$parametername}
apimanager.customsql.paramsquery			=QUERY PARAMETERS
apimanager.customsql.paramquery.nodefined	=The Query has not parameters
apimanager.customsql.configuration			=QUERY CONFIGURATION
apimanager.customsql.querytype				=Query Type
apimanager.customsql.targetBD				=Target database
apimanager.customsql.RTBD					=Real Time DB
apimanager.customsql.HBD					=Historical DB
apimanager.customsql.formatresult			=Result Format
apimanager.customsql.description			=Description
apimanager.customsql.postprocess			=Enable Processing
apimanager.customsql.showpostprocess		=Post Processing
apimanager.token.dateCreated				=Creation Date
apimanager.token							=Token
apimanager.usertoken						=User Tokens
apimanager.image.error						=The maximum image size is 60 KB
apimanager.noops.error						=No existing operations
apimanager.ops.description.error			=The descriptions of the operations are required
apimanager.apiType.rest						=Ontology as REST API
apimanager.apiType.externalfromjson			=Publish External REST API from Swagger JSON
apimanager.apiType.external					=Publish External REST API
apimanager.customsql.error.name.format		=The name format is invalid
apimanager.customsql.error.query.params		=At least one query parameter is invalid
apimanager.customsql.error.query.ontology	=The query must include the selected ontology
apimanager.customsql.error.query			=A valid query is required
apimanager.customsql.error.required			=A query is required
apimanager.customsql.error.operation.exists	=The operation name is already in use
apimanager.customsql.error.fields			=At least one required field is missing
apimanager.token.error						=There was an error creating Token
apimanager.valid.dateDeleted				=There was a validation error
apimanager.delete.confirm					= Do you want to delete this Api?
apimanager.delete.error						=There was an error deleting the Api
apimanager.swaggerurl 						=Swagger JSON URL

# ---------------- DASHBOARDS -------

gadgets.identification=Identification
gadgets.description=Description
gadgets.my = My Gadgets
gadgets.listGadgets = Gadgets
gadgets.create = Create Gadget
gadgets.new = New Gadget
gadgets.update = Edit Gadget
gadget.del.confirm = You are going to delete a gadget, are you sure?
gadgets.type = Type
gadgets.name = Name
chart.column = Column Bar Chart
chart.line = Line Chart
chart.pie = Pie Chart
chart.map = Map
chart.cloud = Wordcloud Chart
dashboards.my=My Dashboards
dashboards.create=New Dashboard
dashboards.update=Dashboard Configuration
dashboards.del.confirm= You are going to delete a dashboard, are you sure?
dashboards.popup.create=Insert the new dashboard name
datasources.my = My Datasources
datasources.name = Datasource
datasources.edit=Edit Datasource
datasources.create=Create Datasource
datasources.show=Show Datasource
datasources.new=New Datasource
datasources.template.create= Create Datasource
datasources.template.update= Update Datasource
datasources.del.confirm= You are going to delete a datasource, are you sure?
datasources.maxvalue = Max Value
datasources.refresh = Refresh Time
datasources.mode = Access Mode
datasources.db = Source Database
datasources.query = Datasource Query
datasources.postprocess = Instance Postprocess
datasources.execQuery = Execute Query
datasources.resultQuery=Datasource Query Results
datasources.dimension = Dimension Hierarchy
datasources.ontoquery = Ontology/Query
datasources.listDatasources = Datasources
datasources.create.error=No pudo crearse el Datasource
datasources.update.error=No pudo actualizarse el Datasource
dashboards.user				= User
dashboards.auth.accesstypes	= Access Types
dashboards.userselect 		= Select user...
dashboards.insertauthorization= Insert Authorization
dashboards.auth.title			= Dashboard Configuration
dashboards.auth.info			= Select a user and add it to the Authorizations. Repeat as many times as users want to authorize.
dashboards.public				= Public
dashboards.public.help		= A public Dashboard can be seen by other private users only for the owner, and the authorizations defined.
dashboards.image            =Image
dashboards.categoryselect = Select Category...
dashboards.subcategoryselect = Select Subcategory...
gadgets.table.config =Table config:
gadgets.map.config =Map config:
gadgets.hide.header =Hide header
gadgets.selectable.rows =Selectable rows
gadgets.boundaryLinks =Boundary links
gadgets.limitSelect =Limit Select
gadgets.page.select= Page Select
gadgets.pagination.limit=Pagination Limit
gadgets.head.background.color=Head Background Color
gadgets.footer.background.color=Footer Background Color
gadgets.head.height=Head Height
gadgets.body.row.height=Body Row Height
gadgets.footer.height=Footer Height
gadgets.head.text.color=Head Text Color
gadgets.body.text.color=Body Text Color
gadgets.footer.text.color=Footer Text Color
gadgets.measures=Measures:
gadgets.add.measure=ADD MEASURE
gadgets.marker.filter=Marker style filter
gadgets.json.marker= JSON With intervals for filters
gadgets.json.marker.info= The JSON must have this format for example: [{"markerColor": "#ADFF2F", "iconColor":"black" ,"icon":"bicycle","max":100,"min":20},{"markerColor": "orange", "iconColor":"black","icon":"bicycle","max":20,"min":5},{"markerColor": "red", "iconColor":"black","icon":"bicycle","max":5,"min":0}]
gadgets.name.exist = The identifier is in use or has less than 5 characters
gadgets.create.name= Gadget Name
gadgets.select.ontology.datasource=Select Ontology or dataSource
gadgets.select.ontology=Select Ontology
gadgets.next = Continue

# ----------------- DEVICES & SYSTEMS ---------

device.breadcrumb.prev 						=Definitions
device.template.show						=Definitions
device.template.list 						=Definition of Digital Clients
device.search.description 					=Client Search, click to toggle the search form and search by any of the fields.
device.id 									=Identification
device.description 							=Description
device.ontologies							=Ontologies
device.user 								=User
device.dateCreated							=created At
device.delete.confirm						=Do you want to delete this Digital Client? All associated log records will also be deleted.
device.breadcrumb.create					=Create Digital Client
device.breadcrumb.update					=Update Digital Client
device.template.create						=Create Digital Client
device.template.update						=Update Digital Client
device.valid.dateDeleted					=The invalidation date must be after the current date
device.ontology.available					=Available ontologies
device.ontology.selected					=Selected ontologies
device.ontology.add							=add
device.ontology.remove						=remove
device.name.property						=Name
device.valor.property						=Value
device.ontologies.accesslevel				=Access Level
device.metainf							    =Meta-Information
device.metainf.help						    =Digital Client meta information, descriptive fields.
device.ontology.notselected					=no selected ontology
device.create.error							=Could not create Digital Client
device.validation.error						=Validation error for Digital Client
device.token								=Token
device.token.lastconnection					=Last Connection
device.token.active							=Active
device.generate.token						=Generate Token
device.change.active.error					=There was an error changing the Token Status
device.token.delete.error					=There was an error Delete Token
device.token.create.error					=There was an error Create Token
device.token.confirm						=Be sure you want to delete the Token?
device.breadcrumb.show						=Show Digital Client
device.manage.show						    =Manage Digital Clients

device.connected							=Connected
device.connected.true						=Yes
device.connected.false						=No
device.lastcon								=Last connection
device.protocol								=Protocol
device.status								=Status
device.template.management.list				=Digital Client list
device.clientplatform						=Digital Client Template
device.management.breadcrumb.show			=Digital Client
device.management.breadcrumb.list			=Digital Client List
device.management.template.basicinfo		=Basic Info
device.management.template.status			=Digital Client Status
device.management.template.logs				=Logs
device.management.template.commands			=Commands
device.tags									=Tags
device.lasstatus							=Last status
device.management.breadcrumb.prev			=Digital Clients
device.management.message					=Message
device.management.status					=Status
device.management.level						=Level
device.management.timestamp					=Timestamp
device.management.longitude					=Longitude
device.management.latitude					=Latitude
device.management.location					=Location
device.management.extraoptions				=Extra Options
device.management.queryinfo1				=*For complete log go to
device.management.queryinfo2				=and execute query:
device.template.management.map				=Devices location
device.management.execute					=Execute
device.management.commandlogs				=Command logs
device.management.commandid					=Command ID
device.management.executedko				=Command could not be executed
device.management.executedok				=Command executed
device.state.connected						=Connected
device.state.disconnected					=Disconnected
device.state.error							=Error
device.state.warning						=Warning
device.delete.error.forbidden				=You don't have enough access level to delete this device
device.delete.error							=Could not delete this device
# -------------- Planner --------------------

planner.template.list=Planned Task List
planner.jobName=Name
planner.jobGroup=Group
planner.status=Status
planner.cronExpression=Cron Expression
planner.previousFireTime=Previous Execution
planner.nextFireTime=Next Execution
planner.resume=Resume
planner.pause=Pause
planner.unschedule=Unschedule
planner.resume.message=Are you sure you want to start the task?
planner.pause.message=Are you sure you want to stop the task?
planner.unschedule.message=Are you sure you want to unschedule the task?

# ------------ DATA MODEL --------------------

datamodel.breadcrumb.list                   =Data Models
datamodel.breadcrumb.new					=New Data Model
datamodel.breadcrumb.prev					=Data Model List
datamodel.breadcrumb.show                   =Data Model Show
datamodel.breadcrumb.update					=Data Model Update
datamodel.create							=Create Data Model
datamodel.description						=Description
datamodel.error.created 					=Could not create the Data Model.
datamodel.error.delete						=Could not delete the Data Model.
datamodel.error.exist						=This Data Model already exist, please use another name.
datamodel.error.update						=Could not update the Data Model.
datamodel.id								=Data Model Id.
datamodel.jsonschema                        =JSON Schema
datamodel.labels                            =Labels
datamodel.labels.list						=Indicate the label separated by  ","
datamodel.name								=Name
datamodel.search.description                =Data Models search, click to toggle the search form and search by any of the fields
datamodel.success.created					=The Data Model has been created correctly.
datamodel.success.deleted					=The Data Model has been deleted correctly.
datamodel.success.updated					=The Data Model has been updated correctly
datamodel.template.list						=Manage Data Models
datamodel.template.show                     =Show Data Model
datamodel.type								=Data Model type
datamodel.notfound.error					=The Data Model does not exist
datamodel.update							=Update Data Model
datamodel.userId                            =Owner
datamodel.validations.emptyfields			=Please, check required fields

# ----------------- DIALOG ----------------------
dialog.confirm.delete.text					=Are you sure you want to delete the selected item?

# ----------------- DIGITAL TWIN TYPE ---------

digitaltwintype.description.min				=Please fill at least 5 chars
digitaltwintype.template.create				=New Digital Twin Type
digitaltwintype.template.update				=Update Digital Twin Type
digitaltwintype.type						=Type
digitaltwintype.operation					=Operation
digitaltwintype.property					=Type Properties
digitaltwintype.actions						=Actions
digitaltwintype.events						=Events
digitaltwintype.logic						=Logic
digitaltwintype.property.unit				=Units
digitaltwintype.property.direction			=Direction
digitaltwintype.events.status				=Status
digitaltwintype.valid.duplicates			=There are duplicates, check it
digitaltwintype.addproperty					=New Property
digitaltwintype.addaction					=New Action
digitaltwintype.addevent					=New Event
digitaltwintype.breadcrumb.show				=Show Digital Twin Type
digitaltwintype.breadcrumb.create			=New Digital Twin Type
digitaltwintype.breadcrumb.update			=Update Digital Twin Type
digitaltwintype.breadcrumb.list				=List Digital Twin Types
digitaltwintype.error.esquema				=You must generate the schema
digitaltwintype.template.list				=Management of Digital Twin Types
digitaltwintype.notfound.error				=The Digital Twin Type selected has not been found
digitaltwintype.validform 					=Form error
digitaltwintype.delete.confirm				=The type of Digital Twin will be remove and with it all the associated Digital Twin Devices. do you wish to continue?
digitaltwintype.validation.error			=An error occurred while validating the form
digitaltwintype.notfound.error				=No type of Digital Twin with that identifier was found
digitaltwintype.update.error				=An error occurred while updating the Digital Twin type
digitaltwintype.create.error				=An error occurred while creating the Digital Twin type
digitaltwintype.delete.error				=An error occurred while deleting the Digital Twin type
digitaltwintype.info.action					=It is necessary to name the functions with the format onActionXXX
digitaltwintype.validation.update			=It is not possible to edit the Digital Twin Type because there are already Digital Twin Devices associated with this type. Please create a new one.
digitaltwintype.validation.fields			=Please, fill name and description before generate schema.
digitaltwintype.selectontology				=Select ontology
digitaltwintype.types.ontology				=Ontology

# ----------------- DIGITAL TWIN DEVICE ---------

digitaltwindevice.breadcrumb.show			=Show Digital Twin Device
digitaltwindevice.breadcrumb.create			=New Digital Twin Device
digitaltwindevice.breadcrumb.update			=Update Digital Twin Device
digitaltwindevice.breadcrumb.list			=List Digital Twin Device
digitaltwindevice.identification			=Identification
digitaltwindevice.type						=Digital Twin Type
digitaltwindevice.schema.url				=URL Schema
digitaltwindevice.port						=Port
digitaltwindevice.broker.endpoint			=Broker endpoint
digitaltwindevice.url						=URL
digitaltwindevice.apykey					=DigitalTwin KEY
digitaltwindevice.generate.apykey			=Generate KEY
digitaltwindevice.validtype					=There is no type of Digital Twin registered
digitaltwindevice.latitude					=Latitude
digitaltwindevice.longitude					=Longitude
digitaltwindevice.generate.proyect			=Generate project
digitaltwindevice.generate					=Generate
digitaltwindevice.notfound.error			=There is no Digital Twin selected
digitaltwindevice.validform					=Form error
digitaltwindevice.delete.confirm			=The Digital Twin Device will be removed, do you wish to continue?
digitaltwindevice.validation.error			=An error occurred while validating the form
digitaltwindevice.notfound.error			=No Digital Twin with that identifier was found
digitaltwindevice.update.error				=There was an error updating the Digital Twin
digitaltwindevice.create.error				=There was an error creating the Digital Twin
digitaltwindevice.delete.error				=There was an error deleting the Digital Twin
digitaltwindevice.maven.compile				=Compile the maven project
digitaltwindevice.maven.sensehat			=Add SenseHat library

# ----------------- DIGITAL TWIN DISPLAY ---------

digitaltwindisplay.breadcrumb.show			= DigitalTwin Display
digitaltwindisplay.template.show			= Consult data of Digital Twins in RTDB
digitaltwindisplay.queryon					= Select the filter for the query
digitaltwindisplay.type						= Type
digitaltwindisplay.device					= Device
digitaltwindisplay.operation				= Operation
digitaltwindisplay.offset					= Number of results per device
digitaltwindisplay.custom.eventname			= Custom event name
digitaltwindisplay.action.actionname		= Action name

# --------------- Pantalla de error inesperado ---------

uncaught_exception_titulo=Unexpected error
uncaught_exception_inicio=Back to main page
uncaught_exception_reportar_error=Report error
uncaught_exception_guardar=Report
uncaught_exception_cancelar=Cancel
uncaught_exception_comments_dialogtitle=Report a commentary
uncaught_exception_comments_label=Commentary

# ----------------- MARKETPLACE  ---------

marketasset.breadcrumb.prev					=Market
marketasset.breadcrumb.create				=Create Market's Asset
marketasset.breadcrumb.edit					=Edit Market's Asset
marketasset.breadcrumb.show					=Show Market's Asset
marketasset.template.list					=Market's Assets
marketasset.template.create					=Create Market's Asset
marketasset.template.edit					=Edit Market's Asset
marketasset.template.show					=Show Market's Asset
marketasset.id								=Identification
marketasset.type							=Type
marketasset.type.ALL						=ALL
marketasset.type.API						=REST Api
marketasset.type.DOCUMENT					=Document
marketasset.type.WEBPROJECT					=Web Project
marketasset.type.APPLICATION				=Application
marketasset.type.URLAPPLICATION				=URL Application
marketasset.state							=State
marketasset.state.ALL						=ALL
marketasset.state.PENDING					=Pending
marketasset.state.APPROVED					=Approved
marketasset.state.REJECTED					=Rejected
marketasset.approve							=Approve
marketasset.reject							=Reject
marketasset.reject.reason					=Rejection Reason
marketasset.reject.dialog					=Rejection Reason
marketasset.paymentmode						=Payment mode
marketasset.paymentmode.FREE				=Free
marketasset.public							=Public
marketasset.private							=Private
marketasset.public							=Public
marketasset.image							=Image
marketasset.title							=Title
marketasset.technologies					=Technologies
marketasset.apirelatedinfo					=API Related Information
marketasset.description						=Description
marketasset.details							=Detailed Description
marketasset.document						=Document
marketasset.functionality					=Funcionality
marketasset.endpoint						=URL
marketasset.webproject						=Web Project
marketasset.installation					=Installation Notes
marketasset.payment							=Payment mode
marketasset.app								=Application
marketasset.asset.technologies				=Asset Technologies Applied
marketasset.rating							=Marketplace's Rating
marketasset.rateit							=Rate It!
marketasset.comments						=Comments
marketasset.newcomment						=Leave a Comment
marketasset.comment.title					=Some Title
marketasset.comment.text					=Write comment here ...
marketasset.comment.button					=Submit Comment
marketasset.list.text.placeholder			=Identification
marketasset.list.value.placeholder			=Select Value
marketasset.backtomarket					=Back to Market
marketasset.recent.assets					=Recent Market Assets
marketasset.market.technologies				=Marketplace Technologies
marketasset.useful.links					=Useful Links
marketasset.identification.error			=Identification already in use
marketasset.filter.nodata					=No Assets with this Type
marketasset.image.error						=Image size is too big

# ------------- GADGET TEMPLATES -------------

gadgettemplates.my							=My Gadget Templates
gadgettemplates.identification 				=Identification
gadgettemplates.description					=Description
gadgettemplates.createdAt					=Created At
gadgettemplates.create						=Create Gadget Template
gadgettemplates.update						=Update Gadget Template
gadgettemplates.template.code				=Template Code HTML&CSS (Drop Zone)
gadgettemplates.template.codeJS				=Template Code JS
gadgettemplates.template.result				=Previsualization
gadgettemplates.public						=Public
gadgettemplates.public.help					=A public Template can be seen by other users, private only remains for the owner.
gadgettemplates.del.confirm 				=You are going to delete a gadget template, are you sure?
gadgettemplates.template.parameters.title   =Template parameters
gadgettemplates.template.parameters.drag    =Drag into the HTML&CSS editor, the parameters you need
gadgettemplates.template.parameters.text.label=Text Label Parameter
gadgettemplates.template.parameters.number.label=Number Label Parameter
gadgettemplates.template.parameters.ds.label=Label with data From Data Source
gadgettemplates.template.parameters.label.select=Label that will be loaded with the selected value from a list
gadgettemplates.template.parameters.selected=These are the parametric components of the template
gadgettemplates.template.parameters.name.ds.label=Label with parameter name from Data Source

# --------------- AUDIT -----------

audit.breadcrumb.show						= Audit display
audit.template.show							= Consult audit data
audit.queryon								= Select the filter for the query
audit.operation								= Operation
audit.operation.all							= All (*)
audit.offset								= Number of records
audit.user									= User

# ----------------- WEB PROJECT ---------

webproject.breadcrumb.list			= Web Projects List
webproject.breadcrumb.create		= New Web Project
webproject.breadcrumb.update		= Update Web Project
webproject.template.list			= Manage Web Projects
webproject.template.create			= Create New Web Project
webproject.template.update			= Update Web Project
webproject.identification			= Identification
webproject.userId					= Owner
webproject.description				= Description
webproject.createdAt				= Created At
webproject.updatedAt				= Updated At
webproject.mainFile					= Main File
webproject.url						= URL
webproject.name						= Name
webproject.uploadZIP				= Upload ZIP
webproject.validation.emptyfields 	= Please, check required fields
webproject.validation.error			= An error occurred validating the form
webproject.validation.exists		= Web Project's identification already exists
webproject.create.error				= Cannot create web project
webproject.update.error				= Cannot update web project
webproject.delete.error				= Cannot delete web project
webproject.uploadzip.error			= Cannot upload zip file

# ----------------- KSQL FLOWS ---------
ksql.flow.list						= KSQL Flows List
ksql.flow.breadcrumb.list			= KSQL Flows List
ksql.flow.breadcrumb.create			= New KSQL Flow
ksql.flow.breadcrumb.update			= Update KSQL Flow
ksql.flow.breadcrumb.prev			= KSQL Flows List
ksql.flow.template.list				= Manage KSQL Flows
ksql.flow.template.create			= Create KSQL Flow
ksql.flow.template.show				= Show KSQL Flow
ksql.flow.template.update			= Update KSQL Flow
ksql.flow.identification			= Identification
ksql.flow.userId					= Owner
ksql.flow.description				= Description
ksql.flow.createdAt					= Created At
ksql.flow.validation.error			= An error occurred validating the form
ksql.flow.description.min			= Please fill at least 5 chars
ksql.flow.delete.confirm			= Do you want to delete this KSQL Flow ?
ksql.relation.identification		= Identification
ksql.relation.description			= Description
ksql.relation.type					= Resource Type
ksql.relation.ksql.type				= KSQL Statement type
ksql.relation.ksql.statement		= KSQL Statement
ksql.relation.modal.tittle.create	= Create KSQL Resource
ksql.relation.modal.tittle.edit		= Edit KSQL Resource
ksql.relation.type.origin			= ORIGIN
ksql.relation.type.destiny			= DESTINY
ksql.relation.type.process			= PROCESS
ksql.relation.ontology.destiny		= Destination Ontology
ksql.relation.ontology.origin		= Origin Ontology
ksql.relation.delete.confirm		= Do you want to delete this KSQL Resource ?
ksql.relation.creation.ok			= KSQL Resource successfully created
ksql.relation.creation.error.server = Error creating KSQL Resource in server
ksql.relation.creation.error.dup.relation	= The desired KSQL Resource (or one with the same name) is already in the flow
ksql.relation.creation.error.no.permissions = Unauthorized to create KSQL Resources in this Flow
ksql.relation.creation.error.flow.not.found = Flow not found
ksql.relation.deletion.ok			= KSQL Resource successfully deleted
ksql.relation.deletion.error.no.permissions = Unauthorized to delete KSQL Resources in this Flow
ksql.relation.deletion.error.server = Error deleting KSQL Resource in server
ksql.relation.delete.error.not.found	= KSQL Resource not Found
ksql.relation.update.ok				= KSQL Resource successfully updated
ksql.relation.update.error.server = Error updating KSQL Resource in server

# ----------------- Notebooks ---------

notebook.breadcrumb.list				= Notebook list
notebook.breadcrumb.share				= Share
notebook.template.list                  = My notebooks
notebook.manageinter                    = Manage Interpreters
notebook.configuration                  = Configuration
notebook.newnotebook                    = New Notebook
notebook.newnotebook.popup              = Type the new notebook name
notebook.importnotebook                 = Import Notebook
notebook.clone                          = Clone notebook
notebook.download                       = Download notebook
notebook.confirm.delete                 = Do you want to delete this notebook?
notebook.share							= Share Notebook
notebook.user							= User
notebook.selectuser						= Select user ...
notebook.auth.accesstypes				= Access types
notebook.insertauthorization			= Add Share Authorization
notebook.auth.info						= Select a user, choose the type of Access you want to give to the ontology and add it to the Authorizations. Repeat as many times as users want to authorize.
notebook.auth.title						= Notebooks Authorizations
notebook.auth.user						= User
notebook.auth.accesstype				= Access Type
notebook.public							= Public
notebook.private						= Private

# ----------------- Ontology API Rest ---------

ontology.rest 							= REST Virtual Ontology
ontology.rest.base.url					= Base URL
ontology.rest.auth						= Authentication
ontology.rest.apikey					= Api Key
ontology.rest.token						= Token
ontology.rest.oauth						= OAuth
ontology.rest.header					= Header
ontology.rest.user						= User
ontology.rest.password					= Password
ontology.rest.basic						= Basic
ontology.rest.post.info					= The schema is necessary for POST operations
ontology.rest.operations				= Operations
ontology.rest.infer						= Infer operations from the SQL statement 
ontology.rest.infer.info				= Ability to invoke an operation from the query without having to declare it
ontology.rest.wadl						= Read from WADL
ontology.rest.swagger					= Read from Swagger
ontology.rest.import					= Import
ontology.rest.new.operation				= New Operation
ontology.rest.operation.name			= Name
ontology.rest.operation.type			= Type
ontology.rest.operation.path			= Path Params
ontology.rest.operation.query			= Query Params
ontology.rest.operation.index			= Index
ontology.rest.operation.add				= Add Operation
ontology.rest.operation.description		= Description
ontology.rest.operation.manual			= Manually
ontology.rest.operation.origin			= Origin
ontology.rest.operation.list			= My Operations
ontology.rest.authentication.enable		= Enable Authentication
ontology.rest.operation.name.required	= The field name of the operation is required
ontology.rest.operation.desc.required	= The field description of the operation is required
ontology.rest.operation.update			= Update Operation
ontology.rest.add						= Add
ontology.rest.headers					= Headers
ontology.rest.headers.add				= Add others headers
ontology.rest.headers.key				= Key
ontology.rest.headers.value				= Value
ontology.rest.headers.list				= My Headers
ontology.rest.header.key.required		= The field header of the header is required
ontology.rest.header.value.required		= The field value of the header is required
ontology.rest.schema.required			= For POST operations it is necessary to define a JSON schema
ontology.rest.operation.field			= Field
ontology.rest.operation.path			= Path
ontology.rest.operation.default.type	= Default Operation Type
ontology.rest.object.definition.selection	= Select one object definition from the list:

# ----------------- APPS  ---------
app.realm									=Realm
app.breadcrumb.prev 						=Realms
app.show									=Realms
app.list 									=Realms
app.search.description 						=Realm Search, click to toggle the search form and search by any of the fields.
app.appId									=Identification
app.name 									=Name
app.description 							=Description
app.secret 									=Secret
app.tokenValiditySeconds					=Token validity seconds
app.roles									=Roles
app.roles.fieldEmpty						=Please, fill in the role fields correctly: 2 minimum characters for the role name and 5 minimum characters for the role description
app.dateCreated								=created At
app.delete.confirm							=Do you want to delete this Realm?
app.breadcrumb.create						=Create Realm
app.breadcrumb.update						=Update Realm
app.create									=Create Realm
app.update									=Update Realm
app.role.add								=Add role
app.role.remove								=Remove role
app.role.name								=Role name
app.role.description						=Role description
app.roles.name								=Roles
app.roles.description						=Description
app.valid.dateDeleted						=The invalidation date must be after the current date
app.breadcrumb.show							=Show Realm
app.validation.error						=Validation error for realm
app.authorizations							=Users assignment
app.user									=User
app.user.fullName							=Full Name
app.userselect								=Select user...
app.roleselect								=Select role...
app.insertauthorization						=Insert Assignment
app.auth.title								=User-Role assignment
app.auth.info								=Select a user, choose the role you want to assign him and add it to the User-Role Assignment. Repeat as many times as users want to assign.
app.auth.role								=Role
app.valid.auths.user						=Please, select an User and a Role.
app.valid.authinsert 						=You must create the realm and its roles first and then you can assign users
app.valid.auths.userRole					=You have already assigned that user to that role
app.associations 							=Realm Associations
appfather.roles								=Roles from
app.rolefatherselect						=Select a role...
appchild.name								=Associated realm
app.appchildselect							=Select a realm...
appchild.roles 								=Roles from the associated realm
app.rolechildselect							=Select a role...
app.insertassociation						=Insert association
app.assoc.title								=Realm Associations
app.assoc.info								=Choose the realm you want to associate this one with and its respective roles association and add them to the Associations. Repeat as many times as realms want to associate
app.appFather 								=Father Realm
app.appChild 								=Child Realm
app.roleFather 								=Father Role
app.roleChild 								=Child Role
app.errorpattern							=Only alphanumeric characters. Required field. At least 5 characters.
app.valid.assocEmpty						=Please, select the realm and the roles to build the association
app.valid.associnsert						=You must create the realm and its roles first and then you can make associations
app.valid.assocchildapps					=There are not available realms or this realm is already associated with other(s)
app.valid.assoc.appRole						=This assignment of realms and roles already exists
app.valid.existingRole						=There is already another role with this name in the realm
app.valid.createProject						=To link a project with a realm, you must first create the realm
app.form.success							=You have successfully saved the realm!
app.ldap.users.title						=List LDAP users
app.ldap.users.tooltip						=List users in LDAP server to make authorizations	
app.ldap.users.base							=Users DN Base
app.ldap.groups.base						=Groups DN Base
app.ldap.groups								=Groups
app.ldap.group								=Group
app.ldap.groups.auth						=LDAP Group Authorizations
app.ldap.users.auth							=LDAP Users Authorizations
app.projects								=Projects
app.projects.new							=New project
app.project.existing						=Existing project


# ----------------- PROJECT  ---------
project.name							=Name
project.type							=Type
project.description						=Description
project.select							=Select an existing project
project.selecttype						=Select project type
projects.my								=My projects
projects.list							=Project List
project.breadcrumb.create				=Create project
project.breadcrumb.update				=Update project
project.new								=New project
project.resources						=Shared Resources
project.users							=Users
project.form.success					=You have successfully created the project!
project.validation.createfirst			=To add Users, Resources and Web Project to the project, you must first create it.
project.realm.users.title				=Add users from Realm
project.realm.users.tooltip				=If you link this project with an existing Realm, every user in the Realm will be part of the project.
project.use.realm						=Link with Realm?
project.realmselect						=Select Realm...		
project.link.realm					    =Link Realm
project.users.members					=Project members
project.nomembers						=There are no members in this project yet. Please add them from an existing Realm or from the list of platform users.
project.unlink.realm					=Unlink Realm
project.users.platform					=Platform users
project.add.member						=Add User
project.validation.userselect			=No user selected!
project.webprojectselect				=Select Web project
project.webproject.list					=Web projects
project.link.webproject					=Link Web project
project.unlink.webproject				=Unlink Web project
project.validation.webprojectselect		=No Web project selected!
project.resources.results				=Resources matching input search
project.resource.auths					=User Authorizations
project.resource.identification			=Name
project.resource.type					=Resource type
project.resource.accesstype				=Access type
project.resource.users					=Users
project.resource.selectaccess			=Select access type
project.resource.roles					=Roles
project.removeauthorization				=Remove
project.updateauthorization				=Update
project.validation.acccessselect		=Please select Access Type and User or Role before creating authorizations
project.confirm.unlinkrealm				= Are you sure you want to unlink this Realm? When unlinked all authorizations will be removed as well.
project.del.confirm						= Are you sure you want to delete this Project?
project.environment						=Project Environment
project.resources						=Project Resources
project.users.all						=ALL


# ----------------- PROJECT  ---------
videobroker.template.create		= New Video Capture
videobroker.template.update		= Update Video Capture
videobroker.url					= Cam connection URL
videobroker.sampling			= Sampling interval (milliseconds)
videobroker.processor 			= Processing type
videobroker.breadcrumb.update   = Update Video Capture
videobroker.breadcrumb.create   = Create Video Capture
videobroker.breadcrumb.prev     = Video Captures
videobroker.template.list		= Video Captures List
videobroker.url					= IP CAM URL
videobroker.delete.confirm		= Are you sure you want to delete this Video Capture Configuration?
videobroker.newontology.tooltip = New ontology will be created for storing processed results.
videobroker.newontology			= Create new Ontology

# ----------------- DATAFLOW  ---------

dataflow.newpipeline.popup=Insert new dataflow name
dataflow.confirm.delete=Do you want to delete this dataflow?
dataflow.breadcrumb.list=Dataflows
dataflow.template.list=My dataflows
dataflow.newpipeline=New Dataflow
dataflow.configuration=Configuration

# ----------------- VIRTUAL ONTOLOGY  ---------

ontology.virtual.datasource.select			= Select a Datasource
ontology.virtual.datasource.create			= My Datasources
ontology.virtual.datasource.combo			= Select Datasource...
ontology.virtual.select.collection			= Select one table from RTDB
ontology.virtual.register.collection		= Table entry
ontology.virtual.schema						= Generated schema
ontology.virtual.collection.combo			= Select Table...
ontology.virtual.collection					= Tables
ontology.virtual.generate.schema			= Generate Schema
ontology.virtual.schema.error				= First select a table
ontology.virtual.id							= Associate ID
ontology.virtual.id.help					= Associate a field of ontology as a unique identifier
ontology.virtual.fields						= Fields
ontology.virtual.fields.combo				= Select a field...
ontology.virtual.selection					= Please, fill name and description before.

# ----------------- DATASOURCES  ---------

datasource.identification					= Identification
datasource.connection.url					= URL Connection
datasource.user								= User
datasource.credentials						= Credentials
datasource.poolsize							= Pool Size
datasource.query.limit						= Query Limit
datasource.breadcrumb.list					= Datasources
datasource.breadcrumb.show					= Show datasource
datasource.breadcrumb.create				= New datasource
datasource.breadcrumb.update				= Update datasource
datasource.delete.confirm					= The virtual datasource is going to be delete, do you wish to continue?
datasource.check.fail						= Checking the connection failed, please check the parameters
datasource.check.success					= The connection check is correct
datasource.check							= Check connection
datasource.queryresults						= Datasource Query Results
# ----------------- CRUD  ---------
crud.crud =CRUD
crud.record=record
crud.clean.json=Clean record
crud.objectLayout=Show like Grid
crud.objectLayout.info=change the layout of the fields on the screen to make it easier to use
crud.grid=Grid
crud.confirm.delete = You are going to delete a record with identification : 
crud.confirm.delete.sure = Are you sure?
crud.aggregate.fields.where = Add fields to WHERE
crud.aggregate.fields.order = Add field to ORDER BY
crud.exception.create = An error has occurred and it has not been possible to store the information
crud.campos=Fields
crud.operador=Operator
crud.offset=Offset

# -----------------Migration ----------

migration.import=Import
migration.export=Export
migration.exportData=Export Data
migration.exportSchema=Export Schema
migration.compare=Compare
migration.compareSchema=Compare Schema
migration.type=Type
migration.message=Message
migration.class=Class of Entity Processed
migration.id=Id of Entity Processed
migration.dependency=Entity that is Needed
migration.dependencyClass=Class Needed
migration.load=Load File
migration.selectClasses=Classes to be Imported
migration.return=Return
migration.differences=Differences

# ----------------- CATEGORIES ----------

category.breadcrumb.list					= Category List
category.breadcrumb.update					= Update Category
category.breadcrumb.create					= Create Category
category.search.description 				= Category Search, click to open/collapse the search form and search by any of the fields.
category.template.list						= Manage Categories
category.template.create 					= New Category
category.template.update 					= Update Category
category.template.show						= Category
category.name.error							= Category name can't start with a number
category.validation.error					= An error occurred while validating the form
category.update.error						= An error occurred while updating the category
category.delete.confirm						= The Category will be remove and with it all the associated subcategories. Do you wish to continue?
category.notfound.error						= Category not found
category.delete.error						= Error deleting category
category.add.subcategory					= Add subcategory
category.categories							= Categories

# ----------------- SUBCATEGORIES ----------

subcategory.breadcrumb.list					= Subcategory List
subcategory.breadcrumb.update				= Update Subcategory
subcategory.breadcrumb.create				= Create Subcategory
subcategory.search.description 				= Subcategory Search, click to open/collapse the search form and search by any of the fields.
subcategory.template.list					= Manage Subcategories
subcategory.template.create 				= New Subcategory
subcategory.template.update 				= Update Subcategory
subcategory.template.show					= Subcategory
subcategory.name.error						= Subcategory name can't start with a number
subcategory.validation.error				= An error occurred while validating the form
subcategory.update.error					= An error occurred while updating the subcategory
subcategory.delete.confirm					= Do you want to delete this subcategory?
subcategory.notfound.error					= Subcategory not found
subcategory.delete.error					= Error deleting subcategory
subcategory.dashboard.error.nosubcategory	= Error. You have to select a subcategory
subcategory.subcategories					= Subcategories

# ----------------- MODELS ----------

model.breadcrumb.list						= Models List
model.breadcrumb.update						= Update Model
model.breadcrumb.create						= Create Model
model.search.description 					= Model Search, click to open/collapse the search form and search by any of the fields.
model.template.list							= Manage Models
model.template.create 						= New Model
model.template.update 						= Update Model
model.template.show							= Model
model.name.error							= Model name can't start with a number
model.validation.error						= An error occurred while validating the form
model.update.error							= An error occurred while updating the model
model.delete.confirm						= Do you want to delete this model?
model.notfound.error						= Model not found
model.delete.error							= Error deleting model
model.parameter								= Input Parameter
model.parameter.type						= Type
model.parameter.rank						= Rank
model.parameter.ontology					= Ontology
model.parameter.url							= Output URL
model.parameter.add							= Add parameter
model.ontology.select						= Select Ontology...
model.notebook.select						= Select Notebook...
model.delete.confirm						= Model is going to be deleted, do you wish to continue?
model.parameters							= Parameters
model.category.add							= Add new category
model.parameter.value						= Value
model.parameter.type.select					= Select Type...
model.output.source							= Output source
model.output.ontology						= Ontology
model.output.dashboard						= Dashboard
model.dashboard.select						= Select Dashboard...
model.parameter.from						= From
model.parameter.to							= To
model.run									= Run
model.run.clean								= Clean Model
model.input.paragraph						= Input Paragraph Id
model.run.save								= Save
model.run.save.name							= Name of the Notebook clon
model.output.paragraph						= Output Paragraph Id
model.notebook.select.error					= First select a Notebook
model.clone.ok								= The Execution Model has been successfully saved
model.clone.fail							= There was an error saving the Execution Model
model.executions.list						= Executions list
model.execute								= Execute
model.input.parameters.info					= In this section you can configure the input parameters of the notebook, these parameters are necessary for the correct execution of the notebook.
model.output.source.info					= In this section you can choose what will be the exit of the execution of the model, it could be a Dashboard or the output paragraph of the notebook selected, that is always the last paragraph
model.input.paragraph.info					= The first paragraph of the Notebook have to be the configuration paragraph
model.input.parameters						= Input Parameters
model.add.parameter.info					= New Parameter
model.parameter.enum						= Enumerators
model.parameter.error						= Fill all the fields
model.output.error							= Select an output source
model.category.error						= Select a category and subcategory for the model
model.initial.style							= Initial Style
# ----------------- EXECUTIONS MODELS ----------

executionmodels.breadcrumb.list				= Models Executions List
executionmodels.search.description 			= Model Execution Search, click to open/collapse the search form and search by any of the fields.
executionmodels.template.list				= Manage Models Executions
executionmodels.template.show				= Model Execution
executionmodels.compare						= Compare
executionmodels.compare.error				= It is only allowed to compare two executions at the same time
executionmodels.compare.error2				= It's not possible to compare the executions now.
executionmodels.save.ok						= The execution of models is saved successfully
executionmodels.save.ko						= There was an error saving the execution, please try again.
executionmodels.save						= Save Execution

# ------------------ KAFKA MONITORING ---------

kafka.monitoring.breadcrumb					= Kafka Monitoring
kafka.monitoring.template.list				= Kafka Monitoring
kafka.monitoring.client.group.name			= Client Group
kafka.monitoring.client.group.partition.count	= Partition Count
kafka.monitoring.client.group.total.lag		= Total Lag
kafka.monitoring.client.group.completion.percentage	= Completion percentage
kafka.monitoring.client.group.state			= State
kafka.monitoring.consumer.detail.breadcrumb	= Client Group Detail
kafka.monitoring.partition.detail.breadcrumb	= Partition Detail
kafka.monitoring.template.show				= Kafka Monitoring - Client Group Detail
kafka.monitoring.detail.topic				= Topic
kafka.monitoring.detail.partition			= Partition
kafka.monitoring.detail.timestamp			= Timestamp
kafka.monitoring.detail.offset				= Offset
kafka.monitoring.detail.lag					= Lag
kafka.monitor.not.running					= Kafka monitor is currently unavailable.
executionmodels.save						= Save Execution
# ----------------- CRON ----------
cron.dialog.second= second
cron.dialog.minute = minute
cron.dialog.horary = horary
cron.dialog.diary = diary
cron.dialog.weekly = weekly
cron.dialog.monthly = monthly
cron.dialog.yearly = yearly
cron.dialog.every =every
cron.at = at
cron.days.at = days at
cron.dialog.seconds = seconds
cron.dialog.minutes = minutes
cron.dialog.hours = hours
cron.monday= Monday
cron.tuesday = Tuesday
cron.wednsday = Wednsday
cron.thursday = Thursday
cron.friday = Friday
cron.saturday = Saturday
cron.sunday = Sunday
cron.the.day = the day
cron.of.each = of each
cron.months = months
cron.the = the
cron.from = from
cron.first = First
cron.second = Second
cron.third = Third
cron.fourth = Fourth
cron.january = January
cron.february = february
cron.march = March
cron.april = April
cron.may = May
cron.june = June
cron.july = July
cron.august = August
cron.september = September
cron.october = October
cron.november = November
cron.december = December

# ----------------- LAYERS ----------

layer.breadcrumb.list						= Layers list
layer.breadcrumb.update.iot					= Update Ontology Layer
layer.breadcrumb.create.iot					= Create Ontology Layer
layer.breadcrumb.update.external			= Update External Layer
layer.breadcrumb.create.external			= Create External Layer
layer.breadcrumb.show						= Show Layer
layer.search.description 					= Layer search, click to open/collapse the search form and search by any of the fields.
layer.template.list							= Manage Layer
layer.template.create 						= New Layer
layer.template.update 						= Update Layer
layer.template.show							= Layer
layer.name.error							= Layer name can't start with a number
layer.field.select							= Select a field...
layer.field.geometry						= Geometry
layer.geometry.simbol						= Symbol
layer.geometry.color						= Color
layer.geometry.opacity						= Opacity
layer.field									= Field
layer.attribute								= Attribute
layer.add.attribute							= Add Attribute 
layer.new.attribute							= New Attribute
layer.geometry.select						= Geometry field
layer.geometry.type							= Geometry type
layer.geometry.type.select					= Select a type...
layer.geometry.latlon						= Order of coordinates
layer.symbology								= Symbology
layer.symbology.outside.color				= Outer line color
layer.symbology.inside.color				= Inner color
layer.symbology.inside.thickness			= Inner line thickness 
layer.symbology.outside.thickness			= Outer line thickness 
layer.public.help							= A public Layer can be used on viewers by other users, private only remains for the owner.
layer.symbology.size						= Size
layer.delete.info							= The Layer is going to be delete, ¿do you want to contiue?
layer.delete.title							= Delete Layer
layer.delete.error							= Layer in use, it cannot be deleted
layer.attributes							= Attributes
layer.add.coordinates						= Add Coordinates
layer.crud.coordinates						= Insert Coordinates
layer.crud.draw								= Draw
layer.crud.draw.free						= Free Draw
layer.crud.coordinates.list					= List of Coordinates
layer.create.iot							= Creation Ontology Layer
layer.create.external               		= Creation External Layer
layer.create.iot.desc           			= This option allows you to create a layer from the data stored in an ontology.
layer.create.external.desc					= This option allows you to create a layer from an external URL
layer.wizard								= Layer Wizard
layer.external.url							= External URL
layer.external.type							= Type
layer.external.wms.type						= WMS Layer
layer.isheatmap								= Heat Map
layer.weight								= Select the Weight property
layer.radius								= Radius
layer.svg.title								= Information
layer.svg.info								= Fill the coordinate fields that define the rectangle where the SVG/image will be painted and click the run button.
layer.svg.coordinate.west					= West coordinate
layer.svg.coordinate.east					= East coordinate
layer.svg.coordinate.north					= North coordinate
layer.svg.coordinate.south					= South coordinate
layer.svg.file								= SVG/Image
layer.svg.file.info							= To be able to choose your file, before you have to upload it to the Binary Files system.
layer.svg.file.select						= Select file...

# ----------------- VIEWERS ----------

viewer.breadcrumb.list						= Viewer List
viewer.breadcrumb.update					= Update Viewer
viewer.breadcrumb.create					= Create Viewer
viewer.breadcrumb.show						= Show Viewer
viewer.search.description 					= Viewer search, click to open/collapse the search form and search by any of the fields.
viewer.template.list						= Viewer Management
viewer.template.create 						= New Viewer
viewer.template.update 						= Update Viewer
viewer.template.show						= Viewer
viewer.name.error							= Viewer name can't start with a number
viewer.tecnology							= Technology
viewer.base.layer							= Base Map
viewer.tecnology.select						= Select a Technology..
viewer.base.layer.select					= Select a Base Layer...
viewer.layer								= Layers
viewer.layer.select							= Select layers...
viewer.delete.info							= The Viewer is going to be delete, ¿do you want to contiue?
viewer.delete.title							= Delete Viewer
viewer.map									= Map
viewer.js									= JS Code
viewer.download								= Download code
viewer.rollback.help						= By generating a rollback of a viewer, you can revert to the previous version in the future
