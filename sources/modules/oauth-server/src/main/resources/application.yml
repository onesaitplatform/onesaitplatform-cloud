##--spring.config.name=oauth-server
##security.require_ssl: true
server: ## Config Web Server
   port: 21000
   contextPath: /oauth-server
   tomcat:
      access_log_enabled: true
      basedir: target/tomcat

ldap:
  url: ldap://localhost:10389/
  base: ou=User,ou=onesait,ou=system
  username: uid=admin,ou=system
  password: secret
  defaultRole: ROLE_USER
  attributesMap:
     userId: uid
     mail: mail
     cn: cn
# all access to actuator endpoints without security
management.security.enabled: false
#security.basic.enabled: false

onesaitplatform:
   audit.global.notify: true
   locale.default: en
   authentication:
      provider: configdb
      configdb:
        acl:
          enabled: false
          list: administrator,analytics,dataviewer,demo_developer,demo_user,developer,operations,partner,sysadmin,user
   password.pattern: (?=^.{10,20}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$      

sofia2: #Config onesaitplatform specific
   database.mongodb:
      quasar.maxHttpConnections: 10
      quasar.maxHttpConnectionsPerRoute: 10
      quasar.connectionTimeout.millis: 10000
      quasar.connector.http.endpoint: http://localhost:18200/query/fs/ 
   database.elasticsearch:
      database: onesaitplatform_rtdb_es
      sql.maxHttpConnections: 10
      sql.maxHttpConnectionsPerRoute: 10
      sql.connectionTimeout.millis: 10000
      sql.connector.http.endpoint: http://localhost:9200
      url: localhost
      port: 9300 
spring: ## General Config  
   application.name: onesaitplatform-oauth-server
   boot.admin: #Spring Boot Admin Config    
      url: http://localhost:19000
      username: operations
      password: ENC(2Xd2AOD2NrMaWs915/st8C4ILo3qlHXv)
      client.metadata.user.name: ${spring.boot.admin.username}
      client.metadata.user.password: $spring.boot.admin.password} 
   datasource: ## JPA Config
      url: jdbc:mysql://localhost:3306/onesaitplatform_config?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&autoReconnect=true
      username: root
      password: ENC(v6o0Jud8aASYCkRb+u0RTICFUR8Pd5ph) 
      driver-class-name: com.mysql.jdbc.Driver      
      test-while-idle: true
      test-on-borrow: true
      validation-query: SELECT 1      
      # Number of ms to wait before throwing an exception if no connection is available.
      max-wait: 10000
      # Maximum number of active connections that can be allocated from this pool at the same time.
      max-active: 30
      initial-size: 10
      max-idle: 30
      min-idle: 10
      
   jpa:
      # The SQL dialect makes Hibernate generate better SQL for the chosen database
      properties.hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
      # Hibernate ddl auto (create, create-drop, validate, update)
      hibernate.ddl-auto: validate
      properties.hibernate.enable_lazy_load_no_trans: true
   jmx:
    enabled: true
   security:
    basic:
      enabled: false

## CXF      
cxf:
  path: /services/management
  servlet.init: 
    component-scan: true
    classes-scan-packages: com.minsait.onesait.onesaitplatform.api.rest
            
## LOGGING CONF
logging:
   path: ./target/ 
   file: ${spring.application.name}
   level:
      com.minsait: INFO
      
      
## OAUTH    
security:
  signing-key: s1f41234pwqdqkl4l12ghg9853123sds1f41234pwqdqkl4l12ghg9853123sd
  jwt:
    client-id: onesaitplatform
    client-secret: onesaitplatform
    grant-type: authorization_code,refresh_token,password
    scopes: openid,authorization_code
    