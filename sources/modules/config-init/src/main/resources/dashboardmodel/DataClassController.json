{
  "navigation": {
    "showBreadcrumbIcon": false,
    "showBreadcrumb": false
  },
  "pages": [
    {
      "combinelayers": false,
      "background": {
        "file": []
      },
      "selectedlayer": 0,
      "icon": "apps",
      "layers": [
        {
          "gridboard": [
            {
              "$$hashKey": "object:71"
            },
            {
              "border": {
                "color": "hsl(0, 0%, 90%)",
                "width": 0,
                "radius": 5
              },
              "padding": 0,
              "backgroundColor": "white",
              "notshowDotsMenu": true,
              "hideBadges": true,
              "prettyTitle": "livehtml_1668528860303 (livehtml)",
              "rows": 11,
              "type": "livehtml",
              "$$hashKey": "object:339",
              "content": "<!--Focus here and F11 or F10 to full screen editor-->\n<!-- Write your CSS <style></style> here -->\n<style>  \n   .good-th {\n        user-select: none;\n        text-align: left;\n        white-space: nowrap;\n        overflow: hidden;\n        padding: .5rem 0;\n        background-color: var(--color-bg-secondary);\n        border-bottom: 1px solid var(--color-border-hard-divisor);\n        font-size:13px;\n        font-weight:600;\n   }\n   .good-td { \n        padding: 1rem 0;\n        min-width: 0;\n        box-sizing: border-box;\n        text-overflow: ellipsis;\n        vertical-align: middle;\n        position: relative;\n        border-bottom: 1px solid var(--color-border-hard-divisor);\n        transition: background-color .25s ease;\n        font-size:13px;\n   }\n   .good-td:hover { background-color: #f5f5f5; }\n\n   .vgt-selection-info-row {\n        background: white;\n        padding: 12px 12px 0px 12px;\n        font-size: 13px;\n        border-top: 1px solid #dcdfe6;\n        border-left: 1px solid #dcdfe6;\n        border-right: 1px solid #dcdfe6;\n        font-weight: 700;\n        height: 50px;\n    }\n    .vgt-wrap__footer {\n        color: #606266;\n        padding: 1em;\n        border: none;\n        background: none;\n    }   \n    .vgt-wrap__footer .footer__row-count__label {\n        font-size: 14px;\n        color: #909399;\n        height: inherit!important;\n    }\n    .vgt-table.no-border td, .vgt-table.no-border th {\n        border: none!important;\n    }\n\n</style>\n<div class=\"gadget-app\">       \n    <vue-good-table\n        v-if=\"table.rows.length > 0\"\n        ref=\"MyTable\"\n        @on-selected-rows-change=\"selectionChanged\"       \n        :columns=\"table.columns\"\n        :rows=\"table.rows || []\"        \n        :line-numbers=\"true\"\n        :sort-options=\"{ enabled: true, initialSortBy: {field: 'formatedTimeStamp', type: 'asc'} }\"\n        :search-options=\"{ enabled: true, trigger: 'enter', placeholder: 'Search this table'}\"\n        :pagination-options=\"{ enabled: true, nextLabel: 'next', prevLabel: 'prev', rowsPerPageLabel: 'Rows per page', ofLabel: 'of', allLabel: 'All', perPage: 10 }\"           \n        :select-options=\"{ enabled: false, selectOnCheckboxOnly: true, selectionInfoClass: 'custom-class', selectionText: 'Filas Seleccionadas',    clearSelectionText: 'Borrar',   disableSelectInfo: false,  selectAllByGroup: true  }\"\n        :group-options=\"groupOptions\"\n        theme=\"polar-bear\"\n        max-height=\"400px\"\n        styleClass=\"vgt-table no-border striped\">        \n        <div slot=\"selected-row-actions\" style=\"padding: 0px; position: relative;top: -4px;right: 0px;\">\n            <ods-button type=\"primary\" :size=\"'small'\">S-Action 1</ods-button>\n        </div>\n       <!--  <div slot=\"table-actions\" style=\"padding: 0px;position: relative;top: 4px;right: 8px;min-width: 150px;margin-left: 12px;\"> \n             <div v-if=\"isGroupedTable\">           \n                <ods-button type=\"secondary\" :size=\"'small'\" @click=\"$refs.MyTable.expandAll()\"> Expand </ods-button>\n                <ods-button type=\"secondary\" :size=\"'small'\" @click=\"$refs.MyTable.collapseAll()\"> Collapse</ods-button>\n                <ods-button type=\"secondary\" :size=\"'small'\" @click=\"toggleGroupBy('OFF')\"> GroupBy OFF</ods-button>\n             </div>\n             <div v-else>\n                 <ods-button type=\"secondary\" :size=\"'small'\"> Main Action </ods-button>\n                 <ods-button type=\"secondary\" :size=\"'small'\" @click=\"toggleGroupBy('ON')\"> GroupBy ON</ods-button>\n             </div>\n        </div>-->\n        <template slot=\"table-column\" slot-scope=\"props\">\n            <span v-if=\"props.column.field == 'createdAt'\">\n                <i class=\"ods-icon-calendar\" style=\"font-size: .75rem; color: #666\"></i> {{props.column.label}}\n            </span>\n            <span v-else>\n                {{props.column.label}}\n            </span>\n        </template>\n        <template slot=\"table-row\" slot-scope=\"props\">\n            <span v-if=\"props.column.field == 'age'\">\n                <span v-show=\"props.row.age >= 18\" style=\"font-weight: bold; color: blue;\">{{props.row.age}}</span> \n                <span v-show=\"props.row.age < 18\"  style=\"font-weight: normal; color: gray;\">{{props.row.age}}</span> \n            </span>\n            <span v-else>\n                {{props.formattedRow[props.column.field]}}\n            </span>\n        </template>        \n    </vue-good-table>      \n</div>",
              "nomargin": false,
              "contentcode": "//Write your Vue JSON controller code here\n\n//Focus here and F11 to full screen editor\n\n//This function will be call once to init components\nVue.use(window['vue-good-table'])\nvm.vueconfig = {\n\tel: document.getElementById(vm.id).querySelector('vuetemplate  .gadget-app'),\n\tdata: {\t\n\t\ttable:{\n\t\t\t columns: [\n\t\t\t\t{\n\t\t\t\tlabel: 'module',\n\t\t\t\tfield: 'module',\n\t\t\t\thidden: false,\n\t\t\t\ttooltip: 'module',\n\t\t\t\ttdClass: 'good-td',\n\t\t\t\tthClass: 'good-th',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\tlabel: 'errorMessage',\n\t\t\t\tfield: 'errorMessage',\n\t\t\t\thidden: false,\n\t\t\t\ttooltip: 'errorMessage',\n\t\t\t\ttdClass: 'good-td',\n\t\t\t\tthClass: 'good-th',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\tlabel: 'methodName',\n\t\t\t\tfield: 'methodName',\n\t\t\t\thidden: false,\n\t\t\t\ttooltip: 'methodName',\n\t\t\t\ttdClass: 'good-td',\n\t\t\t\tthClass: 'good-th',\n\t\t\t\t},{\n\t\t\t\tlabel: 'operationType',\n\t\t\t\tfield: 'operationType',\n\t\t\t\thidden: false,\n\t\t\t\ttooltip: 'operationType',\n\t\t\t\ttdClass: 'good-td',\n\t\t\t\tthClass: 'good-th',\n\t\t\t\t},{\n\t\t\t\tlabel: 'type',\n\t\t\t\tfield: 'type',\n\t\t\t\thidden: false,\n\t\t\t\ttooltip: 'type',\n\t\t\t\ttdClass: 'good-td',\n\t\t\t\tthClass: 'good-th',\n\t\t\t\t},{\n\t\t\t\tlabel: 'user',\n\t\t\t\tfield: 'user',\n\t\t\t\thidden: false,\n\t\t\t\ttooltip: 'user',\n\t\t\t\ttdClass: 'good-td',\n\t\t\t\tthClass: 'good-th',\n\t\t\t\t},{\n\t\t\t\tlabel: 'ontology',\n\t\t\t\tfield: 'ontology',\t\t\t\t \n\t\t\t\thidden: false,\n\t\t\t\ttooltip: 'ontology',\n\t\t\t\ttdClass: 'good-td',\n\t\t\t\tthClass: 'good-th',\n\t\t\t\t},{\n\t\t\t\tlabel: 'formatedTimeStamp',\n\t\t\t\tfield: 'formatedTimeStamp',\n\t\t\t\ttype: 'date',\n\t\t\t\tdateInputFormat: 'yyyy-MM-dd\\'T\\'HH:mm:ss\\'.\\'SSS\\'Z\\'',\n\t\t\t\tdateOutputFormat: 'dd/MM/yyyy HH:mm:ss',\n\t\t\t\thidden: false,\n\t\t\t\ttooltip: 'formatedTimeStamp',\n\t\t\t\ttdClass: 'good-td',\n\t\t\t\tthClass: 'good-th',\n\t\t\t\t}\n\t\t\t],\n\t\t\trows: [\t\t\t\t\n\t\t\t]\n\t\t},\n\t\tgrouped: [],\n\t\tgroupField: 'user',\n\t\tsortField: 'type',\n\t\tisGroupedTable: false,\t\t\n\t\ttableData: []\n\t},\n\tmethods:{\n\t\tdrawVueComponent: function(newData,oldData){\n\t\t\tthis.table.rows = newData;\n\t\t},\n\t\tresizeEvent: function(){\n\t\t\t//Resize event\n\t\t},\n\t\tdestroyVueComponent: function(){\n\t\t\tvm.vueapp.$destroy();\n\t\t},\n\t\treceiveValue: function(data){\n\t\t\t//data received from datalink\n\t\t},\n\t\tsendValue: vm.sendValue,\n\t\tsendFilter: vm.sendFilter,\n\t\t// TABLE EVENTS METHODS\n\t\tselectionChanged(params) {\n   \t\t\t// params.selectedRows - all rows that are selected (this page)\n\t\t\tconsole.log(JSON.stringify(params.selectedRows))\n  \t\t},\n\t\ttoggleGroupBy: function(state) {\n\t\t\tif (this.isGroupedTable === false) {\n\t\t\t\tthis.isGroupedTable = true\n\t\t\t\tthis.tableData = this.table.rows\n\t\t\t\tthis.table.rows = this.groupby(this.table.rows,this.groupField,this.sortField)\n\t\t\t} else {\n\t\t\t\tthis.isGroupedTable = false\n\t\t\t\tthis.table.rows = this.tableData\n\t\t\t\tthis.table.columns.filter(x => x.field === this.groupField).length > 0 ? this.table.columns.filter(x => x.field === this.groupField)[0].hidden = false : ''\n\t\t\t}\t\t\t\t\t\t\n\t\t}, \n\t\tgroupby: function (array, groupField, sortField) {\n\t\t\t// group by field for data\n\t\t\tif (array.length === 0 ) { return false }\n\t\t\tvar groups = {}; // This object will end being keyed by groups, and elements will be arrays of the rows within the given array, which have been sorted by the sortField\n\t\t\t// Put all the rows into groups\n\t\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\t\tvar row = array[i]\n\t\t\t\tvar groupValue = row[groupField]\n\t\t\t\tgroups[groupValue] = groups[groupValue] || []\n\t\t\t\tgroups[groupValue].push(row)\n\t\t\t}\n\t\t\t// Sort each group\n\t\t\tfor (var groupValue in groups) {\n\t\t\t\tgroups[groupValue] = groups[groupValue].sort(function(a, b) {\n\t\t\t\treturn a[sortField] - b[sortField]\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst final = []\n\t\t\tfor (const key in groups) {\n\t\t\t\tfinal.push({\n\t\t\t\t\tmode: 'span', // span means this header will span all columns\n    \t\t\t\tlabel: key, // this is the label that'll be used for the header\n\t\t\t\t\tscore:  groups[key].reduce(function(prev, cur) { return prev + cur.score }, 0),\n    \t\t\t\thtml: false,\t\t\t\t\t\n\t\t\t\t\tchildren: groups[key]\n\t\t\t\t})\n\t\t\t}\n\n\t\t\t// Return the results\n\t\t\tthis.table.columns.filter(x => x.field === groupField).length > 0 ? this.table.columns.filter(x => x.field === groupField)[0].hidden = true : ''\n\t\t\treturn final\t\t\t\n\t\t},\n\t\tsumCount: function (rowObj) {\n    \t\tconsole.log(rowObj)\n    \t\tlet sum = 0\n    \t\tfor (let i = 0; i < rowObj.children.length; i++) {\n      \t\t\tsum += rowObj.children[i].count\n\t\t\t}\n    \t\treturn sum\n  \t\t},\t\t\n\t},\n\tcomputed: {\n\t\tgroupOptions () {\n\t\t\treturn this.isGroupedTable ? { enabled: this.isGroupedTable, collapsable: true } : {}\n\t\t} \n\t},\t\n\tmounted () {\t\t\n\t\tif (this.isGroupedTable) {\n\t\t\tthis.table.rows = this.groupby(this.table.rows,'name','age')\n\t\t} else {\n\t\t\tthis.table.rows = this.table.rows\n\t\t}\n\t}\t\n}\n\n//Init Vue app\nvm.vueapp = new Vue(vm.vueconfig);\n\n",
              "subtype": "vueJSODS",
              "datasource": {
                "name": "dataClassErrors",
                "refresh": 0,
                "id": "MASTER-GadgetDatasource-33",
                "type": "query"
              },
              "x": 0,
              "y": 16,
              "header": {
                "backgroundColor": "hsl(0, 0%, 100%)",
                "enable": false,
                "title": {
                  "iconColor": "hsl( 206, 54%, 5%)",
                  "icon": "",
                  "text": "livehtml_1668528860303",
                  "textColor": "hsl(206,54%,5%)"
                },
                "height": 40
              },
              "id": "livehtml_1668528860303",
              "customMenuOptions": [],
              "cols": 50
            },
            {
              "border": {
                "color": "hsl(0, 0%, 90%)",
                "width": 0,
                "radius": 5
              },
              "padding": 0,
              "backgroundColor": "white",
              "notshowDotsMenu": true,
              "hideBadges": true,
              "prettyTitle": "livehtml_1668528954846 (livehtml)",
              "rows": 4,
              "type": "livehtml",
              "$$hashKey": "object:319",
              "content": "<style>\n  .gadget-app { font-family: Poppins}\n   gridster-item { box-shadow: 0 0.75rem 1.5rem rgb(18 38 63 / 3%); }\n\n\n  .card {   margin-top: 12px; } \n  \n}\n.card-body {\n    flex: 1 1 auto;\n    padding: 1rem;   \n}\n.mb-3 {\n    margin-bottom: 1rem!important;\n}\n.align-items-center {\n    align-items: center!important;\n}\n.d-flex {\n    display: flex!important;\n}\n.avatar-xs {\n    height: 2rem;\n    width: 2rem;\n}\n.me-3 {\n    margin-right: 1rem!important;\n}\n.font-size-14 {\n    font-size: 14px!important;\n     font-family: 'Poppins'\n}\n.mb-0 {\n    margin-bottom: 0!important;\n}\n.bg-primary.bg-soft {\n    background-color: rgba(85,110,230,.25)!important;\n}\n.font-size-18 {\n    font-size: 18px!important;\n    font-family: 'Poppins'\n}\n.avatar-title {\n    align-items: center;\n    background-color: #556ee6;\n    color: #fff;\n    display: flex;\n    font-weight: 500;\n    height: 100%;\n    justify-content: center;\n    width: 100%;\n}\n.rounded-circle {\n    border-radius: 50%!important;\n}\n.text-primary {\n    color: rgba(85,110,230,1)!important;\n}\n.ods-icon-xs { font-size: 1rem}\n\n.text-muted { \n    color: #74788d!important;[0].value;\n}\n.mt-4 {\n    margin-top: 1.5rem!important;\n}\n.text-success {\n    color: rgba(52,195,143,1)!important;\n}\n\n.ods-kpi-number { font-size: 1.22rem; font-weight: 500; color: #333; margin-top: 0; margin-bottom: 0.5rem; font-weight: 500; line-height: 1.2;}\n\n.font-size-12 {\n    font-size: 12px!important;\n}\n.badge-soft-success {\n    color: #34c38f!important;\n    background-color: rgba(52,195,143,.18)!important;\n}\n.badge-soft-warning {\n    color: #f1b44c!important;\n    background-color: rgba(241,180,76,.18)!important;\n}\n\n.badge {\n    display: inline-block;\n    padding: 0.25em 0.4em;\n    font-size: 75%;\n    font-weight: 500;\n    line-height: 1;\n    color: #fff;\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: baseline;\n    border-radius: 0.25rem;\n}\n.ms-2 {\n    margin-left: 0.5rem!important;\n}\n\n.text-truncate {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    font-size: 0.8125rem;\n    margin-top: .2rem;\n}\n</style>\n\n<div class=\"gadget-app\">\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"d-flex align-items-center mb-3\">\n        <div class=\"avatar-xs me-3\">\n          <span class=\"avatar-title rounded-circle bg-soft bg-primary text-primary font-size-18\"><i class=\"ods-icon-calendar-ok ods-icon-xs\"></i></span>\n        </div>\n        <h5 class=\"font-size-14 mb-0\">Data Class Errors</h5>\n      </div>\n      <div class=\"text-muted mt-4\">\n        <h4 class=\"ods-kpi-number\"> {{kpis.ammount}} <i class=\"ods-icon-chevron-up-small ms-1 text-success\"></i></h4>\n       \n      </div>\n    </div>\n  </div>\n</div>",
              "nomargin": false,
              "contentcode": "//Write your Vue with ODS JSON controller code here\n\n//Focus here and F11 to full screen editor\n\n//This function will be call once to init components\n\nvm.vueconfig = {\n\tel: document.querySelector('#' + vm.id + ' vuetemplate .gadget-app'),\n\tdata:{\n\t\tds:[],\n\t\tkpis: \n\t\t\t{\n\t\t\t\ttitle: '',\n\t\t\t\tresume: '',\n\t\t\t\tammount: '0',\n\t\t\t\tunit: '%',\n\t\t\t\tpercentage: 12,\n\t\t\t\ttriangle: true,\n\t\t\t\thref: '',\n\t\t\t\taccentBlock: false,\n\t\t\t\tsize: 'large',\n\t\t\t\ticon: 'ods-icon-control'\n\t\t\t}\n\t},\n\tmethods:{\n\t\tdrawVueComponent: function(newData,oldData){\n\t\t\t\tthis.kpis.ammount = newData[0].value;\n\t\t},\n\t\tresizeEvent: function(){\n\t\t\t//Resize event\n\t\t},\n\t\tdestroyVueComponent: function(){\n\t\t\tvm.vueapp.$destroy();\n\t\t},\n\t\treceiveValue: function(data){\n\t\t\t//data received from datalink\n\t\t},\n\t\tsendValue: vm.sendValue,\n\t\tsendFilter: vm.sendFilter\n\t}\n}\n\n//Init Vue app\nvm.vueapp = new Vue(vm.vueconfig);\n",
              "subtype": "vueJSODS",
              "datasource": {
                "name": "DataClassError",
                "refresh": 0,
                "id": "MASTER-GadgetDatasource-34",
                "type": "query"
              },
              "x": 0,
              "y": 2,
              "header": {
                "backgroundColor": "hsl(0, 0%, 100%)",
                "enable": false,
                "title": {
                  "iconColor": "hsl( 206, 54%, 5%)",
                  "icon": "",
                  "text": "livehtml_1668528954846",
                  "textColor": "hsl(206,54%,5%)"
                },
                "height": 40
              },
              "id": "livehtml_1668528954846",
              "customMenuOptions": [],
              "cols": 8
            },
            {
              "border": {
                "color": "hsl(0, 0%, 90%)",
                "width": 0,
                "radius": 5
              },
              "padding": 0,
              "backgroundColor": "white",
              "notshowDotsMenu": true,
              "hideBadges": true,
              "prettyTitle": "livehtml_1668530232994 (livehtml)",
              "rows": 4,
              "type": "livehtml",
              "$$hashKey": "object:591",
              "content": "<style>\n  .gridster { background-color: #f5f5f5!important}  \n  .gadget-app { font-family: Poppins}\n   gridster-item { box-shadow: 0 0.75rem 1.5rem rgb(18 38 63 / 3%); }\nbody {font-size: 1.2rem!important}\n\n  .card {   margin-top: 12px; } \n  \n}\n.card-body {r\n}\n.mb-3 {\n    margin-bottom: 1rem!important;\n}\n.align-items-center {\n    align-items: center!important;\n}\n.d-flex {\n    display: flex!important;\n}\n.avatar-xs {\n    height: 2rem;\n    width: 2rem;\n}\n.me-3 {\n    margin-right: 1rem!important;\n}\n.font-size-14 {\n    font-size: 14px!important;\n     font-family: 'Poppins'\n}\n.mb-0 {\n    margin-bottom: 0!important;\n}\n.bg-primary.bg-soft {\n    background-color: rgba(85,110,230,.25)!important;\n}\n.font-size-18 {\n    font-size: 18px!important;\n    font-family: 'Poppins'\n}\n.avatar-title {\n    align-items: center;\n    background-color: #556ee6;\n    color: #fff;\n    display: flex;\n    font-weight: 500;\n    height: 100%;\n    justify-content: center;\n    width: 100%;\n}\n.rounded-circle {\n    border-radius: 50%!important;\n}\n.text-primary {\n    color: rgba(85,110,230,1)!important;\n}\n.ods-icon-xs { font-size: 1rem}\n\n.text-muted { \n    color: #74788d!important;\n}\n.mt-4 {\n    margin-top: 1.5rem!important;\n}\n.text-success {\n    color: rgba(52,195,143,1)!important;\n}\n\n.ods-kpi-number { font-size: 1.5rem; font-weight: 500; color: #333; margin-top: 0; margin-bottom: 0.5rem; font-weight: 500; line-height: 1.2;}\n\n.font-size-12 {\n    font-size: 12px!important;\n}\n.badge-soft-success {\n    color: #34c38f!important;\n    background-color: rgba(52,195,143,.18)!important;\n}\n.badge {\n    display: inline-block;\n    padding: 0.25em 0.4em;\n    font-size: 75%;\n    font-weight: 500;\n    line-height: 1;\n    color: #fff;\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: baseline;\n    border-radius: 0.25rem;\n}\n.ms-2 {\n    margin-left: 0.5rem!important;\n}\n\n.text-truncate {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    font-size: 0.8125rem;\n    margin-top: .2rem;\n}\n</style>\n\n<div class=\"gadget-app\">\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"d-flex align-items-center mb-3\">\n        <div class=\"avatar-xs me-3\">\n          <span class=\"avatar-title rounded-circle bg-soft bg-primary text-primary font-size-18\"><i class=\"ods-icon-calendar-schedule ods-icon-xs\"></i></span>\n        </div>\n        <h5 class=\"font-size-14 mb-0\">Data Class Warnings</h5>\n      </div>\n      <div class=\"text-muted mt-4\">\n        <h4 class=\"ods-kpi-number\">  {{kpis.ammount}}  <i class=\"ods-icon-chevron-up-small ms-1 text-success\"></i></h4>\n       \n      </div>\n    </div>\n  </div>\n</div>",
              "nomargin": false,
              "contentcode": "//Write your Vue with ODS JSON controller code here\n\n//Focus here and F11 to full screen editor\n\n//This function will be call once to init components\n\nvm.vueconfig = {\n\tel: document.querySelector('#' + vm.id + ' vuetemplate .gadget-app'),\n\tdata:{\n\t\tds:[],\n\t\tkpis: \n\t\t\t{\n\t\t\t\ttitle: '',\n\t\t\t\tresume: '',\n\t\t\t\tammount: '0',\n\t\t\t\tunit: '%',\n\t\t\t\tpercentage: 12,\n\t\t\t\ttriangle: true,\n\t\t\t\thref: '',\n\t\t\t\taccentBlock: false,\n\t\t\t\tsize: 'large',\n\t\t\t\ticon: 'ods-icon-control'\n\t\t\t}\n\t},\n\tmethods:{\n\t\tdrawVueComponent: function(newData,oldData){\n\t\t\tthis.kpis.ammount = newData[0].value;\n\t\t},\n\t\tresizeEvent: function(){\n\t\t\t//Resize event\n\t\t},\n\t\tdestroyVueComponent: function(){\n\t\t\tvm.vueapp.$destroy();\n\t\t},\n\t\treceiveValue: function(data){\n\t\t\t//data received from datalink\n\t\t},\n\t\tsendValue: vm.sendValue,\n\t\tsendFilter: vm.sendFilter\n\t}\n}\n\n//Init Vue app\nvm.vueapp = new Vue(vm.vueconfig);\n",
              "subtype": "vueJSODS",
              "datasource": {
                "name": "DataClassWarning",
                "refresh": 0,
                "id": "MASTER-GadgetDatasource-35",
                "type": "query"
              },
              "x": 8,
              "y": 2,
              "header": {
                "backgroundColor": "hsl(0, 0%, 100%)",
                "enable": false,
                "title": {
                  "iconColor": "hsl( 206, 54%, 5%)",
                  "icon": "",
                  "text": "livehtml_1668530232994",
                  "textColor": "hsl(206,54%,5%)"
                },
                "height": 40
              },
              "id": "livehtml_1668530232994",
              "customMenuOptions": [],
              "cols": 8
            },
            {
              "border": {
                "color": "hsl(0, 0%, 90%)",
                "width": 0,
                "radius": 5
              },
              "padding": 0,
              "backgroundColor": "white",
              "notshowDotsMenu": true,
              "hideBadges": true,
              "prettyTitle": "livehtml_1668598239629 (livehtml)",
              "rows": 10,
              "type": "livehtml",
              "$$hashKey": "object:544",
              "content": "<!--Focus here and F11 or F10 to full screen editor-->\n<!-- Write your CSS <style></style> here -->\n<style>\n    .gadget-app { height: 100%;  }\n    .ods-dataviz__header { flex-direction: column; }\n}\n</style>\n<div class=\"gadget-app\">\n    <div style=\"height: 100%; padding: 0rem;\" data-name=\"ODS_PIE_CHART\">        \n        <div v-if=\"data.length\" style=\"height: 100%\">\n            <ods-dataviz-pie\n            @click=\"evento\"            \n            type=\"thin\"            \n            :data=\"data\"\n            :title=\"title\"\n            :title-tag=\"titleTag\"\n            :render-type=\"renderType\"\n            :animation=\"animation\"\n            :width=\"width\"\n            :height=\"height || '100%'\"\n            :colors=\"colors\"\n            :selected-mode=\"selectedMode\"\n            :top-space=\"topSpace\"\n            :right-space=\"rightSpace\"\n            :bottom-space=\"bottomSpace\"\n            :left-space=\"leftSpace\"\n            :show-tooltip=\"showTooltip\"\n            :tooltip-suffix-value=\"tooltipSuffixValue\"\n            :tooltip-position=\"tooltipPosition !== undefined && tooltipPosition.length > 0 ? tooltipPosition : null\"\n            :show-labels=\"showLabels\"\n            :legend=\"showLegend\"\n            :legend-position=\"legendPosition\"\n            :legend-align=\"legendAlign\"\n            :legend-top=\"legendTop\"\n            :legend-orient=\"legendOrient\"\n            :options=\"apiOptions\"\n            :rtl=\"rtl\"\n            :summary=\"summary\"\n            :summary-text=\"summaryText\" />\n        </div>\n        <div v-else style=\"height: 100%; display: flex; justify-content: center; align-items: center\">\n            <div style=\"display: flex; height: 50%; flex-direction: column; align-items: center;\">\n            <p style=\"margin-bottom: 1rem;\">\n                Sin datos\n            </p>\n            <ods-icon\n                name=\"error-alert\"\n                size=\"30\"\n                color=\"#060E14\" />\n            </div>\n        </div>\n    </div>\n</div>",
              "nomargin": false,
              "contentcode": "//Write your Vue with ODS JSON controller code here\n\n//Focus here and F11 or F10 to full screen editor\n\n//This function will be call once to init components\n\nvm.vueconfig = {\n\tel: document.getElementById(vm.id).querySelector('vuetemplate  .gadget-app'),\n\tdata:{\n\t\tds:[],\n\t\ttitle: 'Total Errors By Type',\n\t\ttitleTag: 'h2',\n\t\ttooltip: '',\n\t\tnameField: 'type',\n\t\tvalueField: 'count',\n\t\trenderType: 'svg',\n\t\tselectedMode: null,\n\t\troseTypeMode: false,\n\t\theight: '80%',\n\t\twidth: '100%',\n\t\trtl: false,\n\t\tanimation: true,\n\t\tshowTooltip: true,\n\t\ttooltipSuffixValue: '',\n\t\ttooltipPosition: '',\n\t\tshowLabels: true,\n\t\tsummary: true,\n\t\tsummaryText: 'TOTAL',\n\t\tcolors: [\n\t\t\t'#3982D0',\n\t\t\t'#D96D73',\n\t\t\t'#5A59A6',\n\t\t\t'#6DB6A1',\n\t\t\t'#F78B41',\n\t\t\t'#61B3CB',\n\t\t\t'#418A8B',\n\t\t\t'#A2578D',\n\t\t\t'#E5B75D',\n\t\t\t'#234E63'\n\t\t],\n\t\tshowLegend: true,\n\t\tlegendPosition: 'top',\n\t\tlegendAlign: 'center',\n\t\tlegendTop: 'top',\n\t\tlegendOrient: 'horizontal',\n\t\ttopSpace: 25,\n\t\trightSpace: 10,\n\t\tbottomSpace: 25,\n\t\tleftSpace: 10,\n\t\tdata: [],\n\t\taccentBlock: false\n\t},computed: {\n\t\t// echarts additional or computed options \n\t\tapiOptions () {\n\t\t\treturn {\n\t\t\t\tgrid: { containLabel: true },\n\t\t\t\tlegend: {\n\t\t\t\t\ttype: 'scroll',\n\t\t\t\t\torient: 'horizontal',\n\t\t\t\t\tright: 10,\n\t\t\t\t\ttop: 5\t\t\t\t\t\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\t\n\t},\n\tmethods:{\n\t\tdrawVueComponent: function(newData,oldData){\n\t\t\tvar dat = [];\n\t\t\tif(typeof newData.type!=='undefined' && newData.type!=null && newData.type.buckets.length>0){\t\t\t\t\n\t\t\t\tfor (var i = 0 ;i<newData.type.buckets.length;i++){\n\t\t\t\t\tvar type = newData.type.buckets[i].key;\n\t\t\t\t\tif(newData.type.buckets[i].key==null){\n\t\t\t\t\t\ttype=\"not defined\"\n\t\t\t\t\t}\n\t\t\t\t\tvar elem ={'value':newData.type.buckets[i].doc_count,'name':type};\n\t\t\t\t\tdat.push(elem);\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\tthis.data = dat;\t\t\n\t\t},\n\t\t \n\t\tresizeEvent: function(){\n\t\t\t//Resize event\n\t\t\tconsole.log('resized...')\n\t\t},\n\t\tdestroyVueComponent: function(){\n\t\t\tvm.vueapp.$destroy();\n\t\t},\n\t\tevento: function(params) {\n\t\t\tconsole.log(JSON.stringify(params))\n\t\t},\n\t\treceiveValue: function(data){\n\t\t\t//data received from datalink\n\t\t},\n\t\tsendValue: vm.sendValue,\n\t\tsendFilter: vm.sendFilter\n\t}\n}\n\n//Init Vue app\nvm.vueapp = new Vue(vm.vueconfig);\n",
              "subtype": "vueJSODS",
              "datasource": {
                "name": "DataClassGroupByTypes",
                "refresh": 0,
                "id": "MASTER-GadgetDatasource-36",
                "type": "query"
              },
              "x": 0,
              "y": 6,
              "header": {
                "backgroundColor": "hsl(0, 0%, 100%)",
                "enable": false,
                "title": {
                  "iconColor": "hsl( 206, 54%, 5%)",
                  "icon": "",
                  "text": "livehtml_1668598239629",
                  "textColor": "hsl(206,54%,5%)"
                },
                "height": 40
              },
              "id": "livehtml_1668598239629",
              "customMenuOptions": [],
              "cols": 16
            },
            {
              "border": {
                "color": "hsl(0, 0%, 90%)",
                "width": 0,
                "radius": 5
              },
              "padding": 0,
              "backgroundColor": "white",
              "notshowDotsMenu": true,
              "hideBadges": true,
              "filters": [],
              "prettyTitle": "livehtml_1668615128172 (livehtml)",
              "rows": 14,
              "type": "livehtml",
              "$$hashKey": "object:303",
              "content": "<!--Focus here and F11 or F10 to full screen editor-->\n<!-- Write your CSS <style></style> here -->\n<style>\n    .gadget-app { height: 100%; width:100%; }\n    .ods-tabs__item { font-size: .95rem !important; } \n</style>\n<div class=\"gadget-app\">\n    <div style=\"height: 100%; padding: 0 1rem;\" data-name=\"ODS_MIXED_CHART\">\n        <div class=\"ods-dataviz__header\"><h2 class=\"ods-dataviz__title\"> Total Messages By Module </h2></div>        \n        \n        <div  style=\"height: 90%;width:100%;\">  \n             <div id=\"barsworksorders001\" style=\"width:100%;height:100%;\"></div>\n        </div>\n        <div v-else style=\"height: 100%; display: flex; justify-content: center; align-items: center\">     \n            <div style=\"height: 100%;display: flex;justify-content: center;align-items: flex-start;\">\n                <div style=\"display: flex;height: auto;flex-direction: column;align-items: center;\">\n                    <div class=\"ods-dataviz__header\">\n                        <h2 class=\"ods-dataviz__title\"></h2>\n                    </div>\n                    <p style=\"margin-bottom: 1rem; margin-top: 55%\">{{ noData }}</p>\n                    <ods-icon name=\"error-alert\" size=\"30\" color=\"#060E14\" />\n                </div>\n            </div>\n        </div>\n    </div>\n</div>",
              "nomargin": false,
              "contentcode": "//Write your Vue with ODS JSON controller code here\n\n//Focus here and F11 or F10 to full screen editor\n\n//This function will be call once to init components\n\nvm.vueconfig = {\n\tel: document.getElementById(vm.id).querySelector('vuetemplate  .gadget-app'),\n\tdata:{ \n\t\tds:[],\t\t\n\t\tnoData: 'No Data Available',\n\t\t\n\t\theight: '360px',\n\t\twidth: '100%',\n\t\toption:{},\n\t\tchart:{},\n\t\tshowData:true,\n\n//switch\n\t\tvalue:0,\n\t\tdisabled: false,\n\t\tid: 'switch001',\n\t\tlabelText: '',\n\t\tactiveText: 'Only Closed',\n\t\tinactiveText: 'All Work Orders',\n\t\tactiveValue: '100',\n\t\tinactiveValue: '0',\n\t\tactiveColor: '',\n\t\tinactiveColor: '',\n\t\tname: '',\n\t\taccentBlock: false\n\n\n\t},\n\tmethods:{\n\t\tdrawVueComponent: function(newData,oldData){\n\t\t this.showData=true;\n\t\t\tif(typeof newData!=='undefined' && newData!=null && newData.module.buckets.length>0){\t\t\t\t\n\t\t\t this.option.dataset[0].source=[];\n\t\t\t\tfor (var i = 0 ;i<newData.module.buckets.length;i++){\n\t\t\t\t\tvar dat=[];\n\t\t\t\t\tdat.push(newData.module.buckets[i].key)\n\t\t\t\t\tdat.push(newData.module.buckets[i].doc_count)\n\t\t\t\t\tthis.option.dataset[0].source.push(dat);\t\t\t\t\n\t\t\t\t}\t\t\t\t\n\t\t\t}else{\n\t\t\t\tthis.showData = false;\n\t\t\t}\n\t\t\tthis.myChart.setOption(this.option);\n\t\t\t \n\t\t\tthis.myChart.resize();\n\t\t\n\t\t},\n\t\tresizeEvent: function(){\n\t\t\tthis.myChart.resize()\n\t\t},\n\t\tdestroyVueComponent: function(){\n\t\t\tvar that = this;\n\t\t\twindow.removeEventListener('resize',that.myChart.resize)\n\t\t\tvm.vueapp.$destroy();\n\t\t},\n\t\treceiveValue: function(data){\n\t\t\t//data received from datalink\n\t\t},\n\t\tsendValue: vm.sendValue,\n\t\tsendFilter: vm.sendFilter,\n\t\thandleChange:function(){\n\t\t\tif(this.value == 0){\n\t\t\t    this.sendFilter('STATUS',null,'IN');\n\t\t\t}else{\n\t\t\t\tthis.sendFilter('STATUS',\"('CLOSE','CERRADO')\",'IN');\n\t\t\t}\n\t\t}\n\t},\n\tmounted(){\n\t\t\tvar chartDom = document.getElementById('barsworksorders001');\n\t\t    this.myChart = echarts.init(chartDom, null, {  renderer: 'canvas',  useDirtyRect: false});\n\t\t\t \n\t\t\tthis.option = {\n\t\t\t\t  \n\t\t\t\ttoolbox: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\tdataZoom: {\n\t\t\t\t\t\tyAxisIndex: 'none'\n\t\t\t\t\t},\n\t\t\t\t\n\t\t\t\t\tsaveAsImage: {}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tlegend: {},\n\t\t\t\ttooltip: { trigger: 'item'},\n\t\t\t\tdataset:  [{\n\t\t\t\t \tdimensions: ['siteid','value'],\n\t\t\t\t\tsource: [\n\t\t\t\t\t\t\n\t\t\t\t\t]\n\t\t\t\t}],\n\t\t\t\txAxis: { type: 'category', axisLabel: { interval: 0, rotate: 30 } },\n\t\t\t\tyAxis: {},\n\t\t\t\tgrid: { containLabel: true,\n\t\t\t\t         top:50,left:5,bottom:35,right:5 },\n\t\t\t\t// Declare several bar series, each will be mapped\n\t\t\t\t// to a column of dataset.source by default.\n\t\t\t\tseries: {\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tencode: { x: 'siteid', y: 'value' },\n\t\t\t\t\tcolor: [\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t'#234E63',\n\t\t\t\t\t'#E5B75D',\n\t\t\t\t\t'#61B3CB',\n\t\t\t\t\t'#418A8B',\n\t\t\t\t\t'#A2578D',\n\t\t\t\t\t'#3982D0',\n\t\t\t\t\t'#D96D73',\n\t\t\t\t\t'#6DB6A1',\n\t\t\t\t\t'#5A59A6',\n\t\t\t\t'#F78B41',\n\t\t\t\t\t''\n\t\t\t\t\t],\n\t\t\t\t\t markLine: {\n\t\t\t\t\t\tdata: [{ type: 'average', name: 'Avg' }]\n\t\t\t\t\t},markPoint: {\n\t\t\t\t\tdata: [\n\t\t\t\t\t{ type: 'max', name: 'Max' },\n\t\t\t\t\t{ type: 'min', name: 'Min' }\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.option && this.myChart.setOption(this.option);\n\t\t\tthis.myChart.resize();\n\t\t\tthis.showData = true;\n\t\t\tvar that = this;\n\t\t\twindow.addEventListener('resize', that.myChart.resize);\n\t}\n\t,\n\tcomputed: {\t\n\t\t\n\t}\n}\n\n//Init Vue app\nvm.vueapp = new Vue(vm.vueconfig);\n",
              "subtype": "vueJSODS",
              "datasource": {
                "name": "DataClassGroupByModule",
                "refresh": 0,
                "id": "MASTER-GadgetDatasource-37",
                "type": "query"
              },
              "x": 16,
              "y": 2,
              "header": {
                "backgroundColor": "hsl(0, 0%, 100%)",
                "enable": false,
                "title": {
                  "iconColor": "hsl( 206, 54%, 5%)",
                  "icon": "",
                  "text": "livehtml_1668615128172",
                  "textColor": "hsl(206,54%,5%)"
                },
                "height": 40
              },
              "id": "livehtml_1668615128171",
              "customMenuOptions": [],
              "cols": 34
            },
            {
              "border": {
                "color": "hsl(0, 0%, 90%)",
                "width": 0,
                "radius": 5
              },
              "padding": 0,
              "backgroundColor": "hsla(0, 0%, 100%, 0)",
              "notshowDotsMenu": true,
              "hideBadges": true,
              "rows": 2,
              "type": "livehtml",
              "$$hashKey": "object:882",
              "content": "<!-- Write your HTML <div></div> and CSS <style></style> here --><!--Focus here and F11 to full screen editor--><style>    .page-title-box {\n        padding-bottom: 24px;\n        margin-top:8px\n    }\n    .align-items-center {\n        align-items: center!important;\n    }\n    .justify-content-between {\n        justify-content: space-between!important;\n    }\n    .d-flex {\n        display: flex!important;\n    }\n    .page-title-right ol.breadcrumb {\n        margin-bottom: 0;\n    }\n    .page-title-box .breadcrumb {\n        background-color: transparent;\n        padding: 0;\n    }\n    .breadcrumb {\n        display: flex;\n        flex-wrap: wrap;\n        padding: 0.75rem 1rem;\n        margin-bottom: 1rem;\n        list-style: none;\n    }\n    .breadcrumb-item>a {\n        color: #495057;\n        font-size: 0.8125rem;\n    }   \n    .breadcrumb-item.active {\n        color: #74788d;\n        font-size: 0.8125rem;\n    }\n    .font-size-16{\n        text-transform: uppercase;\n        font-weight: 600;\n        font-size: 16px!important;\n        font-family: 'Poppins';\n    }\n    .no-shadow { box-shadow: none!important}\n</style><div class=\"page-title-box d-flex align-items-center justify-content-between gadget-header\">    <h4 class=\"mb-0 font-size-16\">Work orders </h4>    <div class=\"page-title-right\">        <nav aria-label=\"breadcrumb\" class=\"m-0\">            <ol class=\"breadcrumb\">                <li class=\"breadcrumb-item\">                    <a class=\"\" href=\"/\" target=\"_self\" aria-current=\"location\"> </a>                </li>            </ol>        </nav>    </div></div>",
              "nomargin": false,
              "contentcode": "//Write your Vue with ODS JSON controller code here\n//Focus here and F11 to full screen editor\n//This function will be call once to init components\nvm.vueconfig = {\n    el: document.querySelector('#' + vm.id + ' vuetemplate .gadget-header'),\n    data:{\n        ds:[]\n    },\n    methods:{\n        drawVueComponent: function(newData,oldData){\n            //This will be call on new data\n        },\n        resizeEvent: function(){\n            //Resize event\n        },\n        destroyVueComponent: function(){\n            vm.vueapp.$destroy();\n        },\n        receiveValue: function(data){\n            //data received from datalink\n        },\n        sendValue: vm.sendValue,\n        sendFilter: vm.sendFilter,\n        gridsterClass (cssClass) {          \n            this.$el.parentElement.parentElement.parentElement.parentElement.className += ' ' + cssClass\n        }\n    },\n    mounted () {    \n        this.gridsterClass('no-shadow')\n    }\n}\n//Init Vue app\nvm.vueapp = new Vue(vm.vueconfig);",
              "subtype": "vueJSODS",
              "x": 0,
              "y": 0,
              "header": {
                "backgroundColor": "hsl(0, 0%, 100%)",
                "enable": false,
                "title": {
                  "iconColor": "hsl( 206, 54%, 5%)",
                  "icon": "",
                  "text": "livehtml_1668691025846",
                  "textColor": "hsl(206,54%,5%)"
                },
                "height": 40
              },
              "id": "livehtml_1668691025845",
              "customMenuOptions": [],
              "cols": 50
            },
            {
              "border": {
                "color": "hsl(0, 0%, 90%)",
                "width": 0,
                "radius": 5
              },
              "padding": 0,
              "backgroundColor": "white",
              "notshowDotsMenu": true,
              "hideBadges": true,
              "rows": 2,
              "type": "livehtml",
              "$$hashKey": "object:616",
              "content": "<!-- Write your HTML <div></div> and CSS <style></style> here -->\n<!--Focus here and F11 to full screen editor-->\n<style>\n    .gadget-footer{ \n        font-size: 0.8125rem;\n        font-family: 'Poppins';\n        padding: 12px;\n    }\n</style>\n<div class=\"gadget-footer\">\n    2021 - 2022 © Onesait Platform Dashboards\n</div>",
              "nomargin": false,
              "contentcode": "vm.vueconfig = {\n    el: document.querySelector('#' + vm.id + ' vuetemplate .gadget-footer'),\n    data:{\n        ds:[]\n    },\n    methods:{\n        drawVueComponent: function(newData,oldData){\n            //This will be call on new data\n        },\n        resizeEvent: function(){\n            //Resize event\n        },\n        destroyVueComponent: function(){\n            vm.vueapp.$destroy();\n        },\n        receiveValue: function(data){\n            //data received from datalink\n        },\n        sendValue: vm.sendValue,\n        sendFilter: vm.sendFilter,\n        gridsterClass (cssClass) {          \n            this.$el.parentElement.parentElement.parentElement.parentElement.className += ' ' + cssClass\n        }\n    },\n    mounted () {    \n        this.gridsterClass('no-shadow')\n    }\n}\n\n//Init Vue app\nvm.vueapp = new Vue(vm.vueconfig);",
              "subtype": "vueJSODS",
              "x": 0,
              "y": 27,
              "header": {
                "backgroundColor": "hsl(0, 0%, 100%)",
                "enable": false,
                "title": {
                  "iconColor": "hsl( 206, 54%, 5%)",
                  "icon": "",
                  "text": "livehtml_1668695284921",
                  "textColor": "hsl(206,54%,5%)"
                },
                "height": 40
              },
              "id": "livehtml_1668695284921",
              "customMenuOptions": [],
              "cols": 50
            }
          ],
          "title": "baseLayer",
          "$$hashKey": "object:23"
        }
      ],
      "title": "Main",
      "$$hashKey": "object:4"
    }
  ],
  "interactionHash": {
    "livehtml_1668615128172": [
      {
        "targetList": [
          {
            "gadgetId": "livehtml_1668615128171",
            "overwriteField": "STATUS"
          }
        ],
        "emiterField": "STATUS"
      }
    ],
    "livehtml_1668528860303": [],
    "livehtml_1668528954846": [],
    "livehtml_1668530232994": [],
    "livehtml_1668598239629": [],
    "livehtml_1668615128171": [],
    "livehtml_1668691025845": [],
    "livehtml_1668695284921": []
  },
  "gridOptions": {
    "displayGrid": "onDrag&Resize",
    "maxItemRows": 5000,
    "outerMargin": true,
    "disableWindowResize": false,
    "minCols": 50,
    "defaultItemCols": 1,
    "disableLiveResize": true,
    "maxItemArea": 25000,
    "minItemRows": 1,
    "emptyCellDragMaxCols": 5000,
    "enableEmptyCellDrag": false,
    "maxRows": 200,
    "enableEmptyCellAlign": true,
    "draggable": {
      "delayStart": 100,
      "ignoreContent": true,
      "dragHandleClass": "drag-handler",
      "enabled": true
    },
    "gridType": "scrollVertical",
    "minItemArea": 1,
    "compactType": "none",
    "api": {},
    "pushDirections": {
      "east": true,
      "south": true,
      "north": true,
      "west": true
    },
    "disableLiveMove": true,
    "disablePushOnResize": true,
    "maxItemCols": 5000,
    "margin": 20,
    "minRows": 200,
    "resizable": {
      "delayStart": 0,
      "enabled": true
    },
    "swap": true,
    "defaultItemRows": 1,
    "enableEmptyCellContextMenu": false,
    "enableEmptyCellDrop": true,
    "scrollToNewItems": false,
    "dragGadgetType": "livehtml",
    "fixedRowHeight": 70,
    "minItemCols": 1,
    "emptyCellDragMaxRows": 5000,
    "disablePushOnDrag": true,
    "pushResizeItems": false,
    "mobileBreakpoint": 640,
    "disableWarnings": false,
    "fixedColWidth": 70,
    "enableEmptyCellClick": false,
    "maxCols": 50,
    "pushItems": false
  },
  "editButtonsIframe": {
    "urlParameterButton": true,
    "trashButton": false,
    "editGadgetMenu": true,
    "closeButton": false,
    "configButton": true,
    "dataLinkButton": true,
    "addElementButton": true,
    "moveToolBarButton": true,
    "active": true,
    "filterGadgetMenu": true
  },
  "header": {
    "backgroundColor": "hsla(0, 0%, 100%, 0)",
    "enable": false,
    "pageColor": "hsl(205, 35%, 48%)",
    "iconColor": "hsl(206, 4%, 38%)",
    "logo": {
      "height": 48
    },
    "title": "DASHBOARD ODS BASE DESIGN: ESTILO PARA DASHBOARDS",
    "textColor": "hsl(206, 5%, 43%)",
    "height": 52
  },
  "parameterHash": {},
  "updatedAt": 1668700044522
}
