{
	"accumulo":[
	  {
	    "name": "accumulo.instance",
	    "description": "Name of the Accumulo instance.",
	    "defaultValue": "",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "accumulo.zookeepers",
	    "description": "ZooKeeper connect string.",
	    "defaultValue": "",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "accumulo.username",
	    "description": "Accumulo user for Presto.",
	    "defaultValue": "",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "accumulo.password",
	    "description": "Accumulo password for user.",
	    "defaultValue": "",
	    "required": true,
	    "encrypt": true
	  },
	  {
	    "name": "accumulo.zookeeper.metadata.root",
	    "description": "Root znode for storing metadata. Only relevant if using default Metadata Manager.",
	    "defaultValue": "/presto-accumulo",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "accumulo.cardinality.cache.size",
	    "description": "Sets the size of the index cardinality cache.",
	    "defaultValue": "100000",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "accumulo.cardinality.cache.expire.duration",
	    "description": "Sets the expiration duration of the cardinality cache.",
	    "defaultValue": "5m",
	    "required": false,
	    "encrypt": false
	  }
	],
	"bigquery": [
	  {
	    "name": "bigquery.project-id",
	    "description": "Google Cloud project ID.",
	    "defaultValue": "",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "bigquery.parent-project",
	    "description": "Google Cloud parent project ID.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "bigquery.parallelism",
	    "description": "The number of partitions to split the data.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "bigquery.views-enabled",
	    "description": "Enable BigQuery connector to read views.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "bigquery.view-materialization-project ",
	    "description": "The project where the materialized view is going to be created.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "bigquery.view-materialization-dataset",
	    "description": "The dataset where the materialized view is going to be created.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "bigquery.max-read-rows-retries",
	    "description": "The number of retries in case of retryable server issues.",
	    "defaultValue": "3",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "bigquery.credentials-key",
	    "description": "Credentials key (base64 encoded).",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  },
	  {
	    "name": "bigquery.credentials-file",
	    "description": "JSON credentials file path.",
	    "defaultValue": "",
	    "required": true,
	    "encrypt": false
	  }
	],
	"blackhole": [],
	"cassandra": [
	  {
	    "name": "cassandra.contact-points",
	    "description": "Comma-separated list of hosts in a Cassandra cluster. The Cassandra driver will use these contact points to discover cluster topology. At least one Cassandra host is required.",
	    "defaultValue": "hostname",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.native-protocol-port",
	    "description": "The Cassandra server port running the native client protocol (defaults to 9042).",
	    "defaultValue": "9042",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.consistency-level",
	    "description": "Consistency levels in Cassandra refer to the level of consistency to be used for both read and write operations. More information about consistency levels can be found in the Cassandra consistency documentation. This property defaults to a consistency level of ONE. Possible values include ALL, EACH_QUORUM, QUORUM, LOCAL_QUORUM, ONE, TWO, THREE, LOCAL_ONE, ANY, SERIAL, LOCAL_SERIAL.",
	    "defaultValue": "ONE",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.allow-drop-table",
	    "description": "Set to true to allow dropping Cassandra tables from Presto via DROP TABLE (defaults to false).",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.username",
	    "description": "Username used for authentication to the Cassandra cluster. This is a global setting used for all connections, regardless of the user who is connected to Presto.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.password",
	    "description": "Password used for authentication to the Cassandra cluster. This is a global setting used for all connections, regardless of the user who is connected to Presto.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  },
	  {
	    "name": "cassandra.protocol-version",
	    "description": "It is possible to override the protocol version for older Cassandra clusters. This property defaults to V3. Possible values include V2, V3 and V4.",
	    "defaultValue": "v3",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.fetch-size",
	    "description": "Number of rows fetched at a time in a Cassandra query.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.partition-size-for-batch-select",
	    "description": "Number of partitions batched together into a single select for a single partition key column table.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.split-size",
	    "description": "Number of keys per split when querying Cassandra.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.splits-per-node",
	    "description": "Number of splits per node. By default, the values from the system.size_estimates table are used. Only override when connecting to Cassandra versions < 2.1.5, which lacks the system.size_estimates table.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.client.read-timeout",
	    "description": "Maximum time the Cassandra driver will wait for an answer to a query from one Cassandra node. Note that the underlying Cassandra driver may retry a query against more than one node in the event of a read timeout. Increasing this may help with queries that use an index.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.client.connect-timeout",
	    "description": "Maximum time the Cassandra driver will wait to establish a connection to a Cassandra node. Increasing this may help with heavily loaded Cassandra clusters.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.client.so-linger",
	    "description": "Number of seconds to linger on close if unsent data is queued. If set to zero, the socket will be closed immediately. When this option is non-zero, a socket will linger that many seconds for an acknowledgement that all data was written to a peer. This option can be used to avoid consuming sockets on a Cassandra server by immediately closing connections when they are no longer needed.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.retry-policy",
	    "description": "Policy used to retry failed requests to Cassandra. This property defaults to DEFAULT. Using BACKOFF may help when queries fail with “not enough replicas”. The other possible values are DOWNGRADING_CONSISTENCY and FALLTHROUGH.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.load-policy.use-dc-aware",
	    "description": "Set to true to use DCAwareRoundRobinPolicy (defaults to false).",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.load-policy.dc-aware.local-dc",
	    "description": "The name of the local datacenter for DCAwareRoundRobinPolicy.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.load-policy.dc-aware.used-hosts-per-remote-dc",
	    "description": "Uses the provided number of host per remote datacenter as failover for the local hosts for DCAwareRoundRobinPolicy.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.load-policy.dc-aware.allow-remote-dc-for-local",
	    "description": "Set to true to allow to use hosts of remote datacenter for local consistency level.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.load-policy.use-token-aware",
	    "description": "Set to true to use TokenAwarePolicy (defaults to false).",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.load-policy.shuffle-replicas",
	    "description": "Set to true to use TokenAwarePolicy with shuffling of replicas (defaults to false).",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.load-policy.use-white-list",
	    "description": "Set to true to use WhiteListPolicy (defaults to false).",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.load-policy.white-list.addresses",
	    "description": "Comma-separated list of hosts for WhiteListPolicy.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.no-host-available-retry-timeout",
	    "description": "Retry timeout for NoHostAvailableException (defaults to 1m).",
	    "defaultValue": "1m",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.speculative-execution.limit",
	    "description": "The number of speculative executions (defaults to 1).",
	    "defaultValue": "1",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.speculative-execution.delay",
	    "description": "The delay between each speculative execution (defaults to 500ms).",
	    "defaultValue": "500ms",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.tls.enabled",
	    "description": "Whether TLS security is enabled (defaults to false).",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.tls.keystore-path",
	    "description": "Path to the PEM or JKS key store.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.tls.truststore-path",
	    "description": "Path to the PEM or JKS trust store.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "cassandra.tls.keystore-password",
	    "description": "Password for the key store.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  },
	  {
	    "name": "cassandra.tls.truststore-password",
	    "description": "Password for the trust store.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  }
	],
	"clickhouse": [
	  {
	    "name": "clickhouse.connection-url",
	    "description": "Defines the connection information and parameters to pass to the JDBC driver.",
	    "defaultValue": "jdbc:clickhouse://hostname:8123/",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "clickhouse.connection-user",
	    "description": "Username for the connection.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "clickhouse.connection-password",
	    "description": "Password for the connection.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  },
	  {
	    "name": "clickhouse.map-string-as-varchar",
	    "description": "When creating a table, support the clickhouse data type String.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "clickhouse.allow-drop-table",
	    "description": "Allow delete table operation.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  }
	],
	"delta": [
	  {
	    "name": "hive.metastore.uri",
	    "description": "The URI(s) of the Hive metastore to connect to using the Thrift protocol. If multiple URIs are provided, the first URI is used by default and the rest of the URIs are fallback metastores. Example: thrift://192.0.2.3:9083 or thrift://192.0.2.3:9083,thrift://192.0.2.4:9083.",
	    "defaultValue": "hostname:port",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "delta.parquet-dereference-pushdown-enabled",
	    "description": "The URI(s) of the Hive metastore where Delta Lake tables are registered. The connector relies on the Hive metastore to find the location of Delta Lake tables. From the Delta Log at given location, schema and data file list of the table is found.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "delta.parquet-dereference-pushdown-enabled",
	    "description": "Enable pushing nested column dereferences into table scan so that only the required fields selected in a struct data type column are selected. In order for this option to work, also set experimental.pushdown-dereference-enabled to true.",
	    "defaultValue": "true",
	    "required": false,
	    "encrypt": false
	  }
	],
	"druid": [
	  {
	    "name": "druid.coordinator-url",
	    "description": "Druid coordinator url.",
	    "defaultValue": "hostname:port",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "druid.broker-url",
	    "description": "Druid broker url.",
	    "defaultValue": "hostname:port",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "druid.schema-name",
	    "description": "Druid schema name.",
	    "defaultValue": "druid",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "druid.compute-pushdown-enabled",
	    "description": "Whether to pushdown all query processing to Druid.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "druid.case-insensitive-name-matching",
	    "description": "Match dataset and table names case-insensitively.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "druid.case-insensitive-name-matching.cache-ttl",
	    "description": "Duration for which remote dataset and table names will be cached. Set to 0ms to disable the cache.",
	    "defaultValue": "1m",
	    "required": false,
	    "encrypt": false
	  }
	],
	"elasticsearch": [
	  {
	    "name": "elasticsearch.host",
	    "description": "Host name of the Elasticsearch server.",
	    "defaultValue": "hostname",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "elasticsearch.port",
	    "description": "Port of the Elasticsearch server.",
	    "defaultValue": "9200",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "elasticsearch.default-schema-name",
	    "description": "Default schema name for tables.",
	    "defaultValue": "default",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "elasticsearch.scroll-size",
	    "description": "Maximum number of hits to be returned with each Elasticsearch scroll request.",
	    "defaultValue": "1000",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "elasticsearch.scroll-timeout",
	    "description": "Amount of time Elasticsearch will keep the search context alive for scroll requests.",
	    "defaultValue": "1m",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "elasticsearch.max-hits",
	    "description": "Maximum number of hits a single Elasticsearch request can fetch.",
	    "defaultValue": "1000000",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "elasticsearch.request-timeout",
	    "description": "Timeout for Elasticsearch requests.",
	    "defaultValue": "10s",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "elasticsearch.connect-timeout",
	    "description": "Timeout for connections to Elasticsearch hosts.",
	    "defaultValue": "1s",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "elasticsearch.max-retry-time",
	    "description": "Maximum duration across all retry attempts for a single request.",
	    "defaultValue": "20s",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "elasticsearch.node-refresh-interval",
	    "description": "How often to refresh the list of available Elasticsearch nodes.",
	    "defaultValue": "1m",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "elasticsearch.max-http-connections",
	    "description": "Maximum number of persistent HTTP connections to Elasticsearch.",
	    "defaultValue": "25",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "elasticsearch.http-thread-count",
	    "description": "Number of threads handling HTTP connections to Elasticsearch.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "elasticsearch.ignore-publish-address",
	    "description": "Whether to ignore the published address and use the configured address.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "elasticsearch.tls.enabled",
	    "description": "Whether TLS security is enabled.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "elasticsearch.tls.verify-hostnames",
	    "description": "Whether to verify Elasticsearch server hostnames.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "elasticsearch.tls.keystore-path",
	    "description": "Path to the PEM or JKS key store. This file must be readable by the operating system user running Presto.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "elasticsearch.tls.truststore-path",
	    "description": "Path to the PEM or JKS trust store. This file must be readable by the operating system user running Presto.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "elasticsearch.tls.keystore-password",
	    "description": "Password for the key store specified by elasticsearch.tls.keystore-path.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  },
	  {
	    "name": "elasticsearch.tls.truststore-password",
	    "description": "Password for the trust store specified by elasticsearch.tls.keystore-path.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  },
	  {
	    "name": "elasticsearch.aws.region",
	    "description": "AWS region or the Elasticsearch endpoint.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "elasticsearch.aws.access-key",
	    "description": "AWS access key to use to connect to the Elasticsearch domain.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  },
	  {
	    "name": "elasticsearch.aws.secret-key",
	    "description": "AWS secret key to use to connect to the Elasticsearch domain.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  },
	  {
	    "name": "elasticsearch.aws.use-instance-credentials",
	    "description": "Use the EC2 metadata service to retrieve API credentials.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  }
	  
	],
	"hive-hadoop2": [
	  {
	    "name": "hive.metastore.uri",
	    "description": "The URI(s) of the Hive metastore to connect to using the Thrift protocol. If multiple URIs are provided, the first URI is used by default and the rest of the URIs are fallback metastores. Example: thrift://192.0.2.3:9083 or thrift://192.0.2.3:9083,thrift://192.0.2.4:9083.",
	    "defaultValue": "thrift://hostname:9083",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "hive.metastore.username",
	    "description": "The username Presto will use to access the Hive metastore.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.config.resources",
	    "description": "An optional comma-separated list of HDFS configuration files. These files must exist on the machines running Presto. Only specify this if absolutely necessary to access HDFS. Example: /etc/hdfs-site.xml.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.config.resources",
	    "description": "An optional comma-separated list of HDFS configuration files. These files must exist on the machines running Presto. Only specify this if absolutely necessary to access HDFS. Example: /etc/hdfs-site.xml.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.storage-format",
	    "description": "The default file format used when creating new tables.",
	    "defaultValue": "ORC",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.compression-codec",
	    "description": "The compression codec to use when writing files.",
	    "defaultValue": "GZIP",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.force-local-scheduling",
	    "description": "Force splits to be scheduled on the same node as the Hadoop DataNode process serving the split data. This is useful for installations where Presto is collocated with every DataNode.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.order-based-execution-enabled",
	    "description": "Enable order-based execution. When it’s enabled, hive files become non-splittable and the table ordering properties would be exposed to plan optimizer.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.respect-table-format",
	    "description": "Should new partitions be written using the existing table format or the default Presto format?",
	    "defaultValue": "true",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.immutable-partitions",
	    "description": "Can new data be inserted into existing partitions?",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.create-empty-bucket-files",
	    "description": "Should empty files be created for buckets that have no data?",
	    "defaultValue": "true",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.max-partitions-per-writers",
	    "description": "Maximum number of partitions per writer.",
	    "defaultValue": "100",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.max-partitions-per-scan",
	    "description": "Maximum number of partitions for a single table scan.",
	    "defaultValue": "100000",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.metastore.authentication.type",
	    "description": "Hive metastore authentication type. Possible values are NONE or KERBEROS.",
	    "defaultValue": "NONE",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.metastore.service.principal",
	    "description": "The Kerberos principal of the Hive metastore service.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.metastore.client.principal",
	    "description": "The Kerberos principal that Presto will use when connecting to the Hive metastore service.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.metastore.client.keytab",
	    "description": "Hive metastore client keytab location.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.hdfs.authentication.type",
	    "description": "HDFS authentication type. Possible values are NONE or KERBEROS.",
	    "defaultValue": "none",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.hdfs.impersonation.enabled",
	    "description": "Enable HDFS end user impersonation.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.hdfs.presto.principal",
	    "description": "The Kerberos principal that Presto will use when connecting to HDFS.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.hdfs.presto.keytab",
	    "description": "HDFS client keytab location.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.security",
	    "description": "See Hive Security Configuration.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "security.config-file",
	    "description": "Path of config file to use when hive.security=file. See File Based Authorization for details.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.non-managed-table-writes-enabled",
	    "description": "Enable writes to non-managed (external) Hive tables.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.non-managed-table-creates-enabled",
	    "description": "Enable creating non-managed (external) Hive tables.",
	    "defaultValue": "true",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.collect-column-statistics-on-write",
	    "description": "Enables automatic column level statistics collection on write. See Table Statistics for details.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.s3select-pushdown.enabled",
	    "description": "Enable query pushdown to AWS S3 Select service.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.s3select-pushdown.max-connections",
	    "description": "Maximum number of simultaneously open connections to S3 for S3SelectPushdown.",
	    "defaultValue": "500",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.metastore.load-balancing-enabled",
	    "description": "Enable load balancing between multiple Metastore instances.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.metastore-timeout",
	    "description": "Timeout for Hive metastore requests.",
	    "defaultValue": "10s",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.metastore-cache-ttl",
	    "description": "Duration how long cached metastore data should be considered valid.",
	    "defaultValue": "0s",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.metastore-cache-maximum-size",
	    "description": "Hive metastore cache maximum size.",
	    "defaultValue": "10000",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.metastore-refresh-interval",
	    "description": "Asynchronously refresh cached metastore data after access if it is older than this but is not yet expired, allowing subsequent accesses to see fresh data.",
	    "defaultValue": "0s",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.metastore-refresh-max-threads",
	    "description": "Maximum threads used to refresh cached metastore data.",
	    "defaultValue": "100",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.s3.use-instance-credentials",
	    "description": "Use the EC2 metadata service to retrieve API credentials. This works with IAM roles in EC2.",
	    "defaultValue": "true",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.s3.aws-access-key",
	    "description": "Default AWS access key to use.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  },
	  {
	    "name": "hive.s3.aws-secret-key",
	    "description": "Default AWS secret key to use.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  },
	  {
	    "name": "hive.s3.iam-role",
	    "description": "IAM role to assume.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.s3.endpoint",
	    "description": "The S3 storage endpoint server. This can be used to connect to an S3-compatible storage system instead of AWS.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.s3.storage-class",
	    "description": "The S3 storage class to use when writing the data. Currently only STANDARD and INTELLIGENT_TIERING storage classes are supported.",
	    "defaultValue": "STANDARD",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.s3.signer-type",
	    "description": "Specify a different signer type for S3-compatible storage.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.s3.path-style-access",
	    "description": "Use path-style access for all requests to the S3-compatible storage. This is for S3-compatible storage that doesn’t support virtual-hosted-style access.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.s3.staging-directory",
	    "description": "Local staging directory for data written to S3. This defaults to the Java temporary directory specified by the JVM system property java.io.tmpdir.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.s3.pin-client-to-current-region",
	    "description": "Pin S3 requests to the same region as the EC2 instance where Presto is running.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.s3.ssl.enabled",
	    "description": "Use HTTPS to communicate with the S3 API.",
	    "defaultValue": "true",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.s3.sse.enabled",
	    "description": "Use S3 server-side encryption.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.s3.sse.type",
	    "description": "The type of key management for S3 server-side encryption. Use S3 for S3 managed or KMS for KMS-managed keys.",
	    "defaultValue": "S3",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.s3.sse.kms-key-id",
	    "description": "The KMS Key ID to use for S3 server-side encryption with KMS-managed keys. If not set, the default key is used.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.s3.kms-key-id",
	    "description": "If set, use S3 client-side encryption and use the AWS KMS to store encryption keys and use the value of this property as the KMS Key ID for newly created objects.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.s3.encryption-materials-provider",
	    "description": "If set, use S3 client-side encryption and use the value of this property as the fully qualified name of a Java class which implements the AWS SDK’s EncryptionMaterialsProvider interface.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.s3.upload-acl-type",
	    "description": "Canned ACL to use while uploading files to S3",
	    "defaultValue": "private",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.s3.skip-glacier-objects",
	    "description": "Ignore Glacier objects rather than failing the query. This will skip data that may be expected to be part of the table or partition.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  }
	],
	"hudi": [
	  {
	    "name": "hive.metastore.uri",
	    "description": "The URI(s) of the Hive metastore to connect to using the Thrift protocol. If multiple URIs are provided, the first URI is used by default and the rest of the URIs are fallback metastores. Example: thrift://192.0.2.3:9083 or thrift://192.0.2.3:9083,thrift://192.0.2.4:9083.",
	    "defaultValue": "thrift://hostname:9083",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "hudi.metadata-table-enabled",
	    "description": "Fetch the list of file names and sizes from Hudi’s metadata table rather than storage.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  	  {
	    "name": "hive.metastore.load-balancing-enabled",
	    "description": "Enable load balancing between multiple Metastore instances.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.metastore-timeout",
	    "description": "Timeout for Hive metastore requests.",
	    "defaultValue": "10s",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.metastore-cache-ttl",
	    "description": "Duration how long cached metastore data should be considered valid.",
	    "defaultValue": "0s",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.metastore-cache-maximum-size",
	    "description": "Hive metastore cache maximum size.",
	    "defaultValue": "10000",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.metastore-refresh-interval",
	    "description": "Asynchronously refresh cached metastore data after access if it is older than this but is not yet expired, allowing subsequent accesses to see fresh data.",
	    "defaultValue": "0s",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "hive.metastore-refresh-max-threads",
	    "description": "Maximum threads used to refresh cached metastore data.",
	    "defaultValue": "100",
	    "required": false,
	    "encrypt": false
	  }
	],
	"iceberg": [
	  {
	    "name": "hive.metastore.uri",
	    "description": "The URI(s) of the Hive metastore to connect to using the Thrift protocol. If multiple URIs are provided, the first URI is used by default and the rest of the URIs are fallback metastores. Example: thrift://192.0.2.3:9083 or thrift://192.0.2.3:9083,thrift://192.0.2.4:9083.",
	    "defaultValue": "hostname:port",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "iceberg.file-format",
	    "description": "The storage file format for Iceberg tables. The available values are PARQUET and ORC.",
	    "defaultValue": "PARQUET",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "iceberg.compression-codec",
	    "description": "The compression codec to use when writing files. The available values are NONE, SNAPPY, GZIP, LZ4, and ZSTD.",
	    "defaultValue": "GZIP",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "iceberg.catalog.type",
	    "description": "The catalog type for Iceberg tables. The available values are hive/hadoop/nessie, corresponding to the catalogs in Iceberg.",
	    "defaultValue": "hive",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "iceberg.catalog.warehouse",
	    "description": "The catalog warehouse root path for Iceberg tables. Example: hdfs://nn:8020/warehouse/path. This property is required if the iceberg.catalog.type is hadoop. Otherwise, it will be ignored.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "iceberg.catalog.cached-catalog-num",
	    "description": "The number of Iceberg catalogs to cache. This property is required if the iceberg.catalog.type is hadoop. Otherwise, it will be ignored.",
	    "defaultValue": "10",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "iceberg.hadoop.config.resources",
	    "description": "The path(s) for Hadoop configuration resources. Example: /etc/hadoop/conf/core-site.xml. This property is required if the iceberg.catalog.type is hadoop. Otherwise, it will be ignored.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "iceberg.max-partitions-per-writer",
	    "description": "The maximum number of partitions handled per writer.",
	    "defaultValue": "100",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "iceberg.minimum-assigned-split-weight",
	    "description": "A decimal value in the range (0, 1] used as a minimum for weights assigned to each split.",
	    "defaultValue": "0.05",
	    "required": false,
	    "encrypt": false
	  }
	],
	"jmx": [
	  {
	    "name": "jmx.dump-tables",
	    "description": "Comma separated list of Managed Beans (MBean).",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "jmx.dump-period",
	    "description": "Specifies which MBeans will be sampled and stored in memory every dump-period.",
	    "defaultValue": "10s",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "jmx.max-entries",
	    "description": "History will have limited size of max-entries of entries.",
	    "defaultValue": "86400",
	    "required": false,
	    "encrypt": false
	  }
	],
	"kafka": [
	  {
	    "name": "kafka.table-names",
	    "description": "Comma-separated list of all tables provided by the catalog.",
	    "defaultValue": "table_name",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "kafka.default-schema",
	    "description": "Default schema name for tables.",
	    "defaultValue": "default",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "kafka.nodes",
	    "description": "A comma separated list of hostname:port pairs for the Kafka data nodes.",
	    "defaultValue": "hostname:port",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "kafka.connect-timeout",
	    "description": "Timeout for connecting to the Kafka cluster.",
	    "defaultValue": "10s",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "kafka.max-poll-records",
	    "description": "Maximum number of records per poll.",
	    "defaultValue": "500",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "kafka.max-partition-fetch-bytes",
	    "description": "Maximum number of bytes from one partition per poll.",
	    "defaultValue": "1MB",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "kafka.table-description-dir",
	    "description": "Directory containing topic description files.",
	    "defaultValue": "etc/kafka",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "kafka.hide-internal-columns",
	    "description": "Controls whether internal columns are part of the table schema or not.",
	    "defaultValue": "true",
	    "required": false,
	    "encrypt": false
	  }
	],
	"kudu": [
	  {
	    "name": "kudu.client.master-addresses",
	    "description": "List of Kudu master addresses, at least one is needed (comma separated). Supported formats: example.com, example.com:7051, 192.0.2.1, 192.0.2.1:7051",
	    "defaultValue": "hostname",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "kudu.schema-emulation.enabled",
	    "description": "Kudu does not support schemas, but the connector can emulate them optionally. By default, this feature is disabled, and all tables belong to the default schema.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "kudu.schema-emulation.prefix",
	    "description": "Prefix to use for schema emulation (only relevant if 'kudu.schema-emulation.enabled=true').",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "kudu.client.default-admin-operation-timeout",
	    "description": "Default timeout used for administrative operations (e.g. createTable, deleteTable, etc.).",
	    "defaultValue": "30s",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "kudu.client.default-operation-timeout",
	    "description": "Default timeout used for user operations.",
	    "defaultValue": "30s",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "kudu.client.default-socket-read-timeout",
	    "description": "Default timeout to use when waiting on data from a socket.",
	    "defaultValue": "10s",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "kudu.client.disable-statistics",
	    "description": "Disable Kudu client's collection of statistics.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  }
	  
	],
	"lark-sheets": [
	  {
	    "name": "app-domain",
	    "description": "Use LARK if created at Lark Open Platform, or FEISHU otherwise.",
	    "defaultValue": "",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "app-id",
	    "description": "Your app id, available at Lark Open Platform or Feishu Open Platform.",
	    "defaultValue": "",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "app-secret-file",
	    "description": "Path to the JSON file that contains your app secret.",
	    "defaultValue": "",
	    "required": true,
	    "encrypt": false
	  }
	],
	"localfile": [
	  {
	    "name": "presto-logs.http-request-log.location",
	    "description": "Directory or file where HTTP request logs are written.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "presto-logs.http-request-log.pattern",
	    "description": "If the log location is a directory this glob is used to match file names in the directory.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  }
	],
	"memory": [
	  {
	    "name": "memory.max-data-per-node",
	    "description": "Defines memory limit for pages stored in this connector per each node.",
	    "defaultValue": "128MB",
	    "required": false,
	    "encrypt": false
	  }
	],
	"mongodb": [
	  {
	    "name": "mongodb.seeds",
	    "description": "Comma-separated list of hostname[:port] all mongod servers in the same replica set or a list of mongos servers in the same sharded cluster. If port is not specified, port 27017 will be used.",
	    "defaultValue": "hostname:port",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "mongodb.schema-collection",
	    "description": "A collection which contains schema information.",
	    "defaultValue": "_schema",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "mongodb.credentials",
	    "description": "A comma separated list of username:password@collection credentials",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  },
	  {
	    "name": "mongodb.min-connections-per-host",
	    "description": "The minimum size of the connection pool per host.",
	    "defaultValue": "0",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "mongodb.connections-per-host",
	    "description": "The maximum size of the connection pool per host.",
	    "defaultValue": "100",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "mongodb.max-wait-time",
	    "description": "The maximum wait time.",
	    "defaultValue": "120000",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "mongodb.connection-timeout",
	    "description": "The connection timeout in milliseconds. A value of 0 means no timeout. It is used solely when establishing a new connection.",
	    "defaultValue": "10000",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "mongodb.socket-timeout",
	    "description": "The socket timeout in milliseconds. It is used for I/O socket read and write operations.",
	    "defaultValue": "0",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "mongodb.socket-keep-alive",
	    "description": "Whether keep-alive is enabled on each socket.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "mongodb.ssl.enabled",
	    "description": "Use TLS/SSL for connections to mongod/mongos.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "mongodb.read-preference",
	    "description": "The read preference to use for queries, map-reduce, aggregation, and count. The available values are PRIMARY, PRIMARY_PREFERRED, SECONDARY, SECONDARY_PREFERRED and NEAREST.",
	    "defaultValue": "PRIMARY",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "mongodb.write-concern",
	    "description": "The write concern to use. The available values are ACKNOWLEDGED, FSYNC_SAFE, FSYNCED, JOURNAL_SAFE, JOURNALED, MAJORITY, NORMAL, REPLICA_ACKNOWLEDGED, REPLICAS_SAFE and UNACKNOWLEDGED.",
	    "defaultValue": "ACKNOWLEDGED",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "mongodb.required-replica-set",
	    "description": "The required replica set name.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "mongodb.cursor-batch-size",
	    "description": "The number of elements to return in a batch.",
	    "defaultValue": "0",
	    "required": false,
	    "encrypt": false
	  }
	],
	"mysql": [
	  {
	    "name": "connection-url",
	    "description": "Defines the connection information and parameters to pass to the JDBC driver.",
	    "defaultValue": "jdbc:mysql://hostname:3306",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "connection-user",
	    "description": "Username for the connection.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "connection-password",
	    "description": "Password for the connection.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  }
	],
	"oracle": [
	   {
	    "name": "connection-url",
	    "description": "Defines the connection information and parameters to pass to the JDBC driver.",
	    "defaultValue": "jdbc:oracle:thin:@hostname:1521:orcl",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "connection-user",
	    "description": "Username for the connection.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "connection-password",
	    "description": "Password for the connection.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  }
	],
	"pinot": [
	  {
	    "name": "pinot.controller-urls",
	    "description": "Comma separated list of the pinot controller host/port pairs.",
	    "defaultValue": "controller_host:9000",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.controller-rest-service",
	    "description": "Alternative rest endpoint for Pinot controller requests.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.rest-proxy-url",
	    "description": "Pinot rest proxy url.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.limit-large-for-segment",
	    "description": "Cap the number of rows returned when pushing down non-aggregation segment query.",
	    "defaultValue": "2147483647",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.topn-large",
	    "description": "Cap the TOP/LIMIT value when pushing down broker query.",
	    "defaultValue": "10000",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.connection-timeout",
	    "description": "Connection Timeout to talk to Pinot servers.",
	    "defaultValue": "1m",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.metadata-expiry",
	    "description": "Pinot metadata cache expiration time.",
	    "defaultValue": "2m",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.estimated-size-in-bytes-for-non-numeric-column",
	    "description": "Estimated byte size for non-numeric column.",
	    "defaultValue": "20",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.service-header-param",
	    "description": "RPC service header key.",
	    "defaultValue": "RPC-Service",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.caller-header-param",
	    "description": "RPC service caller header key.",
	    "defaultValue": "RPC-Caller",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.caller-header-value",
	    "description": "RPC service caller header value.",
	    "defaultValue": "presto",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.forbid-broker-queries",
	    "description": "No broker request pushing down.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.forbid-segment-queries",
	    "description": "No segment query pushing down, fail the query if broker query pushing down is not possible.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.rest-proxy-service-for-query",
	    "description": "Use rest proxy endpoint for Pinot broker requests.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.use-date-trunc",
	    "description": "Use the new UDF dateTrunc in pinot that is more presto compatible.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.num-segments-per-split",
	    "description": "Number of segments of the same host per split.",
	    "defaultValue": "1",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.ignore-empty-responses",
	    "description": "Ignore empty or missing pinot server responses.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.fetch-retry-count",
	    "description": "Retry count for retriable pinot data fetch calls.",
	    "defaultValue": "2",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.non-aggregate-limit-for-broker-queries",
	    "description": "Max limit for non aggregate queries to the pinot broker.",
	    "defaultValue": "25000",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.infer-date-type-in-schema",
	    "description": "Infer Pinot DAYS epoch column to Presto DATE type.",
	    "defaultValue": "true",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.infer-timestamp-type-in-schema",
	    "description": "Infer Pinot SECONDS epoch column to Presto TIMESTAMP type.",
	    "defaultValue": "true",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.mark-data-fetch-exceptions-as-retriable",
	    "description": "Retry Pinot request when failure.",
	    "defaultValue": "true",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.pushdown-topn-broker-queries",
	    "description": "Allow pushing down query pattern to broker: aggregation + groupBy + orderBy.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.streaming-server-grpc-max-inbound-message-bytes",
	    "description": "Max inbound message bytes when init gRPC client.",
	    "defaultValue": "128MB",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.proxy-enabled",
	    "description": "Pinot Cluster is behind a proxy.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.grpc-host",
	    "description": "Pinot gRPC host.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.grpc-port",
	    "description": "Pinot gRPC port.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.override-distinct-count-function",
	    "description": "Override ‘distinctCount’ function name.",
	    "defaultValue": "distinctCount",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.extra-http-headers",
	    "description": "Extra headers when sending HTTP based pinot requests to Pinot controller/broker.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.extra-grpc-metadata",
	    "description": "Extra metadata when sending gRPC based pinot requests to Pinot broker/server/proxy.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.grpc-tls-key-store-path",
	    "description": "TLS keystore file location for gRPC connection.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.grpc-tls-key-store-type",
	    "description": "TLS keystore type for gRPC.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.grpc-tls-key-store-password",
	    "description": "TLS keystore password.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  },
	  {
	    "name": "pinot.grpc-tls-trust-store-path",
	    "description": "TLS truststore file location for gRPC connection.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.grpc-tls-trust-store-type",
	    "description": "TLS truststore type for gRPC connection.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.grpc-tls-trust-store-password",
	    "description": "TLS truststore password.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  },
	  {
	    "name": "pinot.controller-authentication-type",
	    "description": "Pinot authentication method for controller requests. Allowed values are NONE and PASSWORD.",
	    "defaultValue": "NONE",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.controller-authentication-user",
	    "description": "Controller username for basic authentication method.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.controller-authentication-password",
	    "description": "Controller password for basic authentication method.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  },
	  {
	    "name": "pinot.broker-authentication-type",
	    "description": "Pinot authentication method for broker requests. Allowed values are NONE and PASSWORD.",
	    "defaultValue": "NONE",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.broker-authentication-user",
	    "description": "Broker username for basic authentication method.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "pinot.broker-authentication-password",
	    "description": "Broker password for basic authentication method.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  }
	],
	"postgresql": [
	   {
	    "name": "connection-url",
	    "description": "Defines the connection information and parameters to pass to the JDBC driver.",
	    "defaultValue": "jdbc:postgresql://hostname:5432/database",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "connection-user",
	    "description": "Username for the connection.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "connection-password",
	    "description": "Password for the connection.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  }
	],
	"prometheus": [
	  {
	    "name": "prometheus.uri",
	    "description": "Prometheus coordinator host address.",
	    "defaultValue": "http://hostname:port",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "prometheus.query-chunk-duration",
	    "description": "The duration of each query to Prometheus.",
	    "defaultValue": "1d",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "prometheus.max-query-duration",
	    "description": "Width of overall query to Prometheus, will be divided into query-chunk-duration queries.",
	    "defaultValue": "1h",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "prometheus.cache-ttl",
	    "description": "How long the config values are cached.",
	    "defaultValue": "30s",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "prometheus.bearer-token-file",
	    "description": "File holding bearer token for access to Prometheus.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  }
	],
	"redis": [
	  {
	    "name": "redis.nodes",
	    "description": "The hostname:port pair for the Redis server.",
	    "defaultValue": "hostname:port",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "redis.table-names",
	    "description": "Comma-separated list of all tables provided by the catalog.",
	    "defaultValue": "schema.table",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "redis.default-schema",
	    "description": "Defines the schema which will contain all tables that were defined without a qualifying schema name.",
	    "defaultValue": "default",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "redis.scan-count",
	    "description": "Redis parameter for scanning of the keys.",
	    "defaultValue": "100",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "redis.key-prefix-schema-table",
	    "description": "If true, only keys prefixed with the schema-name:table-name: are scanned for a table, and all other keys will be filtered out. If false, all keys are scanned.",
	    "defaultValue": "false",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "redis.key-delimiter",
	    "description": "The character used for separating schema-name and table-name when redis.key-prefix-schema-table is true.",
	    "defaultValue": ":",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "redis.table-description-dir",
	    "description": "Directory containing table description files.",
	    "defaultValue": "etc/redis",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "redis.hide-internal-columns",
	    "description": "Controls whether internal columns are part of the table schema or not.",
	    "defaultValue": "true",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "redis.database-index",
	    "description": "Redis database index.",
	    "defaultValue": "0",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "redis.password",
	    "description": "Redis server password.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  }
	],
	"redshift": [
	   {
	    "name": "connection-url",
	    "description": "Defines the connection information and parameters to pass to the JDBC driver.",
	    "defaultValue": "jdbc:postgresql://hostname:5439/database",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "connection-user",
	    "description": "Username for the connection.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "connection-password",
	    "description": "Password for the connection.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  }
	],
	"sqlserver": [
	  {
	    "name": "connection-url",
	    "description": "Defines the connection information and parameters to pass to the JDBC driver.",
	    "defaultValue": "jdbc:sqlserver://[serverName[\\instanceName][:portNumber]]",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "connection-user",
	    "description": "Username for the connection.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "connection-password",
	    "description": "Password for the connection.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": true
	  }
	],
	"presto-thrift": [
	  {
	    "name": "presto.thrift.client.addresses",
	    "description": "Comma-separated list of thrift servers in the form of host:port.",
	    "defaultValue": "hostname:port",
	    "required": true,
	    "encrypt": false
	  },
	  {
	    "name": "presto-thrift.max-response-size",
	    "description": "Maximum size of data returned from Thrift server.",
	    "defaultValue": "16MB",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "presto-thrift.metadata-refresh-threads",
	    "description": "Number of refresh threads for metadata cache.",
	    "defaultValue": "1",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "presto.thrift.client.max-retries",
	    "description": "Maximum number of retries for failed Thrift requests.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "presto.thrift.client.max-backoff-delay",
	    "description": "Maximum interval between retry attempts.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "presto.thrift.client.min-backoff-delay",
	    "description": "Minimum interval between retry attempts.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "presto.thrift.client.max-retry-time",
	    "description": "Maximum duration across all attempts of a Thrift request.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "presto.thrift.client.backoff-scale-factor",
	    "description": "Scale factor for exponential back off.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "presto.thrift.client.connect-timeout",
	    "description": "Connect timeout.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "presto.thrift.client.request-timeout",
	    "description": "Request timeout.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "presto.thrift.client.socks-proxy",
	    "description": "SOCKS proxy address.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "presto.thrift.client.max-frame-size",
	    "description": "Maximum size of a raw Thrift response.",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "presto.thrift.client.transport",
	    "description": "Thrift transport type (UNFRAMED, FRAMED, HEADER).",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  },
	  {
	    "name": "presto.thrift.client.protocol",
	    "description": "Thrift protocol type (BINARY, COMPACT, FB_COMPACT).",
	    "defaultValue": "",
	    "required": false,
	    "encrypt": false
	  }
	],
	"tpcds": [],
	"tpch": []
}