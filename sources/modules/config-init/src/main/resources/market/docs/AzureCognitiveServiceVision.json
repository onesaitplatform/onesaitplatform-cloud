[
    {
        "id": "f793a866.5c5ec8",
        "type": "subflow",
        "name": "removePreviousHeaders",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "24c35f17.18f28"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 40,
                "wires": [
                    {
                        "id": "24c35f17.18f28",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "24c35f17.18f28",
        "type": "function",
        "z": "f793a866.5c5ec8",
        "name": "removePreviousHeaders",
        "func": "\nmsg.req.headers = {}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 230,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "f1bbd78e.439d98",
        "type": "subflow",
        "name": "parseAzureResponse",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "d38e9609.0a5678"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 400,
                "y": 40,
                "wires": [
                    {
                        "id": "d38e9609.0a5678",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "d38e9609.0a5678",
        "type": "function",
        "z": "f1bbd78e.439d98",
        "name": "parseAzureResponse",
        "func": "\nif (msg.statusCode == 401) {\n    msg.payload = {\n         \"statusCode\": 500,\n         \"message\": \"External service 401: Unauthorized. Access token is missing, invalid, audience is incorrect (check external service configuration), or have expired.\"\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 220,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "8932d9b5.ac35c8",
        "type": "subflow",
        "name": "Azure Vision Token",
        "info": "Flow used to set Azure Cognitive Vision Access Token",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 60,
                "wires": [
                    {
                        "id": "f4344054.47cb8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 360,
                "y": 60,
                "wires": [
                    {
                        "id": "f4344054.47cb8",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "f4344054.47cb8",
        "type": "function",
        "z": "8932d9b5.ac35c8",
        "name": "setAzureVisionToken",
        "func": "\n// ------- Insert Azure Token -------\nvar ACCESS_TOKEN = \"<AZURE_TOKEN>\";\n// ----------------------------------\n\nvar dict = {};\nif (msg.headers !== undefined) {\n    msg.headers = dict;\n}\nmsg.headers = dict;\nmsg.headers[\"Ocp-Apim-Subscription-Key\"] = ACCESS_TOKEN;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "e438a536.2f33b8",
        "type": "tab",
        "label": "Azure Cognitive Service Vision",
        "disabled": false,
        "info": ""
    },
    {
        "id": "21a1799.7c70d86",
        "type": "function",
        "z": "e438a536.2f33b8",
        "name": "visionProcessingInfo",
        "func": "var mainInfo = {\n    \"info\": \"API REST para el procesamiento de imágenes\",\n    \"options\": [\n        \"/analyze\", \"/analyze/sample\",\n        \"/describe\", \"/describe/sample\",\n        \"/thumbnail\", \"/thumbnail/sample\",\n        \"/ocr\", \"/ocr/sample\"\n        ]\n};\n\nmsg.payload = JSON.stringify(mainInfo);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 80,
        "wires": [
            [
                "d539a246.59e39",
                "6bfe2804.c73778"
            ]
        ]
    },
    {
        "id": "d539a246.59e39",
        "type": "debug",
        "z": "e438a536.2f33b8",
        "name": "visionProcessingDebug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 910,
        "y": 80,
        "wires": []
    },
    {
        "id": "6185bf6d.eb3c6",
        "type": "function",
        "z": "e438a536.2f33b8",
        "name": "analyzeInfo",
        "func": "var mainInfo = {\n    \"info\": \"REST API for image anaysis\",\n    \"example\":{\n        'url': \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/12/Broadway_and_Times_Square_by_night.jpg/450px-Broadway_and_Times_Square_by_night.jpg\"\n    }\n};\nmsg.payload = JSON.stringify(mainInfo);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 200,
        "wires": [
            [
                "95fb8442.f98ac8",
                "561c50b2.66cef"
            ]
        ]
    },
    {
        "id": "95fb8442.f98ac8",
        "type": "debug",
        "z": "e438a536.2f33b8",
        "name": "analyzeInfoDebug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 830,
        "y": 220,
        "wires": []
    },
    {
        "id": "85369ee3.0c89",
        "type": "function",
        "z": "e438a536.2f33b8",
        "name": "setContentType",
        "func": "msg.headers[\"Content-Type\"] = msg.req.headers[\"content-type\"];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 300,
        "wires": [
            [
                "fff2da22.7ccfe8"
            ]
        ]
    },
    {
        "id": "a05e436.87e7bc",
        "type": "http request",
        "z": "e438a536.2f33b8",
        "name": "descriptionUrlCognitiveService",
        "method": "POST",
        "ret": "obj",
        "url": "",
        "tls": "",
        "timeoutMillis": "60000",
        "x": 750,
        "y": 420,
        "wires": [
            [
                "a3eb79ee.4b0a58"
            ]
        ]
    },
    {
        "id": "6b37bbc8.9dd544",
        "type": "debug",
        "z": "e438a536.2f33b8",
        "name": "analyzeDebug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1340,
        "y": 480,
        "wires": []
    },
    {
        "id": "85fb77ca.0c35e8",
        "type": "comment",
        "z": "e438a536.2f33b8",
        "name": "Vision",
        "info": "Vision Azure Services\n\n/vision  para obtener información general de los servicios\n\n\nOpciones:\n    /analyzeInfo    info de analyze\n    /analyze        análisis de imagen [analyze, detection]\n    \n    ...",
        "x": 70,
        "y": 40,
        "wires": []
    },
    {
        "id": "fff2da22.7ccfe8",
        "type": "function",
        "z": "e438a536.2f33b8",
        "name": "parseAnalyze",
        "func": "msg.url = \"https://northeurope.api.cognitive.microsoft.com/vision/v2.0/analyze\";\n\nmsg.req.query[\"language\"] = \"en\";\nmsg.req.query[\"details\"] = \"Celebrities,Landmarks\";\nmsg.req.query[\"visualFeatures\"] = \"Adult,Brands,Categories,Color,Description,Faces,ImageType,Objects,Tags\";\nvar params = \"\"\nif (Object.keys(msg.req.query).length > 0){\n       params = \"?\"\n       for (var p in msg.req.query) {\n            params += \"&\";\n            params += p;\n            params += \"=\";\n            params += msg.req.query[p];\n       }\n       \n       msg.url += params;\n}\n       \nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 340,
        "wires": [
            [
                "ba59b8ac.653d88"
            ]
        ]
    },
    {
        "id": "429cc671.e81078",
        "type": "function",
        "z": "e438a536.2f33b8",
        "name": "thumbnailInfo",
        "func": "var processInfo = {\n    \"info\": \"REST API for generate a thumbnail\",\n    \"parameters\":{\n        \"width\": \"x_pixels\",\n        \"height\": \"y_pixels\"\n    },\n    \"example\":{\n        \"url\": \"https://upload.wikimedia.org/wikipedia/commons/9/94/Bloodhound_Puppy.jpg\"\n    }\n\n};\n\nmsg.payload = JSON.stringify(processInfo);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 960,
        "wires": [
            [
                "d88a50cb.ef9a2",
                "82cfc0a.f71a14"
            ]
        ]
    },
    {
        "id": "d88a50cb.ef9a2",
        "type": "debug",
        "z": "e438a536.2f33b8",
        "name": "thumbnailInfoDebug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 820,
        "y": 980,
        "wires": []
    },
    {
        "id": "efb334eb.5c2b98",
        "type": "http request",
        "z": "e438a536.2f33b8",
        "name": "thumbnailCognitiveService",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "timeoutMillis": "10000",
        "x": 720,
        "y": 1140,
        "wires": [
            [
                "9b64870e.cc9fc8"
            ]
        ]
    },
    {
        "id": "e98405bd.917068",
        "type": "debug",
        "z": "e438a536.2f33b8",
        "name": "thumbnailDebug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1340,
        "y": 1180,
        "wires": []
    },
    {
        "id": "34003a65.3a0fe6",
        "type": "function",
        "z": "e438a536.2f33b8",
        "name": "ocrInfo",
        "func": "var processInfo = {\n    \"info\": \"REST API for extract text from image\",\n    \"example\":{\n        \"url\": \"https://images1.autocasion.com/actualidad/wp-content/uploads/2015/10/Matr%C3%ADculas-de-coche-curiosas.jpg\"\n    }\n\n};\n\nmsg.payload = JSON.stringify(processInfo);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 1300,
        "wires": [
            [
                "a5d8b7b7.ec9778",
                "c7187955.3bf818"
            ]
        ]
    },
    {
        "id": "a5d8b7b7.ec9778",
        "type": "debug",
        "z": "e438a536.2f33b8",
        "name": "ocrInfoDebug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 840,
        "y": 1320,
        "wires": []
    },
    {
        "id": "7ab5f138.e04db",
        "type": "http request",
        "z": "e438a536.2f33b8",
        "name": "ocrCognitiveService",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "timeoutMillis": "10000",
        "x": 680,
        "y": 1480,
        "wires": [
            [
                "63b5988f.724868"
            ]
        ]
    },
    {
        "id": "45b62736.7065f8",
        "type": "debug",
        "z": "e438a536.2f33b8",
        "name": "ocrDebug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1360,
        "y": 1540,
        "wires": []
    },
    {
        "id": "1413ff17.6aaf41",
        "type": "subflow:8932d9b5.ac35c8",
        "z": "e438a536.2f33b8",
        "name": "setAzureVisionToken",
        "x": 580,
        "y": 260,
        "wires": [
            [
                "85369ee3.0c89"
            ]
        ]
    },
    {
        "id": "b4742dcc.419f4",
        "type": "subflow:8932d9b5.ac35c8",
        "z": "e438a536.2f33b8",
        "name": "setAzureVisionToken",
        "x": 580,
        "y": 1020,
        "wires": [
            [
                "ac20af39.a3dfa"
            ]
        ]
    },
    {
        "id": "78ec5fb1.9ece8",
        "type": "subflow:8932d9b5.ac35c8",
        "z": "e438a536.2f33b8",
        "name": "setAzureVisionToken",
        "x": 580,
        "y": 1360,
        "wires": [
            [
                "4c5534e2.9b6f6c"
            ]
        ]
    },
    {
        "id": "cdb8c51.9725938",
        "type": "onesaitplatform api rest",
        "z": "e438a536.2f33b8",
        "name": "Vision",
        "description": "Vision Services",
        "public": true,
        "category": "TOOLS",
        "authentication": "YWRtaW5pc3RyYXRvcjp6MmtCNmFObTJkOTVuRWNVVTZxS1ppMUFKVGdQaVpKcnZSWTJ1WmNNV3hBPQ==",
        "x": 70,
        "y": 80,
        "wires": [
            [
                "653c0a6b.9fa274",
                "8129d77a.163878",
                "8dfa8eb6.10caf",
                "65b53bc1.6061e4",
                "d98b3a07.821e08",
                "6fa99ab4.09d7d4",
                "c7e1401f.f7cc6",
                "d1064e64.985d1",
                "c75f60e4.62292"
            ]
        ]
    },
    {
        "id": "653c0a6b.9fa274",
        "type": "onesaitplatform api rest operation",
        "z": "e438a536.2f33b8",
        "name": "Vision",
        "description": "Vision Services Information",
        "url": "/653c0a6b9fa274/",
        "apiUrl": "/",
        "method": "get",
        "upload": false,
        "queryParams": "",
        "swaggerDoc": "",
        "x": 270,
        "y": 80,
        "wires": [
            [
                "21a1799.7c70d86"
            ]
        ]
    },
    {
        "id": "6bfe2804.c73778",
        "type": "onesaitplatform api rest operation response",
        "z": "e438a536.2f33b8",
        "name": "infoResult",
        "statusCode": "",
        "headers": {},
        "x": 700,
        "y": 80,
        "wires": []
    },
    {
        "id": "561c50b2.66cef",
        "type": "onesaitplatform api rest operation response",
        "z": "e438a536.2f33b8",
        "name": "analyzeInfoResult",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 180,
        "wires": []
    },
    {
        "id": "8129d77a.163878",
        "type": "onesaitplatform api rest operation",
        "z": "e438a536.2f33b8",
        "name": "analyzeSample",
        "description": "Analyze Image Information",
        "url": "/8129d77a163878/analyze/sample",
        "apiUrl": "/analyze/sample",
        "method": "get",
        "upload": false,
        "queryParams": "",
        "swaggerDoc": "",
        "x": 360,
        "y": 200,
        "wires": [
            [
                "6185bf6d.eb3c6"
            ]
        ]
    },
    {
        "id": "8dfa8eb6.10caf",
        "type": "onesaitplatform api rest operation",
        "z": "e438a536.2f33b8",
        "name": "thumbnailSample",
        "description": "ThumbnaiI Generation Information",
        "url": "/8dfa8eb610caf/thumbnail/sample",
        "apiUrl": "/thumbnail/sample",
        "method": "get",
        "upload": false,
        "queryParams": "",
        "swaggerDoc": "",
        "x": 370,
        "y": 960,
        "wires": [
            [
                "429cc671.e81078"
            ]
        ]
    },
    {
        "id": "82cfc0a.f71a14",
        "type": "onesaitplatform api rest operation response",
        "z": "e438a536.2f33b8",
        "name": "thumbnailInfoResult",
        "statusCode": "",
        "headers": {},
        "x": 840,
        "y": 940,
        "wires": []
    },
    {
        "id": "65b53bc1.6061e4",
        "type": "onesaitplatform api rest operation",
        "z": "e438a536.2f33b8",
        "name": "ocrSample",
        "description": "OCR Extraction Information",
        "url": "/65b53bc16061e4/ocr/sample",
        "apiUrl": "/ocr/sample",
        "method": "get",
        "upload": false,
        "queryParams": "",
        "swaggerDoc": "",
        "x": 350,
        "y": 1300,
        "wires": [
            [
                "34003a65.3a0fe6"
            ]
        ]
    },
    {
        "id": "c7187955.3bf818",
        "type": "onesaitplatform api rest operation response",
        "z": "e438a536.2f33b8",
        "name": "ocrInfoResult",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 1280,
        "wires": []
    },
    {
        "id": "d98b3a07.821e08",
        "type": "onesaitplatform api rest operation",
        "z": "e438a536.2f33b8",
        "name": "analyze",
        "description": "Analyze Image Service",
        "url": "/d98b3a07821e08/analyze",
        "apiUrl": "/analyze",
        "method": "post",
        "upload": true,
        "queryParams": "",
        "swaggerDoc": "",
        "x": 340,
        "y": 260,
        "wires": [
            [
                "1413ff17.6aaf41"
            ]
        ]
    },
    {
        "id": "ef9e7b3b.c491a8",
        "type": "onesaitplatform api rest operation response",
        "z": "e438a536.2f33b8",
        "name": "analyzeResult",
        "statusCode": "",
        "headers": {},
        "x": 1360,
        "y": 440,
        "wires": []
    },
    {
        "id": "6fa99ab4.09d7d4",
        "type": "onesaitplatform api rest operation",
        "z": "e438a536.2f33b8",
        "name": "thumbnail",
        "description": "Thumbnail Generation Service",
        "url": "/6fa99ab409d7d4/thumbnail",
        "apiUrl": "/thumbnail",
        "method": "post",
        "upload": true,
        "queryParams": "{\"width\": \"String\",\"height\": \"String\"}",
        "swaggerDoc": "",
        "x": 340,
        "y": 1020,
        "wires": [
            [
                "b4742dcc.419f4"
            ]
        ]
    },
    {
        "id": "a797684f.99fc18",
        "type": "onesaitplatform api rest operation response",
        "z": "e438a536.2f33b8",
        "name": "thumbnailResult",
        "statusCode": "",
        "headers": {},
        "x": 1360,
        "y": 1140,
        "wires": []
    },
    {
        "id": "c7e1401f.f7cc6",
        "type": "onesaitplatform api rest operation",
        "z": "e438a536.2f33b8",
        "name": "ocr",
        "description": "OCR Extraction Service",
        "url": "/c7e1401ff7cc6/ocr",
        "apiUrl": "/ocr",
        "method": "post",
        "upload": true,
        "queryParams": "",
        "swaggerDoc": "",
        "x": 330,
        "y": 1360,
        "wires": [
            [
                "78ec5fb1.9ece8"
            ]
        ]
    },
    {
        "id": "848f79ca.6e33a8",
        "type": "onesaitplatform api rest operation response",
        "z": "e438a536.2f33b8",
        "name": "ocrResult",
        "statusCode": "",
        "headers": {},
        "x": 1380,
        "y": 1500,
        "wires": []
    },
    {
        "id": "767df550.22e84c",
        "type": "function",
        "z": "e438a536.2f33b8",
        "name": "describeInfo",
        "func": "var mainInfo = {\n    \"info\": \"REST API for image description\",\n    \"example\":{\n        'url': \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/12/Broadway_and_Times_Square_by_night.jpg/450px-Broadway_and_Times_Square_by_night.jpg\"\n    }\n};\nmsg.payload = JSON.stringify(mainInfo);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 580,
        "wires": [
            [
                "c3c0bb70.022078",
                "644db054.5dddb"
            ]
        ]
    },
    {
        "id": "c3c0bb70.022078",
        "type": "debug",
        "z": "e438a536.2f33b8",
        "name": "describeInfoDebug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 830,
        "y": 600,
        "wires": []
    },
    {
        "id": "7d09b391.ec44fc",
        "type": "function",
        "z": "e438a536.2f33b8",
        "name": "setContentType",
        "func": "msg.headers[\"Content-Type\"] = msg.req.headers[\"content-type\"];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 680,
        "wires": [
            [
                "cad3bd13.6c07b"
            ]
        ]
    },
    {
        "id": "f1d1764.9964a88",
        "type": "http request",
        "z": "e438a536.2f33b8",
        "name": "descriptionUrlCognitiveService",
        "method": "POST",
        "ret": "obj",
        "url": "",
        "tls": "",
        "timeoutMillis": "60000",
        "x": 770,
        "y": 800,
        "wires": [
            [
                "bfbbf2cc.75621"
            ]
        ]
    },
    {
        "id": "4c55e67d.36a118",
        "type": "debug",
        "z": "e438a536.2f33b8",
        "name": "describeDebug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1340,
        "y": 860,
        "wires": []
    },
    {
        "id": "cad3bd13.6c07b",
        "type": "function",
        "z": "e438a536.2f33b8",
        "name": "parseDescribe",
        "func": "msg.url = \"https://northeurope.api.cognitive.microsoft.com/vision/v2.0/describe\";\n\nmsg.req.query[\"language\"] = \"en\";\nmsg.req.query[\"maxCandidates\"] = \"25\";\n\nvar params = \"\"\nif (Object.keys(msg.req.query).length > 0){\n       params = \"?\"\n       for (var p in msg.req.query) {\n            params += \"&\";\n            params += p;\n            params += \"=\";\n            params += msg.req.query[p];\n       }\n       \n       msg.url += params;\n}\n       \nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 720,
        "wires": [
            [
                "672b5db8.f486f4"
            ]
        ]
    },
    {
        "id": "877f3e04.6accf",
        "type": "subflow:8932d9b5.ac35c8",
        "z": "e438a536.2f33b8",
        "name": "setAzureVisionToken",
        "x": 580,
        "y": 640,
        "wires": [
            [
                "7d09b391.ec44fc"
            ]
        ]
    },
    {
        "id": "644db054.5dddb",
        "type": "onesaitplatform api rest operation response",
        "z": "e438a536.2f33b8",
        "name": "describeInfoResult",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 560,
        "wires": []
    },
    {
        "id": "d1064e64.985d1",
        "type": "onesaitplatform api rest operation",
        "z": "e438a536.2f33b8",
        "name": "describeSample",
        "description": "Describe Image Information",
        "url": "/d1064e64985d1/describe/sample",
        "apiUrl": "/describe/sample",
        "method": "get",
        "upload": false,
        "queryParams": "",
        "swaggerDoc": "",
        "x": 360,
        "y": 580,
        "wires": [
            [
                "767df550.22e84c"
            ]
        ]
    },
    {
        "id": "c75f60e4.62292",
        "type": "onesaitplatform api rest operation",
        "z": "e438a536.2f33b8",
        "name": "describe",
        "description": "Describe Image Service",
        "url": "/c75f60e462292/describe",
        "apiUrl": "/describe",
        "method": "post",
        "upload": true,
        "queryParams": "",
        "swaggerDoc": "",
        "x": 340,
        "y": 640,
        "wires": [
            [
                "877f3e04.6accf"
            ]
        ]
    },
    {
        "id": "8d349b37.4e48b8",
        "type": "onesaitplatform api rest operation response",
        "z": "e438a536.2f33b8",
        "name": "describeResult",
        "statusCode": "",
        "headers": {},
        "x": 1360,
        "y": 820,
        "wires": []
    },
    {
        "id": "ac20af39.a3dfa",
        "type": "function",
        "z": "e438a536.2f33b8",
        "name": "parseThumbnail",
        "func": "msg.url = \"https://northeurope.api.cognitive.microsoft.com/vision/v2.0/generateThumbnail\";\n\nmsg.req.query[\"smartCropping\"] = \"true\";\n\nvar params = \"\"\nif (Object.keys(msg.req.query).length > 0){\n       params = \"?\"\n       for (var p in msg.req.query) {\n            params += \"&\";\n            params += p;\n            params += \"=\";\n            params += msg.req.query[p];\n       }\n       \n       msg.url += params;\n}\n       \nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 1060,
        "wires": [
            [
                "c22d6f21.d22ca"
            ]
        ]
    },
    {
        "id": "4c5534e2.9b6f6c",
        "type": "function",
        "z": "e438a536.2f33b8",
        "name": "parseOcr",
        "func": "msg.url = \"https://northeurope.api.cognitive.microsoft.com/vision/v2.0/ocr\";\n\nmsg.req.query[\"language\"] = \"en\";\nmsg.req.query[\"detectOrientation\"] = \"true\";\nvar params = \"\"\nif (Object.keys(msg.req.query).length > 0){\n       params = \"?\"\n       for (var p in msg.req.query) {\n            params += \"&\";\n            params += p;\n            params += \"=\";\n            params += msg.req.query[p];\n       }\n       \n       msg.url += params;\n}\n       \nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 1400,
        "wires": [
            [
                "194cc2ec.3678ed"
            ]
        ]
    },
    {
        "id": "a3eb79ee.4b0a58",
        "type": "subflow:f1bbd78e.439d98",
        "z": "e438a536.2f33b8",
        "name": "",
        "x": 760,
        "y": 460,
        "wires": [
            [
                "d506162b.d94f38"
            ]
        ]
    },
    {
        "id": "bfbbf2cc.75621",
        "type": "subflow:f1bbd78e.439d98",
        "z": "e438a536.2f33b8",
        "name": "",
        "x": 780,
        "y": 840,
        "wires": [
            [
                "a7fa014f.8cf97"
            ]
        ]
    },
    {
        "id": "9b64870e.cc9fc8",
        "type": "subflow:f1bbd78e.439d98",
        "z": "e438a536.2f33b8",
        "name": "",
        "x": 740,
        "y": 1180,
        "wires": [
            [
                "aec6794b.775538"
            ]
        ]
    },
    {
        "id": "63b5988f.724868",
        "type": "subflow:f1bbd78e.439d98",
        "z": "e438a536.2f33b8",
        "name": "",
        "x": 720,
        "y": 1520,
        "wires": [
            [
                "a2adb5a5.5a9b58"
            ]
        ]
    },
    {
        "id": "ba59b8ac.653d88",
        "type": "subflow:f793a866.5c5ec8",
        "z": "e438a536.2f33b8",
        "name": "",
        "x": 690,
        "y": 380,
        "wires": [
            [
                "a05e436.87e7bc"
            ]
        ]
    },
    {
        "id": "d506162b.d94f38",
        "type": "subflow:f793a866.5c5ec8",
        "z": "e438a536.2f33b8",
        "name": "",
        "x": 1090,
        "y": 460,
        "wires": [
            [
                "ef9e7b3b.c491a8",
                "6b37bbc8.9dd544"
            ]
        ]
    },
    {
        "id": "a7fa014f.8cf97",
        "type": "subflow:f793a866.5c5ec8",
        "z": "e438a536.2f33b8",
        "name": "",
        "x": 1070,
        "y": 840,
        "wires": [
            [
                "8d349b37.4e48b8",
                "4c55e67d.36a118"
            ]
        ]
    },
    {
        "id": "672b5db8.f486f4",
        "type": "subflow:f793a866.5c5ec8",
        "z": "e438a536.2f33b8",
        "name": "",
        "x": 710,
        "y": 760,
        "wires": [
            [
                "f1d1764.9964a88"
            ]
        ]
    },
    {
        "id": "c22d6f21.d22ca",
        "type": "subflow:f793a866.5c5ec8",
        "z": "e438a536.2f33b8",
        "name": "",
        "x": 670,
        "y": 1100,
        "wires": [
            [
                "efb334eb.5c2b98"
            ]
        ]
    },
    {
        "id": "aec6794b.775538",
        "type": "subflow:f793a866.5c5ec8",
        "z": "e438a536.2f33b8",
        "name": "",
        "x": 1070,
        "y": 1180,
        "wires": [
            [
                "a797684f.99fc18",
                "e98405bd.917068"
            ]
        ]
    },
    {
        "id": "194cc2ec.3678ed",
        "type": "subflow:f793a866.5c5ec8",
        "z": "e438a536.2f33b8",
        "name": "",
        "x": 650,
        "y": 1440,
        "wires": [
            [
                "7ab5f138.e04db"
            ]
        ]
    },
    {
        "id": "40148fef.fcca8",
        "type": "subflow:f793a866.5c5ec8",
        "z": "e438a536.2f33b8",
        "name": "",
        "x": 1070,
        "y": 1520,
        "wires": [
            [
                "848f79ca.6e33a8",
                "45b62736.7065f8"
            ]
        ]
    },
    {
        "id": "a2adb5a5.5a9b58",
        "type": "function",
        "z": "e438a536.2f33b8",
        "name": "wordsField",
        "func": "\nif (msg.statusCode = 200) {\n    var body = JSON.parse(msg.payload);\n    \n    words = \"\";\n    var regionWords = [];\n    regions = body[\"regions\"];\n    \n    for (let region of regions) {\n        var lines = region[\"lines\"];\n        var regionWord = \"\";\n        for (let line of lines) {\n            var wordsline = line[\"words\"];\n            for (let wordline of wordsline) {\n                var text = wordline[\"text\"];\n                words += text;\n                words += \" \";\n                regionWord += text;\n                regionWord += \" \";\n            }\n        }\n        if (regionWord.length > 0) {\n            regionWord = regionWord.substring(0, regionWord.length-1);\n        }\n        regionWords.push(regionWord);\n    }\n    \n    if (words.length > 0) {\n        words = words.substring(0, words.length-1);\n    }\n    \n    msg.payload = body;\n    msg.payload[\"words\"] = words;\n    msg.payload[\"regionWords\"] = regionWords;\n    \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1040,
        "y": 1480,
        "wires": [
            [
                "40148fef.fcca8"
            ]
        ]
    }
]