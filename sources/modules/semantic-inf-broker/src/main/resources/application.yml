##--spring.config.name=apimanager
##security.require_ssl: true
server: ## Config Web Server
   port: 20000
   servlet.contextPath: /router
   tomcat:
      access_log_enabled: true
      basedir: target/tomcat
   jetty.max-http-form-post-size: 20000000


logbook:
  exclude:
     - ${server.servlet.contextPath}/actuator/**
     - ${server.servlet.contextPath}/static/**
     - ${server.servlet.contextPath}/themes/**
     - ${server.servlet.contextPath}/swagger-ui/**
  write:
     max-body-size: 10000
     
#hawtio.authenticationEnabled: false
#hawtio.offline: true

master:
   datasource:
      hikari:
        jdbc-url: jdbc:mysql://localhost:3306/onesaitplatform_master_config?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&autoReconnect=true
        username: root
        password: ENC(v6o0Jud8aASYCkRb+u0RTICFUR8Pd5ph)
        driver-class-name: com.mysql.cj.jdbc.Driver
#        jdbc-url: jdbc:postgresql://localhost:5432/onesaitplatform_master_config
#        username: postgres
#        password: ENC(v6o0Jud8aASYCkRb+u0RTICFUR8Pd5ph)
#        driver-class-name: org.postgresql.Driver
        pool-name: master-hikari-pool
        minimum-idle: 1
        maximum-pool-size: 2
        connection-timeout: 10000

onesaitplatform: #Config onesaitplatform specific
   audit.global.notify: true
   apimanager:
      cacheable: false
   iotbroker.plugable:
      gateway:
         kafka:
            enable: true
            brokers: none
            host: localhost
            port: 9095
            partitions: 1
            replication: 1
            prefix: ONTOLOGY_
            notification.prefix: ONTOLOGY_OUTPUT_
            group: ontologyGroup
            topic.pattern: ONTOLOGY.*
            router.topic: router
            consumer.consumersCount : 10
            consumer.seekTo : beginning
            consumer.group : kafkaGroup
            consumer.maxPollRecords : 5000
   database.elasticsearch.enabled: false
   database.opensearch.enabled: false
   database.mongodb:
      database: onesaitplatform_rtdb
      authenticationDatabase:  #admin
      servers: localhost:27017
      autoConnectRetry: true
      socketTimeout: 5000
      maxAutoConnectRetryTime: 5000
      maxWaitTime: 5000
      useAuth: false
      username: #platformadmin
      password: #0pen-platf0rm-2018!
      readFromSecondaries: false
      queries.executionTimeout: 5000
      queries.defaultLimit: 2000
      queries.maxConcurrentQueries: 3
      writeConcern: UNACKNOWLEDGED
      tools.mongoexport.path: mongoexport
      tools.mongoimport.path: mongoimport
      tools.mongoshell.path: mongo
      tools.useSequentialOps: true
      quasar.maxHttpConnections: 100
      quasar.maxHttpConnectionsPerRoute: 100
      quasar.connectionTimeout.millis: 60000
      quasar.connector.http.endpoint: http://localhost:18200/query/fs/
   database.timeseries.timezone: UTC
   database.timescaledb:
      enabled: false
      url: jdbc:postgresql://localhost:5432/?currentSchema=public
      user: ENC(0K1krO/jgwq+DCymHZDLYDFMfI8tJRot)
      password: ENC(DdyKkq1kRMvaC1p4RlThA/MkXjE5QU4c)
      connectionName: op_timeseriesdb
   database.minio:
      access-key: ENC(d6bDYa5aGMyXndGA0edIGWFtcw3UygXi)
      secret-key: ENC(kV79KowPOv0J8QGeQ6iSQcFUqoZalNVj)
   router.metrics.query.enabled: false
   router.avoidsslverification: true
   router.audit:
      enabled: true
      extractor.pool: 30
      process.events: true
   router.notifications.pool:
      nodered: 50
      kafka: 50
      rulesengine: 50
      subscription: 50
      subscription.notificator: 50
      subscription.attemps: 5
   transaction.timeout.seconds: 60
   graylog:
      enabled: false
      host: 127.0.0.1
      port: 12201

management.endpoints.web.exposure.include: "*"
management.endpoint.health.show-details: always
management.health.elasticsearch.enabled: false



spring: ## General Config
   main:
      allow-circular-references: true
      allow-bean-definition-overriding: true
   application.name: onesaitplatform-semantic-inf-broker
   boot.admin: #Spring Boot Admin Config
      client.url: http://localhost:18100/monitoring
      client.username: operations
      client.password: changeIt2019!
      client.instance.metadata.user.name: ${spring.boot.admin.client.username}
      client.instance.metadata.user.password: ${spring.boot.admin.client.password}

   datasource:
     hikari:
      jdbc-url: jdbc:mysql://localhost:3306/onesaitplatform_config?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&autoReconnect=true&nullDatabaseMeansCurrent=true
      username: root
      password: ENC(v6o0Jud8aASYCkRb+u0RTICFUR8Pd5ph)
      connection-timeout: 10000
      driver-class-name: com.mysql.cj.jdbc.Driver
#      jdbc-url: jdbc:postgresql://localhost:5432/onesaitplatform_config
#      username: postgres
#      password: ENC(v6o0Jud8aASYCkRb+u0RTICFUR8Pd5ph)
#      driver-class-name: org.postgresql.Driver
      minimum-idle: 10
      maximum-pool-size: 30
   autoconfigure:
      exclude:
         - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
    #tomcat:
      # Number of ms to wait before throwing an exception if no connection is available.
      #max-wait: 10000
      # Maximum number of active connections that can be allocated from this pool at the same time.
      #max-active: 50
   jpa:
      # The SQL dialect makes Hibernate generate better SQL for the chosen database
      properties.hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
#      properties.hibernate.dialect: org.hibernate.dialect.PostgreSQL95Dialect
      # Hibernate ddl auto (create, create-drop, validate, update
      hibernate.ddl-auto: validate
      properties:
        hibernate:
          format_sql: false
          show_sql: false


          #region.factory_class: com.hazelcast.hibernate.HazelcastCacheRegionFactory
          #cache:
            #use_second_level_cache: true
            #use_query_cache: true
            #region.factory_class: com.hazelcast.hibernate.HazelcastCacheRegionFactory
            #hazelcast:
            #  configuration_file_path: hazelcast-client.xml
            #  use_native_client: true
            #  native_client_address: localhost
            #  native_client_group: onesaitplatform
            #  native_client_password: onesaitplatform
   jmx:
    enabled: true
spring.elasticsearch.jest.uris: ${onesaitplatform.database.elasticsearch.sql.connector.http.endpoint}
spring.elasticsearch.jest.read-timeout: ${onesaitplatform.database.elasticsearch.sql.connectionTimeout.millis}

## LOGGING CONF
logging:
   file.path: ./target/
   file.name: ${spring.application.name}
   level:
      com.minsait: INFO
      org.springframework.boot: INFO
      org.apache.kafka: ERROR
      org.zalando.logbook: TRACE  
      com.minsait.onesait.platform.persistence.external: DEBUG
#      org.springframework.boot.autoconfigure: DEBUG